<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Doohyun Kim</title>
 <link href="http://localhost:4000/atom.xml" rel="self"/>
 <link href="http://localhost:4000/"/>
 <updated>2019-05-30T11:59:47+09:00</updated>
 <id>http://localhost:4000</id>
 <author>
   <name>SG Lee</name>
   <email></email>
 </author>

 
 <entry>
   <title></title>
   <link href="http://localhost:4000/2019/05/30/2017-02-22-rails-active-record-query-interface-frequent-using/"/>
   <updated>2019-05-30T11:59:47+09:00</updated>
   <id>http://localhost:4000/2019/05/30/2017-02-22-rails-active-record-query-interface-frequent-using</id>
   <content type="html">&lt;h2 id=&quot;find_each&quot;&gt;.find_each&lt;/h2&gt;

&lt;p&gt;모든 record에 대해서 일괄작업시 자주 사용&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Item.find_each do |i|
    i.update_weekly_ranks
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>Javascript에서 constants 관리하기</title>
   <link href="http://localhost:4000/dev/react/javascript/2019/05/28/manage-constants-in-javascript/"/>
   <updated>2019-05-28T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/react/javascript/2019/05/28/manage-constants-in-javascript</id>
   <content type="html">&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/components/users/constants.js&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userStatesActive&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userStatesInActive&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userStatesLabels&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;userStatesActive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;active user&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;userStatesActive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;active user&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;userStatesActive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;userStatesInActive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;userStatesLabels&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/components/users/userStates.jsx&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;userStatesLabels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./constants'&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;userStatesLabels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/span&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>React + ESLint + VSCode</title>
   <link href="http://localhost:4000/dev/react/eslint/vscode/2019/05/09/eslint-setup/"/>
   <updated>2019-05-09T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/react/eslint/vscode/2019/05/09/eslint-setup</id>
   <content type="html">&lt;h2 id=&quot;vscode-eslint-설치&quot;&gt;VSCode eslint 설치&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;command + shift + p&lt;/li&gt;
  &lt;li&gt;Install Extensions&lt;/li&gt;
  &lt;li&gt;Search ‘ESLint’&lt;/li&gt;
  &lt;li&gt;Click Install&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;저장시-eslint-자동-고침-설정&quot;&gt;저장시 eslint 자동 고침 설정&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;command + ,&lt;/li&gt;
  &lt;li&gt;Search ‘ESLint’&lt;/li&gt;
  &lt;li&gt;Turn on auto fix on save&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;eslint-config-airbnb-적용&quot;&gt;eslint-config-airbnb 적용&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// Package 확인
npm info &quot;eslint-config-airbnb@latest&quot; peerDependencies
// with CRA v2.0
npm install eslint-config-airbnb --save
// without CRA
npx install-peerdeps --dev eslint-config-airbnb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;eslint-config-prettier-적용&quot;&gt;eslint-config-prettier 적용&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install eslint-config-prettier --save
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.eslintrc&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  extends: [
    prettier
  ]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;eslint-config&quot;&gt;eslint config&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.eslintrc&lt;/code&gt; 파일 생성&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module.exports = {
  env: {
    browser: true,
    es6: true,
    jest: true
  },
  extends: [
    &quot;eslint:recommended&quot;,
    &quot;plugin:react/recommended&quot;,
    &quot;airbnb&quot;,
    &quot;prettier&quot;,
    &quot;prettier/babel&quot;,
    &quot;prettier/react&quot;,
    &quot;prettier/standard&quot;,
    &quot;prettier/unicorn&quot;,
    &quot;prettier/vue&quot;
  ],
  globals: {
    Atomics: &quot;readonly&quot;,
    SharedArrayBuffer: &quot;readonly&quot;
  },
  parser: &quot;babel-eslint&quot;,
  parserOptions: {
    ecmaFeatures: {
      jsx: true
    },
    ecmaVersion: 2018,
    sourceType: &quot;module&quot;
  },
  plugins: [&quot;react&quot;],
  rules: {
    &quot;react/prefer-stateless-function&quot;: 0,
    &quot;import/no-named-as-default&quot;: 0,
    &quot;react/jsx-filename-extension&quot;: 0,
    &quot;import/no-extraneous-dependencies&quot;: [2, { devDependencies: true }]
  }
};

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;특정-lint-rule-제거하기&quot;&gt;특정 lint rule 제거하기&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.eslintrc&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; rules: {
    &quot;react/prefer-stateless-function&quot;: 0,
 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;dev-save-module-이-project-외부에-있다고-나올-때&quot;&gt;dev save module 이 project 외부에 있다고 나올 때&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  rules: {
    &quot;import/no-extraneous-dependencies&quot;: [2, { devDependencies: true }]
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;jest-사용시-it-이-undefined-로-나올-때&quot;&gt;Jest 사용시, ‘it’ 이 undefined 로 나올 때&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  env: {
    jest: true
  },
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;document-undefined&quot;&gt;document undefined&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  env: {
    browser: true
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;credit : &lt;a href=&quot;https://velog.io/@velopert/eslint-and-prettier-in-react&quot;&gt;Velopert-리액트 프로젝트에 ESLint 와 Prettier 끼얹기&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Rails HABTM convention과 다른 table을 이용하기</title>
   <link href="http://localhost:4000/dev/rails/2018/05/28/rails-habtm-different-table-name/"/>
   <updated>2018-05-28T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2018/05/28/rails-habtm-different-table-name</id>
   <content type="html">&lt;h1 id=&quot;0&quot;&gt;0&lt;/h1&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;has_and_belongs_to_many :watching, :class_name=&amp;gt;&quot;Person&quot;, :join_table =&amp;gt; :watch_people_projects
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://tedhealey.blogspot.kr/2011/02/habtm-rails-with-different-table-name.html&quot;&gt;solution credit&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Rails 개발환경 설정 하기</title>
   <link href="http://localhost:4000/dev/rails/2018/05/27/rails-dev-env/"/>
   <updated>2018-05-27T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2018/05/27/rails-dev-env</id>
   <content type="html">&lt;h2 id=&quot;bundler-설치&quot;&gt;bundler 설치&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo &quot;gem: --no-rdoc --no-ri&quot; &amp;gt;&amp;gt; ~/.gemrc

&amp;gt; gem install bundler
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;gem-설치&quot;&gt;gem 설치&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; bundle install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;gem-설치---pg-관련-에러&quot;&gt;gem 설치 - PG 관련 에러&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Installing pg 0.17.1 with native extensions
Gem::Ext::BuildError: ERROR: Failed to build gem native extension.

/Users/sgwanlee/.rbenv/versions/2.2.5/bin/ruby -r ./siteconf20180527-43505-1g6vboj.rb. extconf.rb
checking for pg_config... no
No pg_config... trying anyway. If building fails, please try again with
 --with-pg-config=/path/to/pg_config
checking for libpq-fe.h... no
Can't find the 'libpq-fe.h header
*** extconf.rb failed ***
Could not create Makefile due to some reason, probably lack of necessary
libraries and/or headers.  Check the mkmf.log file for more details.  You may
need configuration options.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/19625487/impossible-to-install-pg-gem-on-my-mac-with-mavericks&quot;&gt;solution&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://postgresapp.com/&quot;&gt;postgresql.app&lt;/a&gt; 사용하고&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;아래와 같이 pg gem 설치&lt;/p&gt;

    &lt;p&gt;gem install pg -v 0.17.1 – –with-pg-config=/Applications/Postgres.app/Contents/Versions/latest/bin/pg_config&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;postgresql cli command&lt;/p&gt;

    &lt;p&gt;sudo mkdir -p /etc/paths.d &amp;amp;&amp;amp;
echo /Applications/Postgres.app/Contents/Versions/latest/bin | sudo tee /etc/paths.d/postgresapp&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</content>
 </entry>
 
 <entry>
   <title>AWS RDS를 로컬에 복사하기</title>
   <link href="http://localhost:4000/dev/aws/2018/05/27/copy-aws-rds-pg-to-local/"/>
   <updated>2018-05-27T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/aws/2018/05/27/copy-aws-rds-pg-to-local</id>
   <content type="html">&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Change your database RDS instance security group to allow your machine to access it.
Add your ip to the security group to acces the instance via Postgres.
Make a copy of the database using pg_dump
$ pg_dump -h &amp;lt;public dns&amp;gt; -U &amp;lt;my username&amp;gt; -f &amp;lt;name of dump file .sql&amp;gt; &amp;lt;name of my database&amp;gt;
you will be asked for postgressql password.
a dump file(.sql) will be created
Restore that dump file to your local database.
but you might need to drop the database and create it first
$ psql -U &amp;lt;postgresql username&amp;gt; -d &amp;lt;database name&amp;gt; -f &amp;lt;dump file that you want to restore&amp;gt;
the database is restored
pg_restore -h &amp;lt;host&amp;gt; -U &amp;lt;username&amp;gt; -c -d &amp;lt;database name&amp;gt; &amp;lt;filename to be restored&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/syafiqfaiz/5273cd41df6f08fdedeb96e12af70e3b&quot;&gt;solution credit&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Google Chart 로 그래프 그리기</title>
   <link href="http://localhost:4000/dev/google-chart/2018/05/06/google-chart/"/>
   <updated>2018-05-06T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/google-chart/2018/05/06/google-chart</id>
   <content type="html">&lt;h2 id=&quot;gem-google_visualr&quot;&gt;Gem ‘google_visualr’&lt;/h2&gt;

&lt;p&gt;Google chart를 사용할 수 있는 gem이 여러개 있는데, 그중에 google_visualr를 사용한 이유는 ‘stepped_area_chart’ 같은
새로운 chart를 지원하고 있는 gem이어서 선택하게 되었다.&lt;/p&gt;

&lt;p&gt;사용법은 간단한데,&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;datatable에 data를 넣고&lt;/li&gt;
  &lt;li&gt;option을 설정하고&lt;/li&gt;
  &lt;li&gt;원하는 차트 class의 object를 만들 때, data_table과 option을 넘겨주고&lt;/li&gt;
  &lt;li&gt;view에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;render_chart&lt;/code&gt;를&lt;/li&gt;
&lt;/ol&gt;

&lt;controller&gt;

    data_table = GoogleVisualr::DataTable.new
    data_table.new_column('string', 'date')
    data_table.new_column('number', 'rank')

    data_table.add_rows(rows)

    option = {...}

    @chart = GoogleVisualr::Interactive::SteppedAreaChart.new(data_table, option)

    respond_to do |format|
      format.js
    end


&lt;view&gt;
	
	$('.item-ranks__chart').append('&amp;lt;%= j render_chart(@chart, &quot;item-ranks__chart&quot;) %&amp;gt;');


---
&lt;/view&gt;&lt;/controller&gt;
</content>
 </entry>
 
 <entry>
   <title>Javascript - Namespace 사용하기</title>
   <link href="http://localhost:4000/dev/javascript/2017/04/14/javascript-namespace/"/>
   <updated>2017-04-14T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/javascript/2017/04/14/javascript-namespace</id>
   <content type="html">&lt;h2 id=&quot;anti-pattern--glbal-variable&quot;&gt;Anti-Pattern : glbal variable&lt;/h2&gt;

&lt;p&gt;당연시 되어야 될 click event가 동자하지 않았다.
이유는 다른 파일이지만 같은 함수명을 사용하였기 때문!&lt;/p&gt;

&lt;p&gt;모든 함수를 전역변수로 설정해서 사용했기에 일어나는 문제다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//a.js
var add_to_checklist = function(){
    $('.footer__checklist__link').click( function(e) {
        e.preventDefault();
        console.log(&quot;A&quot;);
    });
}

//b.js
var add_to_checklist = function(){
    $('.header__checklist__link').click( function(e) {
        e.preventDefault();
        console.log(&quot;B&quot;);
    });
}

// event handling
add_to_checklist();     // not working.
                        // from a.js? from b.js?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;namespace&quot;&gt;NameSpace&lt;/h2&gt;

&lt;p&gt;NameSpace를 설정하면, 같은 함수명을 사용해도 겹치지 않게 사용할 수 있다.
사실 Javascript 코드 양이 얼마 되지 않을 것 같아서 NameSpace를 사용하지 않았는데
이런 저런 기능들을 붙이다 보니 어느 덧 파일수도 늘어나고, 어떤 함수명을 썼는지도 기억하지 못하게 된 것.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//a.js
var footer = {
    add_to_checklist : function(){
        $('.footer__checklist__link').click( function(e) {
            e.preventDefault();
            console.log(&quot;A&quot;);
        });
    }
}

//b.js
var header = {
    add_to_checklist : function(){
        $('.header__checklist__link').click( function(e) {
            e.preventDefault();
            console.log(&quot;B&quot;);
        });
    }
}

//event handling
footer.add_to_checklist();      // from a.js
header.add_to_checklist();      // from b.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

</content>
 </entry>
 
 <entry>
   <title>Rails - 로그인 유지하기</title>
   <link href="http://localhost:4000/dev/rails/2017/04/07/rails-permanent-login/"/>
   <updated>2017-04-07T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2017/04/07/rails-permanent-login</id>
   <content type="html">&lt;p&gt;나중에 시간이 나면 글을 다시 적기로 하고, reference만 우선 남겨준다&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.railstutorial.org/book/advanced_login&quot;&gt;https://www.railstutorial.org/book/advanced_login&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://railscasts.com/episodes/274-remember-me-reset-password&quot;&gt;http://railscasts.com/episodes/274-remember-me-reset-password&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Rails Error Unknown Format</title>
   <link href="http://localhost:4000/2017/04/04/rails-error-unknown-format/"/>
   <updated>2017-04-04T00:00:00+09:00</updated>
   <id>http://localhost:4000/2017/04/04/rails-error-unknown-format</id>
   <content type="html">
&lt;p&gt;ActionController::UnknownFormat&lt;/p&gt;

&lt;p&gt;(before)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;resources :items do
    collection do 
      post :check
    end
  end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;(after)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;resources :items do
    member do 
      post :check
    end
  end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Gmail Touch region 구현</title>
   <link href="http://localhost:4000/dev/ux/2017/03/31/gmail-touch-region/"/>
   <updated>2017-03-31T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/ux/2017/03/31/gmail-touch-region</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;https://scontent-icn1-1.xx.fbcdn.net/v/t1.0-9/17553501_10158514881355327_4577364518862071458_n.jpg?oh=4d3823b9caed401fb6c309ef86199598&amp;amp;oe=59535369&quot; alt=&quot;gmail-touch-region&quot; /&gt;
padding으로 size를 잡고
negative margin으로 layout을 수정함&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Rails Sortable List</title>
   <link href="http://localhost:4000/2017/03/27/rails-sortable-list/"/>
   <updated>2017-03-27T00:00:00+09:00</updated>
   <id>http://localhost:4000/2017/03/27/rails-sortable-list</id>
   <content type="html">
&lt;p&gt;http://railscasts.com/episodes/147-sortable-lists?autoplay=true&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Rails - View에서 현재 controller 이름 사용하기</title>
   <link href="http://localhost:4000/dev/rails/2017/03/27/rails-controller-name-in-view/"/>
   <updated>2017-03-27T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2017/03/27/rails-controller-name-in-view</id>
   <content type="html">&lt;p&gt;controller에 따라서 뭔가 분기가 필요할 때.&lt;/p&gt;

&lt;p&gt;Rails는 &lt;code class=&quot;highlighter-rouge&quot;&gt;controller_name&lt;/code&gt;이라는 variable에 현재 controller 이름을 저장하고 있다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;%= if controller_name == 'blogs' %&amp;gt;
    ~~
&amp;lt;% end %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>Rails bug - current_page? No route matches</title>
   <link href="http://localhost:4000/dev/rails/2017/03/27/rails-bug-current-page-no-route/"/>
   <updated>2017-03-27T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2017/03/27/rails-bug-current-page-no-route</id>
   <content type="html">&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;current_page?&lt;/code&gt; 사용시 No route 에러 발생&lt;/p&gt;

&lt;p&gt;error
    current_page?(controller: “users”, action: “show”)&lt;/p&gt;

&lt;p&gt;bug fix
    current_page?(controller: “users”, action: “show”, id: current_user.id)&lt;/p&gt;

&lt;p&gt;아마도 url에서 id값을 가져오는데, root 인 경우엔 id 값이 없어서 에러가 발생
추가적으로 id 값을 전달해서 해결&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/5627958/no-routes-matches-when-using-current-page-in-rails-3&quot;&gt;stackoverflow&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Rails - has_and_belongs_to_many</title>
   <link href="http://localhost:4000/dev/rails/2017/03/03/rails-habtm/"/>
   <updated>2017-03-03T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2017/03/03/rails-habtm</id>
   <content type="html">&lt;h2 id=&quot;option&quot;&gt;Option&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://guides.rubyonrails.org/association_basics.html#scopes-for-has-and-belongs-to-many-distinct&quot;&gt;distinct&lt;/a&gt;
중복 assocation 생성을 금지&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class Ingredient &amp;lt; ActiveRecord::Base
    has_and_belongs_to_many :items, -&amp;gt; {distinct}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ingredient.items.size       // 1
ingredient.items « new_item
ingredient.items « new_item
ingredient.items            // 2&lt;/p&gt;

&lt;h2 id=&quot;method&quot;&gt;Method&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://guides.rubyonrails.org/association_basics.html#methods-added-by-has-and-belongs-to-many-collection-delete-object&quot;&gt;collection.delete(object)&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;assocation관계만 제거. object가 제거되지는 않음&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;collection.delete_all&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;모든 association관계 제거. object는 제거되지 않음&lt;/p&gt;

    &lt;p&gt;irb(main):003:0&amp;gt; Item.find(139).ingredients.delete_all
  Item Load (0.8ms)  SELECT  “items”.* FROM “items” WHERE “items”.”id” = $1 LIMIT 1  [[“id”, 139]]
  Ingredient Load (1.1ms)  SELECT DISTINCT “ingredients”.* FROM “ingredients” INNER JOIN “ingredients_items” ON “ingredients”.”id” = “ingredients_items”.”ingredient_id” WHERE “ingredients_items”.”item_id” = $1  [[“item_id”, 139]]
  SQL (3.3ms)  DELETE FROM “ingredients_items” WHERE “ingredients_items”.”item_id” = $1 AND “ingredients_items”.”ingredient_id” IN (54, 36, 41, 27, 28, 55, 57, 61, 62, 56, 59, 60, 58, 38)  [[“item_id”, 139]]&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;factory_girl&quot;&gt;&lt;a href=&quot;http://stackoverflow.com/questions/1484374/how-to-create-has-and-belongs-to-many-associations-in-factory-girl&quot;&gt;Factory_girl&lt;/a&gt;&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FactoryGirl.define do
  factory :company do
    #company attributes
  end

  factory :user do
   companies {[FactoryGirl.create(:company)]}
   #user attributes
  end

end


company = FactoryGirl.create(:company, #{company attributes})
user = FactoryGirl.create(:user, :companies =&amp;gt; [company])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>Heroku - app option을 사용하라고 error 발생시</title>
   <link href="http://localhost:4000/dev/heroku/2017/03/02/heroku-no-app-option/"/>
   <updated>2017-03-02T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/heroku/2017/03/02/heroku-no-app-option</id>
   <content type="html">&lt;p&gt;heroku cli를 세팅하는 경우에, 다음과 같은 error가 나올 때가 있음.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Run this command from inside an app folder or specify which app to use with --app APP
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;heroku cli는 git remote로 등록된 heroku git repository 주소를 보고 어떤 app인지를 판단함.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; git remote
origin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;머신을 새로 세팅하는 경우 remote에 heroku가 없어서 app을 지정해 달라는 error를 발생시킴
다음과 같이 remote repository를 등록하면 더 이상 &lt;code class=&quot;highlighter-rouge&quot;&gt;-app&lt;/code&gt; 옵션이 필요없다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; git remote add heroku YOUR_HEROKU_REPOSITORY
&amp;gt; git remote
origin
remote
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>Heroku - Deploy시에 자동으로 migration 하기</title>
   <link href="http://localhost:4000/dev/rails/heroku/2017/03/01/heroku-rails-migration-when-release/"/>
   <updated>2017-03-01T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/heroku/2017/03/01/heroku-rails-migration-when-release</id>
   <content type="html">&lt;p&gt;Profile 을 root directory에 추가&lt;/p&gt;

&lt;p&gt;Procfile&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;release: bundle exec rake db:migrate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;all credit [aspiringwebdev.com][1]
[1]: http://aspiringwebdev.com/run-rails-migrations-automatically-on-heroku/&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Rails - SSL 제거시 발생한 문제 (config.force_ssl의 비밀)</title>
   <link href="http://localhost:4000/dev/rails/2017/02/28/how-to-disable-ssl-and-rails-force-ssl/"/>
   <updated>2017-02-28T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2017/02/28/how-to-disable-ssl-and-rails-force-ssl</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/17776530/disabling-ssl-for-a-heroku-app&quot;&gt;stackoverflow - Disabling SSL for a Heroku App&lt;/a&gt; 에 모든 credit이 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;문제와-현상&quot;&gt;문제와 현상&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;heroku에서 ssl을 설정했다가, ssl 인증서를 지워버림&lt;/li&gt;
  &lt;li&gt;그 뒤부터 bebetem.herokuapp.com 으로는 접속이 되는데, bebetem.com 으로는 http를 명시해도 https로 redirect되면서 접속이 안됨&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;heroku logs -t&lt;/code&gt; 에서 해당 redirection이 로그로 남지 않음&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;시도한-방법&quot;&gt;시도한 방법&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;우선 rails의 &lt;code class=&quot;highlighter-rouge&quot;&gt;config.force_ssl=false&lt;/code&gt;로 변경함&lt;/li&gt;
  &lt;li&gt;DNS에서 https://www.bebetem.com 으로 forwarding을 해놨기 때문에, 그 때문인 것 같아서 http로 forwarding을 바꿨으나 해결되지 않음&lt;/li&gt;
  &lt;li&gt;heroku에서 ssl을 사용하면 dns target이 bebetem.herokuapp.com 에서 bebetem.com.herokdns.com 으로 변경되었었음. 그래서 다시 원래와 같이 bebetem.herokuapp.com으로 dns cname을 변경하였으나 dns를 찾지 못해서 에러가 발생&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;해결책&quot;&gt;해결책&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;SSL설정시 rails에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;config.force_ssl=true&lt;/code&gt; 를 설정하였음&lt;/li&gt;
  &lt;li&gt;이 설정은 &lt;code class=&quot;highlighter-rouge&quot;&gt;Strict Transport Security&lt;/code&gt; header에 max-age 값을 1년으로 설정해버림&lt;/li&gt;
  &lt;li&gt;이 header값은 브라우저가 1년동안은 서버로 접속할 때 https를 사용하도록 강제함&lt;/li&gt;
  &lt;li&gt;그래서 아무리 heroku logs -t 로 로그를 보아도 http에서 https로 redirect되는 로그를 찾아볼 수가 없었음&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;trick&quot;&gt;trick&lt;/h2&gt;

&lt;p&gt;application_controller.rb&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;before_filter :expire_hsts
private
  def expire_hsts
    response.headers[&quot;Strict-Transport-Security&quot;] = 'max-age=0'
  end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;브라우저의 cache를 삭제하고, bebetem.com에 접속하니 http로 접속이 가능!&lt;/p&gt;

&lt;hr /&gt;

</content>
 </entry>
 
 <entry>
   <title>Rails - jQuery DataTable pagination</title>
   <link href="http://localhost:4000/dev/rails/2017/02/27/rails-datatable-pagination/"/>
   <updated>2017-02-27T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2017/02/27/rails-datatable-pagination</id>
   <content type="html">&lt;p&gt;params로 넘어오는 값이 &lt;a href=&quot;https://github.com/railscasts/340-datatables/blob/master/store-after/app/datatables/products_datatable.rb&quot;&gt;railscast github source&lt;/a&gt;와 좀 바뀐게 있다.&lt;/p&gt;

&lt;p&gt;params[:sSearch] –&amp;gt; params[:search][:value]
params[:iDisplayStart] –&amp;gt; params[:start]
params[:iDisplayLength] –&amp;gt; params[:length]
params[:iSortCol_0] –&amp;gt; params[:order][‘0’][‘column’]
params[:sSortDir_0] –&amp;gt; params[:order][‘0’][‘dir’]&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;http://railscasts.com/episodes/340-datatables?autoplay=true&quot;&gt;railscast 340-datatable&lt;/a&gt;
&lt;a href=&quot;https://github.com/railscasts/340-datatables/blob/master/store-after/app/datatables/products_datatable.rb&quot;&gt;railscast github source&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Rails Custom Layout</title>
   <link href="http://localhost:4000/2017/02/27/rails-custom-layout/"/>
   <updated>2017-02-27T00:00:00+09:00</updated>
   <id>http://localhost:4000/2017/02/27/rails-custom-layout</id>
   <content type="html">
&lt;ul&gt;
  &lt;li&gt;일반 사용자와 Admin 사용자의 UI는 매우 다름&lt;/li&gt;
  &lt;li&gt;Rails는 controller에 따라서 다른 layout을 사용 할 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;http://guides.rubyonrails.org/layouts_and_rendering.html#finding-layouts&quot;&gt;rails guide - layouts and rendering&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Rails - libreadline 에러 해결하기</title>
   <link href="http://localhost:4000/dev/rails/2017/02/22/rails-libreadline-error/"/>
   <updated>2017-02-22T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2017/02/22/rails-libreadline-error</id>
   <content type="html">&lt;h2 id=&quot;환경&quot;&gt;환경&lt;/h2&gt;

&lt;p&gt;rails 4.2.6
ruby 2.2.5&lt;/p&gt;

&lt;h2 id=&quot;시작은-libreadline-not-found&quot;&gt;시작은 libreadline not found&lt;/h2&gt;

&lt;p&gt;아래 에러가 나면서 모든 rails command가 갑자기 먹통이 됨&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Users/sglee/.rbenv/versions/2.2.5/lib/ruby/gems/2.2.0/gems/activesupport-4.2.6/lib/active_support/dependencies.rb:274:in `require': dlopen(/Users/sglee/.rbenv/versions/2.2.5/lib/ruby/2.2.0/x86_64-darwin15/readline.bundle, 9): Library not loaded: /usr/local/opt/readline/lib/libreadline.6.2.dylib (LoadError)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;알려진-해결책-1-symbolic-link&quot;&gt;알려진 해결책 #1. symbolic link&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ln -s /usr/local/opt/readline/lib/libreadline.7.0.dylib /usr/local/opt/readline/lib/libreadline.6.2.dylib
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;효과없음&lt;/p&gt;

&lt;h2 id=&quot;알려진-해결책-2-rb-readline&quot;&gt;알려진 해결책 #2. rb-readline&lt;/h2&gt;

&lt;p&gt;Gemfile&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;group :development do
    gem 'rb-readline'
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;효과없음&lt;/p&gt;

&lt;h2 id=&quot;알려진-해결책-3-readline-설치--ruby-재설치&quot;&gt;알려진 해결책 #3. readline 설치 &amp;amp; ruby 재설치&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install readline ruby-build
rbenv install 2.2.5
gem prinstine -all
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;효과없음&lt;/p&gt;

&lt;h2 id=&quot;내가-해결한-방법&quot;&gt;내가 해결한 방법&lt;/h2&gt;

&lt;p&gt;git repository를 다시 cloning&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mv bebetem bebetem_old
git clone &amp;lt;git repository&amp;gt; bebetem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;의심되는 원인이나 확인은 안됨&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;pow
    &lt;ul&gt;
      &lt;li&gt;pow를 제거했느나 똑같은 현상이 발생&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://mikekusold.com/development/ruby-on-rails-console-wont-start.html&quot;&gt;알려진 해결책 #3 - mikekusold.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>JQuery Event</title>
   <link href="http://localhost:4000/dev/jquery/2017/02/16/jquery-event/"/>
   <updated>2017-02-16T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/jquery/2017/02/16/jquery-event</id>
   <content type="html">&lt;h2 id=&quot;event-삭제--unbind--off&quot;&gt;Event 삭제 / unbind / off&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$(selector).off('event_name');


$('.tab').on('click', function(){...});
$('.tab').off('click');

$('.tab').on('click.mynamespace', funcion(){...});
$('.tab').off('click.mynamespace');
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;from. &lt;a href=&quot;http://stackoverflow.com/questions/209029/best-way-to-remove-an-event-handler-in-jquery&quot;&gt;stackoverflow&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;hover-event-삭제--unbind--off&quot;&gt;Hover event 삭제 / unbind / off&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$(selector).hover(function(){...});
$(selector).off('mouseenter mouseleave')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;from. &lt;a href=&quot;http://stackoverflow.com/questions/805133/how-do-i-unbind-hover-in-jquery&quot;&gt;stackoverflow&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

</content>
 </entry>
 
 <entry>
   <title>Jekyll에 Search 기능 넣기 Lunrjs</title>
   <link href="http://localhost:4000/dev/jekyll/2017/02/14/jekyll-search/"/>
   <updated>2017-02-14T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/jekyll/2017/02/14/jekyll-search</id>
   <content type="html">&lt;p&gt;house201 블로그는 jekyll을 이용해서 만들었다.
다 좋은데 static page 기반이라 검색이 안된다는게 조금은 불만.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyll.tips/jekyll-casts/jekyll-search-using-lunr-js/&quot;&gt;Jekyll.tips&lt;/a&gt;에 올라온 screen cast를 보고 검색기능을 넣어보기로 했다.&lt;/p&gt;

&lt;h2 id=&quot;jekyll-tips-codes&quot;&gt;Jekyll tips codes&lt;/h2&gt;

&lt;p&gt;search.html&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
layout: search
---

&amp;lt;div id=&quot;search-results&quot;&amp;gt;&amp;lt;/div&amp;gt;

&amp;lt;script&amp;gt;
  window.store = {
    {% for post in site.posts %}
      &quot;{{ post.url | slugify }}&quot;: {
        &quot;title&quot;: &quot;{{ post.title | xml_escape }}&quot;,
        &quot;category&quot;: &quot;{{ post.categories | xml_escape }}&quot;,
        &quot;published_at&quot; : &quot;{{post.date | date: '%b %d, %y' }}&quot;,
        &quot;url&quot;: &quot;{{ post.url | xml_escape }}&quot;
      }
      {% unless forloop.last %},{% endunless %}
    {% endfor %}
  };
&amp;lt;/script&amp;gt;
&amp;lt;script src=&quot;/js/lunr.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&quot;/js/search.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;window.store&lt;/code&gt; 에 모든 검색 대상을 저장하는 방식이다. post양이 엄청 많다면 browser가 느려질 수 있겠지만. 제목과 카테고리 정도라면 큰 문제는 안 될 것 같다.&lt;/p&gt;

&lt;p&gt;_layouts/search.html&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
layout: default
---

{{content}}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;js/search.js&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(function() {
  function displaySearchResults(results, store) {
    var searchResults = document.getElementById('search-results');

    if (results.length) { // Are there any results?
      var appendString = '';

      for (var i = 0; i &amp;lt; results.length; i++) {  // Iterate over the results
        var item = store[results[i].ref];
        appendString += '&amp;lt;div class=&quot;search__result&quot;&amp;gt;&amp;lt;a href=&quot;' + item.url + '&quot;&amp;gt;&amp;lt;h5 class=&quot;post-title&quot;&amp;gt;' + item.title + '&amp;lt;/h5&amp;gt;&amp;lt;/a&amp;gt;';
        appendString += '&amp;lt;div class=&quot;post-description&quot;&amp;gt;&amp;lt;small class=&quot;post-date&quot;&amp;gt;' + item.published_at + '&amp;lt;/small&amp;gt;&amp;lt;/div&amp;gt;';
        appendString += '&amp;lt;/div&amp;gt;'
      }

      searchResults.innerHTML = appendString;
    } else {
      searchResults.innerHTML = '&amp;lt;li&amp;gt;No results found&amp;lt;/li&amp;gt;';
    }
  }

  function getQueryVariable(variable) {
    var query = window.location.search.substring(1);
    var vars = query.split('&amp;amp;');

    for (var i = 0; i &amp;lt; vars.length; i++) {
      var pair = vars[i].split('=');

      if (pair[0] === variable) {
        return decodeURIComponent(pair[1].replace(/\+/g, '%20'));
      }
    }
  }

  var searchTerm = getQueryVariable('query');

  if (searchTerm) {
    document.getElementById('search-box').setAttribute(&quot;value&quot;, searchTerm);

    // Initalize lunr with the fields it will be searching on. I've given title
    // a boost of 10 to indicate matches on this field are more important.
    var idx = lunr(function () {
      this.field('id');
      this.field('title', { boost: 10 });
      this.field('category');
    });

    for (var key in window.store) { // Add the data to lunr
      idx.add({
        'id': key,
        'title': window.store[key].title,
        'category': window.store[key].category,
      });

      var results = idx.search(searchTerm); // Get lunr to perform a search
      displaySearchResults(results, window.store); // We'll write this in the next section
    }
  }
})();
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;displaySearchResults&lt;/code&gt; 이 부분은 검색결과를 어떻게 화면에다가 붙여줄 건지에 대한 부분&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;getQueryVariable&lt;/code&gt; 이 부분은 query로 들어온 값을 검색어 배열로 바궈주는 부분&lt;/p&gt;

&lt;p&gt;나머지 부분이 lurn에 모든 포스트 정보를 집어넣고, 검색어에 따라 일치하는 정보만 가져오는 부분이다.&lt;/p&gt;

&lt;h2 id=&quot;jslunrminjs&quot;&gt;js/lunr.min.js&lt;/h2&gt;

&lt;p&gt;공식 릴리즈 버전은 한글 검색이 지원이 안되더라. 다 만들고나서 멘붕하고 있었는데, 대부분 이럴 때 korean support보다 chinese support로 검색하면 원하는 답을 찾는 경우가 많았다.&lt;/p&gt;

&lt;p&gt;정말 능력이 좋아서 korean support 버전을 척척 만들어내면 좋겠지만, 나는 어디까지나 필요한 것을 잘 조합해서 쓰고 싶은 정도니깐.&lt;/p&gt;

&lt;p&gt;아래 chinese support 버전에서 lurn.min.js를 다운받아 사용해 보니 한글 검색도 잘 된다!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/codepiano/lunr.js&quot;&gt;lurn chinese support version&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;언제나 할 때는 헤메다가, 다 하고 블로그로 쓰니 정말 쉬워보인다.&lt;/p&gt;

&lt;p&gt;–&lt;/p&gt;

&lt;p&gt;references&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://jekyll.tips/jekyll-casts/jekyll-search-using-lunr-js/&quot;&gt;jekyll.tips&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/codepiano/lunr.js&quot;&gt;lunr chinese support&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>Adapt - Tim Harford</title>
   <link href="http://localhost:4000/book/2017/2017/02/14/adapt/"/>
   <updated>2017-02-14T00:00:00+09:00</updated>
   <id>http://localhost:4000/book/2017/2017/02/14/adapt</id>
   <content type="html">&lt;p&gt;비니지스/일상생활 적응 세 가지 원칙&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;새로운 것을 시도, 일부 실패할 것을 예상&lt;/li&gt;
  &lt;li&gt;살아남을 정도로 실패&lt;/li&gt;
  &lt;li&gt;실패시 깨닫기&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>Rails - 유저 role 별로 cache 사용</title>
   <link href="http://localhost:4000/dev/rails/2017/02/13/rails-cache-per-user-role/"/>
   <updated>2017-02-13T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2017/02/13/rails-cache-per-user-role</id>
   <content type="html">&lt;h2 id=&quot;유저-role--일반-유저와-admin-유저&quot;&gt;유저 role : 일반 유저와 admin 유저&lt;/h2&gt;

&lt;p&gt;Rails의 cache는 4.0부터 key based cache를 지원합니다&lt;/p&gt;

&lt;p&gt;key값은 &lt;code class=&quot;highlighter-rouge&quot;&gt;cache&lt;/code&gt; method에 넘겨주는 object의 updated_at 값을 기반으로해서, 해당 object가 수정되면 자동으로 cache가 update됩니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;% cache project do %&amp;gt;
  &amp;lt;b&amp;gt;All the topics on this project&amp;lt;/b&amp;gt;
  &amp;lt;%= render project.topics %&amp;gt;
&amp;lt;% end %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;cache key&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;views/projects/123-20120806214154/7a1156131a6928cb0026877f8b749ac9
  ^class   ^id ^updated_at    ^template tree digest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;유저의 role 등 view가 바뀌는 dependency를 가진 모든 것을 array형태로 &lt;code class=&quot;highlighter-rouge&quot;&gt;cache&lt;/code&gt; method에 넘겨줄 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;% cache [admin_user?, project] do %&amp;gt;
  &amp;lt;b&amp;gt;All the topics on this project&amp;lt;/b&amp;gt;
  &amp;lt;%= render project.topics %&amp;gt;
  &amp;lt;%= render 'admin' if admin_user? %&amp;gt;
&amp;lt;% end %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;cache key&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;views/false/projects/123-20120806214154/7a1156131a6928cb0026877f8b749ac9
        ^ admin_user? value
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;cache key를 보면 &lt;code class=&quot;highlighter-rouge&quot;&gt;admin_user?&lt;/code&gt; 라는 값에 따라 다른 cache key가 발급되고, 다른 cached page가 로딩된다는 것을 알 수 있습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;(Rails API - cache)&lt;a href=&quot;http://api.rubyonrails.org/classes/ActionView/Helpers/CacheHelper.html#method-i-cache&quot;&gt;1&lt;/a&gt;
(Rails의 key-based cache에 대한 DHH의 blog 글)&lt;a href=&quot;https://signalvnoise.com/posts/3113-how-key-based-cache-expiration-works&quot;&gt;2&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Heroku SSL 적용 - Let's encrypt CA</title>
   <link href="http://localhost:4000/dev/heroku/2017/02/13/heroku-ssl-lets-encrypted/"/>
   <updated>2017-02-13T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/heroku/2017/02/13/heroku-ssl-lets-encrypted</id>
   <content type="html">&lt;h2 id=&quot;무료-ssl-certificate&quot;&gt;무료 SSL certificate&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://letsencrypt.org/&quot;&gt;let’s encrypt&lt;/a&gt; 에서 무료 SSL certificate 을 발급받을 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;ssl-certificate-발급&quot;&gt;SSL certificate 발급&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;certbot&lt;/code&gt; 을 설치.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install certbot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;manual&lt;/code&gt; 방식으로 cerbot을 실행
이 때 &lt;code class=&quot;highlighter-rouge&quot;&gt;-d&lt;/code&gt; 옵션으로 도메인을 지정할 수 있다.
기본도메인과 함꼐 &lt;code class=&quot;highlighter-rouge&quot;&gt;www&lt;/code&gt; hostname에 대해서도 함께 추가해야, 웹 브라우저에서 비공개 커넥션 에러를 방지 할 수 있다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo certbot certonly --manual -d bebetem.com -d www.bebetem.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;로그들&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Saving debug log to /var/log/letsencrypt/letsencrypt.log
-------------------------------------------------------------------------------
You have an existing certificate that contains a portion of the domains you
requested (ref: /etc/letsencrypt/renewal/bebetem.com.conf)

It contains these names: bebetem.com

You requested these names for the new certificate: bebetem.com, www.bebetem.com.

Do you want to expand and replace this existing certificate with the new
certificate?
-------------------------------------------------------------------------------
(E)xpand/(C)ancel: E
Renewing an existing certificate
Performing the following challenges:
http-01 challenge for bebetem.com
http-01 challenge for www.bebetem.com

-------------------------------------------------------------------------------
NOTE: The IP of this machine will be publicly logged as having requested this
certificate. If you're running certbot in manual mode on a machine that is not
your server, please ensure you're okay with that.

Are you OK with your IP being logged?
-------------------------------------------------------------------------------
(Y)es/(N)o: Y

-------------------------------------------------------------------------------
Make sure your web server displays the following content at
http://bebetem.com/.well-known/acme-challenge/R9CHAx3oXTzw0NhYX-YMM2cKgP4hErSy92CUO4HUSRE before continuing:

R9CHAx3oXTzw0NhYX-YMM2cKgP4hErSy92CUO4HUSRE.YOUR_RANDOM_KEY

If you don't have HTTP server configured, you can run the following
command on the target server (as root):

mkdir -p /tmp/certbot/public_html/.well-known/acme-challenge
cd /tmp/certbot/public_html
printf &quot;%s&quot; R9CHAx3oXTzw0NhYX-YMM2cKgP4hErSy92CUO4HUSRE.YOUR_RANDOM_KEY &amp;gt; .well-known/acme-challenge/R9CHAx3oXTzw0NhYX-YMM2cKgP4hErSy92CUO4HUSRE
# run only once per server:
$(command -v python2 || command -v python2.7 || command -v python2.6) -c \
&quot;import BaseHTTPServer, SimpleHTTPServer; \
s = BaseHTTPServer.HTTPServer(('', 80), SimpleHTTPServer.SimpleHTTPRequestHandler); \
s.serve_forever()&quot; 
-------------------------------------------------------------------------------
Press Enter to Continue
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;여기서 잠깐 멈추고.&lt;/p&gt;

&lt;p&gt;SSL CA인 lets encrypt가 어떻게 도메인 주인을 확인하냐면,&lt;/p&gt;

&lt;p&gt;http://bebetem.com/.well-known/acme-challenge/R9CHAx3oXTzw0NhYX-YMM2cKgP4hErSy92CUO4HUSRE&lt;/p&gt;

&lt;p&gt;이 주소로 접근했을 때,&lt;/p&gt;

&lt;p&gt;R9CHAx3oXTzw0NhYX-YMM2cKgP4hErSy92CUO4HUSRE.YOUR_RANDOM_KEY&lt;/p&gt;

&lt;p&gt;이 값을 받으면 해당 도메인 주인이 SSL certificate을 발급받는게 맞구나 하고 인식한다.&lt;/p&gt;

&lt;h2 id=&quot;well-known-url-설정&quot;&gt;well-known url 설정&lt;/h2&gt;

&lt;p&gt;routes.rb&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;get '.well-known/acme-challenge/:id' =&amp;gt; 'static#letsencrypt' 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;static_controller.rb&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class StaticController &amp;lt; ApplicationController
def letsencrypt
    render text: &quot;#{params[:id]}.YOUR_RANDOM_KEY&quot;
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;heroku에 배포 후 SSL certificate 발급 절차를 다시 진행하면 아래와 같은 log를 확인할 수 있다&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Waiting for verification...
Cleaning up challenges
Generating key (2048 bits): /etc/letsencrypt/keys/0001_key-certbot.pem
Creating CSR: /etc/letsencrypt/csr/0001_csr-certbot.pem

IMPORTANT NOTES:
 - Congratulations! Your certificate and chain have been saved at
   /etc/letsencrypt/live/bebetem.com/fullchain.pem. Your cert will
   expire on 2017-05-14. To obtain a new or tweaked version of this
   certificate in the future, simply run certbot again. To
   non-interactively renew *all* of your certificates, run &quot;certbot
   renew&quot;
 - If you like Certbot, please consider supporting our work by:

   Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate
   Donating to EFF:                    https://eff.org/donate-le
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;heroku에-certificate-등록&quot;&gt;Heroku에 certificate 등록&lt;/h2&gt;

&lt;p&gt;Heroku에서는 paid server를 사용하면 무료로 certificate을 등록할 수 있게 해주고 있다.
free server를 사용하는 경우는 잘 모름.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;heroku certs:add /etc/letsencrypt/live/bebetem.com/fullchain.pem /etc/letsencrypt/live/bebetem.com/privkey.pem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;dns-변경&quot;&gt;DNS 변경&lt;/h2&gt;

&lt;p&gt;SSL certificate을 등록하고 나면 herokuapp의 end-point URL이 변경됩니다.
bebetem.herokuapp.com 에서 bebetem.com.herokudns.com으로 변경됨.&lt;/p&gt;

&lt;p&gt;사용하는 DNS 서비스를 이용해서 CNAME을 your_app_name.herokuapp.com 에서 your_domain.herokudns.com 으로 변경해주어야 합니다.&lt;/p&gt;

&lt;p&gt;dns 변경 확인&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; dig www.bebetem.com +short
www.bebetem.com.herokudns.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;issue&quot;&gt;Issue&lt;/h2&gt;

&lt;h3 id=&quot;an-unexpected-error-occurred-attributeerror-entrypoint-object-has-no-attribute-resolve&quot;&gt;An unexpected error occurred: AttributeError: ‘EntryPoint’ object has no attribute ‘resolve’&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/certbot/certbot/issues/3140#issuecomment-225274500&quot;&gt;github issue link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;brew를 최신버전으로 update 후에 certbot을 다시 설치&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew update                 // brew update
brew unlink certbot         // 설치된 certbot의 symbolic link 제거
brew install certbot        // cerbot 재설치
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://devcenter.heroku.com/articles/ssl#overview&quot;&gt;Heroku SSL&lt;/a&gt;
&lt;a href=&quot;https://wiki.kldp.org/HOWTO/html/SSL-Certificates-HOWTO/x70.html&quot;&gt;SSL에 대한 쉬운 설명 - kldp wiki&lt;/a&gt;
&lt;a href=&quot;https://letsencrypt.org/how-it-works/&quot;&gt;Let’s encrypt CA 작동 설명&lt;/a&gt;
&lt;a href=&quot;https://collectiveidea.com/blog/archives/2016/01/12/lets-encrypt-with-a-rails-app-on-heroku&quot;&gt;Rails codes reference - Daniel Morrison&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Omniauth Facebook</title>
   <link href="http://localhost:4000/dev/rails/2017/02/09/omniauth-facebook/"/>
   <updated>2017-02-09T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2017/02/09/omniauth-facebook</id>
   <content type="html">&lt;h2 id=&quot;codes&quot;&gt;Codes&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://coderwall.com/p/bsfitw/ruby-on-rails-4-authentication-with-facebook-and-omniauth&quot;&gt;coderwall.com&lt;/a&gt; 참고&lt;/p&gt;

&lt;h2 id=&quot;errors--soutions&quot;&gt;Errors &amp;amp; Soutions&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;NoAuthorizationCodeError&lt;/p&gt;

    &lt;p&gt;OmniAuth::Strategies::Facebook::NoAuthorizationCodeError must pass either a code parameter or a signed request (via signed_request parameter or a fbsr_XXX cookie)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;FB.init&lt;/code&gt; 에 &lt;code class=&quot;highlighter-rouge&quot;&gt;cookie: true&lt;/code&gt; 옵션을 넣어주니 해결되었다.&lt;/p&gt;

&lt;h2 id=&quot;with-turbolink&quot;&gt;with turbolink&lt;/h2&gt;

&lt;p&gt;facebook js sdk에서는 sdk를 초기화할 때, body안에 fb-root라는 dom element를 만듬
turbolink로 이동하면 이 fb-root가 사라진다.&lt;/p&gt;

&lt;p&gt;가장 간단한 방법은 모든 turbolink request마다 sdk를 다시 load하면 되는 거지만, 그렇다면 turbolink를 쓰는 이유가 무색해진다.&lt;/p&gt;

&lt;p&gt;turbolinks와 다른 javscript library와의 compatibility를 정리해둔 (http://reed.github.io/turbolinks-compatibility/)&lt;a href=&quot;http://reed.github.io/turbolinks-compatibility/facebook.html&quot;&gt;1&lt;/a&gt; 의 code를 보면 아래와 같이 작동한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;tubolink request가 시작되기 전에 &lt;code class=&quot;highlighter-rouge&quot;&gt;fb-root&lt;/code&gt; element를 window.fbRoot에 저장&lt;/li&gt;
  &lt;li&gt;turbolink로 새로운 dom이 load되면 저장된 window.fbRoot를 이용해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;fb-root&lt;/code&gt;를 복원&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;turbolink-5&quot;&gt;Turbolink 5&lt;/h3&gt;

&lt;p&gt;turbolink3에서 turbolink 5로 넘어오면서, event 이름들이 바뀌었다.
page:chage , page:load –&amp;gt; turbolinks.load
page:fetch –&amp;gt; turbolinks:request-start&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/turbolinks/turbolinks/blob/master/src/turbolinks/compatibility.coffee#L25&quot;&gt;turbolink github&lt;/a&gt;에 가면 jquery event를 turbolink5의 event로 바꿔주는 script가 있다.&lt;/p&gt;

&lt;hr /&gt;

</content>
 </entry>
 
 <entry>
   <title>Rails 4 2</title>
   <link href="http://localhost:4000/2017/02/06/rails-4-2/"/>
   <updated>2017-02-06T00:00:00+09:00</updated>
   <id>http://localhost:4000/2017/02/06/rails-4-2</id>
   <content type="html">
&lt;p&gt;(3.3 Default Host for rails server}&lt;a href=&quot;http://edgeguides.rubyonrails.org/4_2_release_notes.html#default-host-for-rails-server&quot;&gt;1&lt;/a&gt;
Due to a change in Rack, rails server now listens on localhost instead of 0.0.0.0 by default. This should have minimal impact on the standard development workflow as both http://127.0.0.1:3000 and http://localhost:3000 will continue to work as before on your own machine.&lt;/p&gt;

&lt;p&gt;However, with this change you will no longer be able to access the Rails server from a different machine, for example if your development environment is in a virtual machine and you would like to access it from the host machine. In such cases, please start the server with rails server -b 0.0.0.0 to restore the old behavior.&lt;/p&gt;

&lt;p&gt;If you do this, be sure to configure your firewall properly such that only trusted machines on your network can access your development server.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Mobile에서 localhost 테스트하기</title>
   <link href="http://localhost:4000/dev/rails/2017/02/06/ngrok-test-local-app-in-mobile/"/>
   <updated>2017-02-06T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2017/02/06/ngrok-test-local-app-in-mobile</id>
   <content type="html">&lt;h2 id=&quot;ngrok-설치&quot;&gt;ngrok 설치&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ngrok.com/&quot;&gt;https://ngrok.com/&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;ngrok-실행&quot;&gt;ngrok 실행&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./ngrok http 3000       //3000은 localhost에 떠있는 Rails-app 포트번호
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/inconshreveable/ngrok&quot;&gt;ngrok github&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Google Chart</title>
   <link href="http://localhost:4000/2017/02/03/google-chart/"/>
   <updated>2017-02-03T00:00:00+09:00</updated>
   <id>http://localhost:4000/2017/02/03/google-chart</id>
   <content type="html">&lt;p&gt;https://developers.google.com/chart/interactive/docs/gallery/columnchart&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;script type=&quot;text/javascript&quot;&amp;gt;
    google.charts.load(&quot;current&quot;, {packages:['corechart']});
    google.charts.setOnLoadCallback(drawBasic);
    function drawBasic() {

      var data = new google.visualization.DataTable();
      data.addColumn('string','Date');
      data.addColumn('number','rank');
      data.addRows(&amp;lt;%= raw @ranks %&amp;gt;);

      var view = new google.visualization.DataView(data);
      view.setColumns([0, 1,
                       { calc: function (dt, row) {
                            return (&amp;lt;%= raw @max_rank %&amp;gt; - parseInt(dt.getValue(row, 1)) + 1).toString() + &quot;위&quot;;
                            },
                         sourceColumn: 1,
                         type: &quot;string&quot;,
                         role: &quot;annotation&quot; }
                       ]);

      var options = {
        title: '',
        hAxis: {
          title: '',
          gridlines: {count: 0},
        },
        vAxis: {
          title: '',
          baselineColor: '#eee',
          gridlineColor: '#eee',
          textPosition: 'none'
        },
        width: 150,
        height: 100,
        chartArea: {
          width: 150,
          height: 100,
        },
        legend: { position: &quot;none&quot; },
        annotations: {
          alwaysOutside: true,
          textStyle: {
            fontSize: 10,
            color: '#4f00ff',
          },
          stem: {
            color: '#fff',
          },
          color: '#4f00ff',
        },
        series: { 0: {color: '#4f00ff'} }
      };

      var chart = new google.visualization.ColumnChart(
        document.getElementById('rank'));

      chart.draw(view, options);
    }
&amp;lt;/script&amp;gt;
&amp;lt;div id=&quot;rank&quot;&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Rails Cache</title>
   <link href="http://localhost:4000/2017/01/30/rails-cache/"/>
   <updated>2017-01-30T00:00:00+09:00</updated>
   <id>http://localhost:4000/2017/01/30/rails-cache</id>
   <content type="html">
&lt;p&gt;http://guides.rubyonrails.org/caching_with_rails.html#fregment-caching&lt;/p&gt;

&lt;p&gt;https://devcenter.heroku.com/articles/caching-strategies#fragment-caching&lt;/p&gt;

&lt;p&gt;https://signalvnoise.com/posts/3113-how-key-based-cache-expiration-works&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Caching Act As Votable</title>
   <link href="http://localhost:4000/2017/01/30/caching-act-as-votable/"/>
   <updated>2017-01-30T00:00:00+09:00</updated>
   <id>http://localhost:4000/2017/01/30/caching-act-as-votable</id>
   <content type="html">
&lt;p&gt;/config/initializers/act_as_votable.md&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module ActsAsVotable
    class Vote &amp;lt; ::ActiveRecord::Base
        belongs_to :votable, :polymorphic =&amp;gt; true, touch: true
    end
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Rails Ujs Custom Event</title>
   <link href="http://localhost:4000/2017/01/27/rails-ujs-custom-event/"/>
   <updated>2017-01-27T00:00:00+09:00</updated>
   <id>http://localhost:4000/2017/01/27/rails-ujs-custom-event</id>
   <content type="html">&lt;p&gt;http://stackoverflow.com/questions/19516654/rails-ujs-confirm-box-cancel-button-callback&lt;/p&gt;

&lt;p&gt;https://github.com/rails/jquery-ujs/blob/master/src/rails.js#L280&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Jquery Animate</title>
   <link href="http://localhost:4000/2017/01/22/jquery-animate/"/>
   <updated>2017-01-22T00:00:00+09:00</updated>
   <id>http://localhost:4000/2017/01/22/jquery-animate</id>
   <content type="html">&lt;p&gt;http://stackoverflow.com/questions/14304473/jquery-fadein-delay-fadeout&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Gem Week Of Month</title>
   <link href="http://localhost:4000/2017/01/22/gem-week-of-month/"/>
   <updated>2017-01-22T00:00:00+09:00</updated>
   <id>http://localhost:4000/2017/01/22/gem-week-of-month</id>
   <content type="html">&lt;p&gt;https://github.com/sachin87/week-of-month&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>irb, rails console에서의 한글 encoding 문제 해결</title>
   <link href="http://localhost:4000/dev/rails/ruby/2017/01/20/irb-encoding/"/>
   <updated>2017-01-20T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/ruby/2017/01/20/irb-encoding</id>
   <content type="html">&lt;ul&gt;
  &lt;li&gt;기본 encoding : UTF-8&lt;/li&gt;
  &lt;li&gt;한글 사용을 위해서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;readline&lt;/code&gt; 패키지 필요&lt;/li&gt;
  &lt;li&gt;Ruby를 설치할 때 마다 readline 경로를 명시해야되나, rbenv plugin을 사용하면 자동으로 경로가 지정됨&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install readline
git clone git://github.com/tpope/rbenv-readline.git ~/.rbenv/plugins/rbenv-readline
rbenv install &amp;lt;ruby_version&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이미 설치되어 있는 경우, 해당 버전의 ruby를 삭제하고 재설치&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rbenv uninstall &amp;lt;ruby_version&amp;gt;
rbenv install &amp;lt;ruby_version&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;irb에서는 한글이 제대로 입력되는데, rails console에서는 그대로 UTF-8로 나오는 경우에, 재부팅을 하고 나니 제대로 한글이 입력되더라.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;all credit to &lt;a href=&quot;https://blog.iamseapy.com/archives/177&quot;&gt;https://blog.iamseapy.com/archives/177&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>루비 버전 관리 - rbenv Mac 설치</title>
   <link href="http://localhost:4000/dev/ruby/2017/01/20/install-rbenv/"/>
   <updated>2017-01-20T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/ruby/2017/01/20/install-rbenv</id>
   <content type="html">&lt;p&gt;(rbenv github)&lt;a href=&quot;https://github.com/rbenv/rbenv&quot;&gt;1&lt;/a&gt;
(ruby-build)&lt;a href=&quot;https://github.com/rbenv/ruby-build#readme&quot;&gt;2&lt;/a&gt; : rbenv install 명령어를 사용가능하게 하는 plugin&lt;/p&gt;

&lt;h3 id=&quot;설치&quot;&gt;설치&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/rbenv/rbenv.git ~/.rbenv
git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build
echo 'export PATH=&quot;$HOME/.rbenv/bin:$PATH&quot;' &amp;gt;&amp;gt; ~/.bash_profile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;간단한-사용법&quot;&gt;간단한 사용법&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rbenv install -l        // 설치가능한 모든 ruby version list
rbenv install 2.2.5     // 2.2.5 버전 ruby 설치
rbenv uninstall 2.2.5   // 2.2.5 버전 ruby 삭제
rbenv local 2.2.5       // 해당 폹더에서 2.2.5 버전 사용
rbenv local             // 해당 폴더 루비 버전 확인
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;–&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Git - Remote branch로 local branch 만들기</title>
   <link href="http://localhost:4000/dev/git/2017/01/18/git-pull-remote-branch/"/>
   <updated>2017-01-18T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/git/2017/01/18/git-pull-remote-branch</id>
   <content type="html">&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git pull
git checkout -b remote_branch origin/remote_branch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;
</content>
 </entry>
 
 <entry>
   <title>Subl Terminal Command</title>
   <link href="http://localhost:4000/2017/01/17/subl-terminal-command/"/>
   <updated>2017-01-17T00:00:00+09:00</updated>
   <id>http://localhost:4000/2017/01/17/subl-terminal-command</id>
   <content type="html">
&lt;hr /&gt;
&lt;p&gt;title: SublimeText3 - terminal command 맵핑
layout: post
comments: true
category: [dev, sublimetext]
—&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo ln -s /Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl /usr/bin


## El capitan 이상

sudo ln -s /Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl /usr/local/bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/10892368/problems-using-subl-command-in-terminal-command-not-found-no-such-file-or&quot;&gt;http://stackoverflow.com/questions/10892368/problems-using-subl-command-in-terminal-command-not-found-no-such-file-or&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/32915464/sublime-symlink-disappeared-after-upgrading-to-el-capitan&quot;&gt;http://stackoverflow.com/questions/32915464/sublime-symlink-disappeared-after-upgrading-to-el-capitan&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>생각좀 하고 살아라 - 야마다 아키오</title>
   <link href="http://localhost:4000/book/2017/2017/01/17/yamada-akio/"/>
   <updated>2017-01-17T00:00:00+09:00</updated>
   <id>http://localhost:4000/book/2017/2017/01/17/yamada-akio</id>
   <content type="html">&lt;p&gt;뛰어난 아이디어는 지식이나 재능이 아니라 ‘왜?’에서 나온다.&lt;/p&gt;

&lt;hr /&gt;
</content>
 </entry>
 
 <entry>
   <title>Rspec - partial rendering 테스트 하기</title>
   <link href="http://localhost:4000/dev/rspec/2017/01/14/render-parital-rspec/"/>
   <updated>2017-01-14T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rspec/2017/01/14/render-parital-rspec</id>
   <content type="html">&lt;p&gt;view에서 유저일 때는 광고를 보여주지 않는 부분을 테스트.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;%= render partial: &quot;layouts/gdn_main_top&quot; if not logged_in? %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;controller.rspec&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;describe 'Visitor access' do
    describe '#show' do
      render_views
      it 'shows gdn ads' do
        get :show, id: @category
        expect(response).to render_template(partial: &quot;layouts/_gdn_main_top&quot;)
      end
    end
  end

  describe 'Use access' do
    before(:each) do
      log_in_as(create(:user))
    end
    describe '#show' do
      render_views
      it 'shows gdn ads' do
        get :show, id: @category
        expect(response).not_to render_template(partial: &quot;layouts/_gdn_main_top&quot;)
      end
    end
  end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;controller spec에서는 view를 rendering하지 않는다.
&lt;code class=&quot;highlighter-rouge&quot;&gt;render_views&lt;/code&gt; 를 통해 특정 테스트에서 view를 rendering할 수 있다.&lt;/p&gt;

&lt;p&gt;partial이 rendering되었는지는 &lt;code class=&quot;highlighter-rouge&quot;&gt;render_template&lt;/code&gt; 에 partial 옵션을 줘서 확인한다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://www.relishapp.com/rspec/rspec-rails/v/3-0/docs/controller-specs/render-views&quot;&gt;rspec doc - render views&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>markdown에서 한줄 띄어쓰기</title>
   <link href="http://localhost:4000/dev/jekyll/markdown/2017/01/14/newline-markdown/"/>
   <updated>2017-01-14T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/jekyll/markdown/2017/01/14/newline-markdown</id>
   <content type="html">&lt;p&gt;Use two spaces or two backslashes.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;this is a  
test for line breaks\\ 
in a paragraph
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;will produce&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;p&amp;gt;this is a&amp;lt;br /&amp;gt;
test for line breaks&amp;lt;br /&amp;gt;
in a paragraph&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/gettalong/kramdown/issues/137&quot;&gt;kramdown issue&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Ruby Sorting - nil값이 있는 경우</title>
   <link href="http://localhost:4000/dev/ruby/2017/01/13/ruby-sort/"/>
   <updated>2017-01-13T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/ruby/2017/01/13/ruby-sort</id>
   <content type="html">&lt;h3 id=&quot;sort&quot;&gt;Sort&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;array.sort&lt;/code&gt; 는 &lt;code class=&quot;highlighter-rouge&quot;&gt;array.sort { |x, y| x &amp;lt;=&amp;gt; y }&lt;/code&gt; 와 동일&lt;/p&gt;

&lt;p&gt;x, y는 sorting algorithm에서 선택하는 array의 두 element&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;=&amp;gt;&lt;/code&gt; 연산자의 뜻은&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;return -1 if x &amp;lt; y
return 0 if x = y
return 1 if x &amp;gt; y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;nil값을-가지는-경우의-sorting&quot;&gt;nil값을 가지는 경우의 sorting&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;array = [1, 2, nil, 3, 5]
array.sort { |a, b| a &amp;amp;&amp;amp; b ? a&amp;lt;=&amp;gt;b : a ? -1 : 1 }
--&amp;gt; [1, 2, 3, 5, nil]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a &amp;amp;&amp;amp; b ? a &amp;lt;=&amp;gt; b&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;a, b 둘다 존재하면 정상적으로 a&amp;lt;=&amp;gt;b 연산으로 sorting&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a ? -1 : 1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;a가 nil인 경우, 1을 반환 (즉 a &amp;gt; b 인 것으로 처리)&lt;/p&gt;

&lt;p&gt;b가 nil인 경우, -1을 반환 (즉 a &amp;lt; b 인 것으로 처리)&lt;/p&gt;

&lt;p&gt;–&amp;gt; nil이 제일 큰 수로 취급해서 ascending order로 sorting한 경우 가장 마지막에 위치하게 됨.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/2637419/how-does-arraysort-work-when-a-block-is-passed&quot;&gt;StackOverflow: how-does-arraysort-work-when-a-block-is-passed&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/808318/sorting-a-ruby-array-of-objects-by-an-attribute-that-could-be-nil&quot;&gt;StackOverflow: sorting-a-ruby-array-of-objects-by-an-attribute-that-could-be-nil&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Sprint - Jake Knapp</title>
   <link href="http://localhost:4000/book/2017/2017/01/13/sprint/"/>
   <updated>2017-01-13T00:00:00+09:00</updated>
   <id>http://localhost:4000/book/2017/2017/01/13/sprint</id>
   <content type="html">&lt;p&gt;곧바로 솔루션 도출로 뛰어들지 말고 시간을 들여 찬찬히 문제들을 정하고 초기 목표에 합의하라.&lt;br /&gt;
나중에 속도를 낼 수 있도록 처음에는 천천히 시작한다.&lt;/p&gt;

&lt;p&gt;아이디어들을 큰 소리로 떠들지 말고 각자 혼자서 잠재 솔루션들을 상세하게 스케치한다.&lt;br /&gt;
집단 브레인스토밍을 해봤자 신통치 않다. 하지만 더 좋은 방법이 있다.&lt;/p&gt;

&lt;p&gt;추상적인 논쟁과 끝없는 회의 대신 투표를 이용하고 결정권자가 팀의 우선순위를 반영하여 분명한 결정을 내리게 한다.&lt;br /&gt;
이는 집단사고에 빠지지 않고 여러 사람의 지혜를 이용하는 방법이다.&lt;/p&gt;

&lt;p&gt;솔루션을 테스트하기 전에 모든 세부사항을 제대로 갖추려 하지 말고 외관만 마련하라.&lt;br /&gt;
‘프로토타입 마음가짐’을 가지면 빠른 시간 안에 프로토타입을 이용해 무언가를 배울 수 있다.&lt;/p&gt;

&lt;p&gt;자신이 제대로 하고 있기를 바라고 추즉만 하는 대신 - 그러면서 많은 돈과 몇 달의 시간을 당신의 아이디어에 쏟아붓는 대신 - 표적 고객들과 프로토타입을 테스트하고 정직한 반응을 얻어라.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Heroku database 업그레이드</title>
   <link href="http://localhost:4000/dev/heroku/2017/01/11/heroku-database-upgrade/"/>
   <updated>2017-01-11T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/heroku/2017/01/11/heroku-database-upgrade</id>
   <content type="html">&lt;p&gt;무료버전인 Hobby-Dev에서 $9인 Hobby-Basic 버전으로 변경하는 경우&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;우선-백업부터&quot;&gt;우선 백업부터.&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;heroku pg:backups capture
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;코드&quot;&gt;코드.&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;heroku pg:info

    === HEROKU_POSTGRESQL_XXXXXX_URL
    Plan:        Hobby-dev

heroku addons:create heroku-postgresql:hobby-basic

    Created postgresql-xxxxxx-xxxxx as HEROKU_POSTGRESQL_AQUA_URL

heroku maintenance:on
heroku pg:copy HEROKU_POSTGRESQL_XXXXXX_URL HEROKU_POSTGRESQL_AQUA_URL --app your_app_name
heroku pg:promote HEROKU_POSTGRESQL_AQUA_URL
heroku maintenance:off
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;설명&quot;&gt;설명.&lt;/h3&gt;

&lt;p&gt;a. 사용중인 database url 확인&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;heroku pg:info

    === HEROKU_POSTGRESQL_XXXXXX_URL
    Plan:        Hobby-dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;b. 새로운 postgresql add-on 설치&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;heroku addons:create heroku-postgresql:hobby-basic

    Created postgresql-xxxxxx-xxxxx as HEROKU_POSTGRESQL_AQUA_URL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;c. 데이터베이스 복사 전에 서버점검 모드로 변환&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;heroku maintenance:on
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;d. 이전 데이터베이스를 새로운 데이터베이스로 복사
heroku에서 database 생성시, 긴 url 대신에 alias를 제공.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;heroku pg:copy HEROKU_POSTGRESQL_XXXXXX_URL HEROKU_POSTGRESQL_AQUA_URL --app your_app_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;e. 새로운 데이터베이스를 주 사용 데이터베이스로 선택&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;heroku pg:promote HEROKU_POSTGRESQL_AQUA_URL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;f. 서버점검 모드 해제&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;heroku maintenance:off
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://devcenter.heroku.com/articles/upgrading-heroku-postgres-databases&quot;&gt;Upgrading Heroku Postgres Databases
&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Screw it! Let's do it! - Richard Branson</title>
   <link href="http://localhost:4000/book/2017/2017/01/11/Screw-it-lets-do-it/"/>
   <updated>2017-01-11T00:00:00+09:00</updated>
   <id>http://localhost:4000/book/2017/2017/01/11/Screw-it-lets-do-it</id>
   <content type="html">&lt;ol&gt;
  &lt;li&gt;&lt;span class=&quot;hl&quot;&gt;일단 해보자.&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;좋은 생각이다 싶으면 해서는 안되는 이유보다 해야 할 이유를 찾으려 항상 애쓴다.&lt;/li&gt;
  &lt;li&gt;일만하고 놀지 않으면 바보가 된다.&lt;/li&gt;
  &lt;li&gt;돈을 벌려면 돈을 투자해야 한단다.&lt;/li&gt;
  &lt;li&gt;돈이라는 것은 뭔가를 하기 위해 있는 것&lt;/li&gt;
  &lt;li&gt;무엇보다도 즐기려고 노력한다.&lt;/li&gt;
  &lt;li&gt;무슨 일이든 잘하고 싶으면 계획을 짜서 철저히 준비해야 한다는 것은 앞으로도 영원히 변하지 않을 원칙임에 틀림없다.&lt;/li&gt;
  &lt;li&gt;&lt;span class=&quot;hl&quot;&gt;성공에는 정해진 규칙도, 절대적인 어떤 것도 없다.&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;무모한 도전은 도전이 아니다.&lt;/li&gt;
  &lt;li&gt;나는 위험을 무릅쓰고 불가능해 보이는 일들에 도전하는 것을 좋아하지만, 그건 정확히 계산된 위험들입니다. 나는 내가 하는 모든 일에 있어서 항상 가능성이 얼마나 되는지를 따져봅니다.&lt;/li&gt;
  &lt;li&gt;성공할만한 좋은 생각인지 알아보기 위해 시장조사를 하거나, 서류와 보고서를 잔뜩 만들어낼 필요는 없다는 것이 한결같은 내 지론이다. 대개의 경우 상식과 비전만 있으면 된다.&lt;/li&gt;
  &lt;li&gt;약속은 중요한 것이고 반드시 지켜야 한다.&lt;/li&gt;
  &lt;li&gt;안전한 삶을 선택한다면, 무언가를 얻는다는것이 어떤 의미인지 결코 알 수 없다.&lt;/li&gt;
  &lt;li&gt;지상의 삶은 어무나 빠르고 혼란스럽고 빡빡하다. 또 정신을 못 차릴 정도로 바쁘다. 그렇기 때문에 자기만의 공간이 필요하고, 자기만의 휴식법을 터득해야 한다.&lt;/li&gt;
  &lt;li&gt;항상 미래만 바라보는 것도 항상 뒤만 돌아보는 것만큼이나 우리 발전을 더디게 한다. 항상 앞만 내다보면서 만족 할 줄 모른다.&lt;/li&gt;
  &lt;li&gt;매 순간을 소중히 생각하세요. 이것이 사업과 개인생활을 성공적으로 병항하는 방법입니다.&lt;/li&gt;
  &lt;li&gt;논쟁할 일은 즉시 해결해야 문제가 크게 확대되지 않으며 서로 상처받지 않는다.&lt;/li&gt;
  &lt;li&gt;존중이란 모두를 대하는 방법, 자신이 좋은 인상을 남기고 싶은 특정인에게만 행하는 것이 아니다.&lt;/li&gt;
  &lt;li&gt;성정하기 위해서는 확장해야 한다.&lt;/li&gt;
  &lt;li&gt;현실 세계는 너무나도 빨리 변하고 있다. 규재에 얽매여 활기를 잃는 것보다는 혁신적이고 신선하고 독창적으로 행동하는 편이 훨씬 낫다.&lt;/li&gt;
  &lt;li&gt;많은 경영자들이 돈을 지불하는 고객이 아니라 기업과 기업에 종사하는 사람들을 위해 일하는 실수를 저지른다.&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

</content>
 </entry>
 
 <entry>
   <title>Ruby Regex</title>
   <link href="http://localhost:4000/dev/ruby/2017/01/05/ruby-regex/"/>
   <updated>2017-01-05T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/ruby/2017/01/05/ruby-regex</id>
   <content type="html">&lt;p&gt;regex를 사용하기 전에, 특정 문자열을 바꾸는 경우라면, 간단히 아래 함수를 사용할 수도 있다.&lt;/p&gt;

&lt;p&gt;.sub&lt;/p&gt;

&lt;p&gt;첫 번째 matched element만 변경&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;123 1231 123&quot;.sub(&quot; &quot;,&quot;&quot;)       //&quot;1231231 123&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;.gsub&lt;/p&gt;

&lt;p&gt;모든 matched elements를 변경&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;123 1231 123&quot;.gsub(&quot; &quot;,&quot;&quot;)       //&quot;1231231123&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;pattern-matching&quot;&gt;Pattern matching&lt;/h2&gt;

&lt;p&gt;regex 패턴 매칭 여부만 알면 된다면, =~ operation으로 가증
pattern이 발견되면 패턴이 시작되는 character의 index를 반환하고
pattern이 없다면 nil을 반환한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/123/ =~ '12345'    // 0
/123/ =~ '012345'    // 1
/123/ =~ '2345'    // nil
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;match&quot;&gt;&lt;a href=&quot;https://ruby-doc.org/core-2.2.0/Regexp.html&quot;&gt;match&lt;/a&gt;&lt;/h2&gt;

</content>
 </entry>
 
 <entry>
   <title>Heroku 서버 재시작</title>
   <link href="http://localhost:4000/dev/heroku/2017/01/05/heroku-restart/"/>
   <updated>2017-01-05T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/heroku/2017/01/05/heroku-restart</id>
   <content type="html">&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;heroku restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/14612695/how-to-restart-a-rails-server-on-heroku&quot;&gt;http://stackoverflow.com/questions/14612695/how-to-restart-a-rails-server-on-heroku&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Preload/Eagerload Nest Association</title>
   <link href="http://localhost:4000/dev/rails/2016/12/31/rails-preload-nested-association/"/>
   <updated>2016-12-31T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2016/12/31/rails-preload-nested-association</id>
   <content type="html">&lt;h2 id=&quot;preload-nest-association&quot;&gt;Preload Nest Association&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Menu.includes(submenus: :items)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;conditional-preload&quot;&gt;conditional preload&lt;/h2&gt;

&lt;p&gt;scope은 preload에 사용할 수 없으니, lambda를 이용해서 condition을 만족하는 association을 생성.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class SubMenu
    has_one :best_item, -&amp;gt; {where(&quot;rank = ?&quot;, 1)}, class_name: &quot;Item&quot;


Menu.includes(submenus: :best_item)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/24397640/rails-nested-includes-on-active-records&quot;&gt;http://stackoverflow.com/questions/24397640/rails-nested-includes-on-active-records&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>jQuery Dom붙이기 한 방에 이해!! - append, prepend, after, before</title>
   <link href="http://localhost:4000/dev/rails/2016/12/31/jquery-append-prepend-after-before/"/>
   <updated>2016-12-31T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2016/12/31/jquery-append-prepend-after-before</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;https://i.stack.imgur.com/GWmap.png&quot; alt=&quot;jquery append prepend after before&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

</content>
 </entry>
 
 <entry>
   <title>Google Sheet Query Function</title>
   <link href="http://localhost:4000/2016/12/28/google-sheet-query-function/"/>
   <updated>2016-12-28T00:00:00+09:00</updated>
   <id>http://localhost:4000/2016/12/28/google-sheet-query-function</id>
   <content type="html">
&lt;p&gt;함수 결과를 Query의 range로 사용할 때
column ID나 label을 따로 설정할 수 없을 때
Col1, Col2 를 이용해서 함수 결과 range의 첫번째 column, 두번째 column을 지정할 수 있다.&lt;/p&gt;

&lt;p&gt;열번호가 있는 경우에는 (ex. A:B) Col1과 같은 형태로 쓸 수 없다.
{A:B} 처럼 새로운 range를 만들어주면 사용할 수 있다.&lt;/p&gt;

&lt;p&gt;http://stackoverflow.com/questions/14767160/google-spreadsheet-query-function-column-id-other-than-letter-of-column&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Git - merge vs. rebase</title>
   <link href="http://localhost:4000/dev/git/2016/12/23/git-merge-vs-rebase/"/>
   <updated>2016-12-23T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/git/2016/12/23/git-merge-vs-rebase</id>
   <content type="html">&lt;h3 id=&quot;rebase&quot;&gt;Rebase&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git checkout feature
git rebase master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://www.atlassian.com/git/images/tutorials/advanced/merging-vs-rebasing/03.svg&quot; alt=&quot;git rebase&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;merge&quot;&gt;Merge&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git merge master feature
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://www.atlassian.com/git/images/tutorials/advanced/merging-vs-rebasing/02.svg&quot; alt=&quot;git merge&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;a href=&quot;https://www.atlassian.com/git/tutorials/merging-vs-rebasing&quot;&gt;from git tutorial&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Javascript 'undefined' 체크</title>
   <link href="http://localhost:4000/dev/javascript/2016/12/23/check-undefined/"/>
   <updated>2016-12-23T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/javascript/2016/12/23/check-undefined</id>
   <content type="html">&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;typeof myVar != 'undefined'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;
</content>
 </entry>
 
 <entry>
   <title>Bounce Vs Bounce Rate</title>
   <link href="http://localhost:4000/2016/12/19/bounce-vs-bounce-rate/"/>
   <updated>2016-12-19T00:00:00+09:00</updated>
   <id>http://localhost:4000/2016/12/19/bounce-vs-bounce-rate</id>
   <content type="html">
&lt;p&gt;이탈수와 이탈률 어떤 지표를 봐야될까?&lt;/p&gt;

&lt;p&gt;방문수와 이탈수 데이터를 같이 보면
대부분 같이 움직인다.&lt;/p&gt;

&lt;p&gt;방문수가 늘어나면 이탈수도 늘어나고
방문수가 줄어들면 이탈수도 줄어든다.&lt;/p&gt;

&lt;p&gt;이탈수를 보아선 어떤 결정도 내릴 수 없다.
이탈률을 봐야&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;랜딩페이지가 마케팅 메세지에 부합하는&lt;/li&gt;
  &lt;li&gt;캠페인의 타겟팅이 제대로 되었는&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;1차적으로 측정된 데이터가 즉관적으로 보인다
직관적인 것과 다음 애션을 유발하는 것 과는 차이가 있다.
이탈수를 본다면 필시 방문수에 따라 같이 움직일 것이다.
몇명이 들어와서 바로 나갔는지는 직관적이다. 어제 5만명이 와서 만명은 그냥 나갔습니다.&lt;/p&gt;

&lt;p&gt;이제 어떻게 해야될까?&lt;/p&gt;

&lt;p&gt;숫자뿐만 아니라 숫자의 변화 역시 다음 액션을 유발하지는 않는다.
어제 나간 사람 수가 10% 증가했습니다.&lt;/p&gt;

&lt;p&gt;비율은 숫자에 비해 직관적이지 않다.
하지만 다음 액션을 말해준다.&lt;/p&gt;

&lt;p&gt;이탈률이 50%에서 60%로 증가했습니다.&lt;/p&gt;

&lt;p&gt;ㅇ제 우린 분석을 시작 할 수 있다.
우리가 한 행동에 대해서 효과를 분석할 수 있다.
이전보다 지금의 행동이 덜 효과적이라는 것을 알 수 있다.
그리고 다른 방향으로 바꿀 수 있다.&lt;/p&gt;

&lt;p&gt;비율이 중요하다.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>.xyz 때문에 짜증이 나신다면 - GA에서 스팸제거하기</title>
   <link href="http://localhost:4000/dev/google%20analytics/2016/12/19/prevent-ghost-spam-in-google-analytics/"/>
   <updated>2016-12-19T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/google%20analytics/2016/12/19/prevent-ghost-spam-in-google-analytics</id>
   <content type="html">&lt;h3 id=&quot;ghost-spam&quot;&gt;Ghost Spam&lt;/h3&gt;

&lt;p&gt;주로 referral report에 나타나는 스팸성 트래픽은 랜덤하게 Google anlaytics(GA) ID를 만들어서 트래픽을 보낸다.
주요 목적은 GA 담당자가 보고서에 나온 트래픽을 보고 해당 사이트에 방문하도록 만드는 것이다.&lt;/p&gt;

&lt;p&gt;스패머는 랜덤하게 만들어진 GA ID를 사용하기 때문에, 해당 ID를 사용하는 사이트가 어떤 사이트인지 모른다.
그래서 hostname이 정해져있지 않거나, 유명한 사이트의 도메인으로 채워넣곤 한다.
Referral report에서 2nd dimension을 hostname으로 놓고 보면, 스팸여부를 확인할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/2016-12-19/xyz_spam.png&quot; alt=&quot;구글 애널리틱스 추천 리포트 고스트 스팸 (google analytics referral report - ghost spam)&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;[결국 모든 referral 트래픽이 다 스팸 트래픽..]&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;filter-to-prevent-ghost-spam&quot;&gt;Filter to prevent ghost spam&lt;/h3&gt;

&lt;p&gt;whitelist 형태의 filter를 이용해서 유효한 hostname을 가진 트래픽만 GA에서 받아들이도록 하면
하나의 filter로 ghost spam traffic을 모두 차단 할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Audience &amp;gt; Technology &amp;gt; Network&lt;/code&gt; 에서 Primary dimension을 hostname으로 설정하면, GA로 들어온 모든 트래픽의 hostname을 확인할 수 있다.&lt;/p&gt;

&lt;p&gt;여기서 자기 소유의 도메인과 관련된 hostname, 결제관련 서비스의 hostname, 번역서비스의 hostname 등을 확인한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/2016-12-19/hostname.png&quot; alt=&quot;구글 애널리틱스 호스트명 확인 (google analytics check host name)&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이제 필터를 만들 차례다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Admin &amp;gt; Filters &amp;gt; Add filter&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Custom을 선택하고, Include를 선택한다. 앞서 말했듯이 이 필터는 whitelist필터이다. 허용한 traffic만 들어온다. 오타에 주의하자.&lt;/p&gt;

&lt;p&gt;Filter field를 hostname으로 설정하고&lt;/p&gt;

&lt;p&gt;아래 filter pattern에 앞서 확인한 hostname을 적어준다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/2016-12-19/filter.png&quot; alt=&quot;구글 애널리틱스 스팸 필터 - Google analytics ghost spam filter&quot; /&gt;&lt;/p&gt;

&lt;p&gt;만약 확인한 hostname이 “www.example.com”, “example.com” 이었다면 아래와 같이 정규표현식으로 적어주어야 한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;www\.example\.com|example\.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;hostname사이에  | 이 표시를 꼭 넣어줘야 한다. 
CS쪽 지식이 있는 사람이라면 단번에 or 연산자라는 걸 알것이다.&lt;/p&gt;

&lt;p&gt;주의해야 할 것은 hostname사이에 빈칸이 들어가서는 안된다. 다른 hostname으로 인식하더라.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://moz.com/blog/stop-ghost-spam-in-google-analytics-with-one-filter&quot;&gt;reference - moz blog&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Postgresql 한글 정렬</title>
   <link href="http://localhost:4000/dev/rails/pg/2016/12/14/postgresql-korean-sort/"/>
   <updated>2016-12-14T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/pg/2016/12/14/postgresql-korean-sort</id>
   <content type="html">&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Menu.order('name collate &quot;C&quot; asc')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;
&lt;p&gt;credit : &lt;a href=&quot;http://susemi99.kr/2558&quot;&gt;http://susemi99.kr/2558&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Google Sheet - 함수에서 blank cell 반환하기</title>
   <link href="http://localhost:4000/dev/google%20sheet/2016/12/14/google-sheet-return-blank-cell/"/>
   <updated>2016-12-14T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/google%20sheet/2016/12/14/google-sheet-return-blank-cell</id>
   <content type="html">&lt;p&gt;꼼수&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;= iferror(1/0)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Error가 발생시 Blank cell return&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;= iferror(operation_you_want, iferror(1/0))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;
&lt;p&gt;credit : &lt;a href=&quot;http://googledocsforlife.blogspot.kr/2011/08/iferror10-in-spreadsheets.html&quot;&gt;http://googledocsforlife.blogspot.kr/2011/08/iferror10-in-spreadsheets.html&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>린치핀 - 세스 고딘</title>
   <link href="http://localhost:4000/book/2016/2016/12/14/linchpin/"/>
   <updated>2016-12-14T00:00:00+09:00</updated>
   <id>http://localhost:4000/book/2016/2016/12/14/linchpin</id>
   <content type="html">&lt;blockquote&gt;
  &lt;p&gt;자신이 일을 할 대상, 자신을 지켜봐줄 사람, 자신에게 돈을 지불할 사람을 찾는 것은 나쁘지 않다. 하지만 그 사람을 상사처럼 대하는 순간, 자신의 행동과 결과물에 대한 책임을 떠맡을 사람으로 대하는 순간, 우리는 더이상 예술가가 아니라 톱니바퀴가 된다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;세상을 바꾸겠다는 거창한 목적이 있다고 해도 마무리하지 않고 질질 끄는 것은 대개 저항이 드러나는 증상이다. 그런 저항은 가차 없이 뮛하라. 무슨 일이든 일정을 정해 마무리하라. 그래야 세상은 바뀐다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;성공하는 사람들이 성공하는 이유는 아주 단순하다. 그들은 실패를 다르게 생각한다. 처음부터 시도하지 말걸 그랬다고 후회하지 않는다. 자신을 패배자라고 생각하지 않는다. 그들은 자신이 사용한 전략이 왜 작동하지 않았는지, 전략을 사용할 대상으로 삼은 사람들이 왜 반응하지 않았는지 배운다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;편안함을 누릴 수 있는 길은 언제나 사람들로 붐빈다. 역설적으로 차이를 만들고 자신만의 발판을 찾는 사람들은 불편함을 일부러 찾는 사람들이다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;이 책을 한 줄로 요약하자면.
무엇인가가 되는 지도는 어디에도 존재하지 않으며 나 스스로 그려야 되는 것이고,
대가없는 선물을 주는 것이야 말로 감정노동으로 자신을 차별화하여 린치핀이 되는 방법이라는 것이다.&lt;/p&gt;

&lt;hr /&gt;
</content>
 </entry>
 
 <entry>
   <title>Rspec - 원하는 테스트만 실행하기</title>
   <link href="http://localhost:4000/dev/rspec/2016/12/10/rspec-selective-test/"/>
   <updated>2016-12-10T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rspec/2016/12/10/rspec-selective-test</id>
   <content type="html">&lt;p&gt;spec_helper.rb&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;config.filter_run_when_matching :focus
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;it&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;describe&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;context&lt;/code&gt; 뒤에 :focus를 붙이면 해당 test만 실행&lt;/li&gt;
  &lt;li&gt;:focus가 붙은 text가 하나도 없으면, 모든 test를 실행&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
</content>
 </entry>
 
 <entry>
   <title>Rspec 에서 referrer 설정하기</title>
   <link href="http://localhost:4000/dev/rspec/2016/12/10/rspec-mock-referrer/"/>
   <updated>2016-12-10T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rspec/2016/12/10/rspec-mock-referrer</id>
   <content type="html">&lt;p&gt;referrer 설정하는 법&lt;/p&gt;

&lt;p&gt;1) Mocking&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;allow(controller.request).to receive(:referrer).and_return(&quot;http://example.com&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;
</content>
 </entry>
 
 <entry>
   <title>Javascript Unicdoe/UTF-8 인코딩</title>
   <link href="http://localhost:4000/dev/javascript/2016/12/09/javascript-encoding/"/>
   <updated>2016-12-09T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/javascript/2016/12/09/javascript-encoding</id>
   <content type="html">&lt;h3 id=&quot;unicode&quot;&gt;Unicode&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;String.prototype.toUnicode = function(){
    var result = &quot;&quot;;
    for(var i = 0; i &amp;lt; this.length; i++){
        result += &quot;\\u&quot; + (&quot;000&quot; + this[i].charCodeAt(0).toString(16)).substr(-4);
    }
    return result;
};

var output = input.toUnicode();
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;utf-8&quot;&gt;UTF-8&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var output = encodeURI(input);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/21014476/javascript-convert-unicode-string-to-javascript-escape&quot;&gt;stackoverflow&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Rspec</title>
   <link href="http://localhost:4000/2016/12/07/rspec/"/>
   <updated>2016-12-07T00:00:00+09:00</updated>
   <id>http://localhost:4000/2016/12/07/rspec</id>
   <content type="html">
&lt;p&gt;&lt;a href=&quot;http://betterspecs.org/ko/#expect&quot;&gt;rspec style guide&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;.to be 와 .to eq 의 차이&lt;/p&gt;

&lt;p&gt;eq는 값을 비교
be는 object 자체를 비교 (같은 값을 가진 다른 오브젝트는 be를 사용했을 때, 다르다고 판정을 내림)&lt;/p&gt;

&lt;p&gt;.eq 와 .match_array의 차이&lt;/p&gt;

&lt;p&gt;eq는 순서를 따짐
match_array는 순서를 따지지 않음&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
###stub a chain of methods&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;it 'populates items in order of rank in requested sub_menu', :vcr do
    menu = create(:menu)
    sub_menu = create(:sub_menu, menu_id: menu.id)
    item1 = create(:item, sub_menu_id: sub_menu.id)
    item2 = create(:item, sub_menu_id: sub_menu.id)

    SubMenu.stub_chain(:friendly, :find).with(sub_menu.id).and_return(sub_menu)
    allow(sub_menu).to receive(:items_by_rank).and_return([item1, item2])

    get :show, id: sub_menu.id

    expect(assigns(:items)).to eq [item1, item2]
  end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;stub-method&quot;&gt;Stub Method&lt;/h3&gt;
&lt;h3 id=&quot;check-if-class-method-is-called&quot;&gt;Check if class method is called&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;it 'calls #update_sub_menu_rank_v2 of its sub_menus', :focus do
  menu = create(:menu_with_sub_menus)
  item = build(:item_with_sub_menu, name: '베베숲물티슈', brand: '베베숲', sub_menus: menu.sub_menus)
  # method stub
  allow(item).to receive(:create_weekly_rank) { true }
  
  sub_menu = item.sub_menus.first
  expect(Rank).to receive(:update_sub_menu_rank_v2).with(sub_menu.id, Time.now.end_of_week)
  item.save
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

</content>
 </entry>
 
 <entry>
   <title>Rails Controller Test with Rspec</title>
   <link href="http://localhost:4000/dev/rails/test/rspec/2016/12/06/rspec-controller/"/>
   <updated>2016-12-06T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/test/rspec/2016/12/06/rspec-controller</id>
   <content type="html">&lt;h3 id=&quot;controller-테스트-범위&quot;&gt;Controller 테스트 범위&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Controller의 CRUD 관련 매소드가 예상한것과 같이 동작한다.&lt;/li&gt;
  &lt;li&gt;CRUD외 다른 메소드가 예상한 것과 같이 동작한다.&lt;/li&gt;
  &lt;li&gt;nested attribute&lt;/li&gt;
  &lt;li&gt;nested routing&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;controller-method를-호출-하는-방법&quot;&gt;Controller method를 호출 하는 방법&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;HTTP verb&amp;gt; &amp;lt;controller method name&amp;gt; &amp;lt;params&amp;gt;

get :index

get :edit, id: 1

get :show, id: 1

post :create, name: 'a', brand: 'b'

delete :destroy, id: 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;controller-method에서-선언된-변수에-접근하는-방법&quot;&gt;Controller method에서 선언된 변수에 접근하는 방법&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;assign(:variable)&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;expect(assign(:items)).to be [item1, item2]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;controller-method로-부터-반환되는-값&quot;&gt;Controller method로 부터 반환되는 값&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;response&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;expect(response).to redirect_to user_path
expect(response).to render_template :index
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-crud-method-test&quot;&gt;1. CRUD method test&lt;/h3&gt;

&lt;h4 id=&quot;a-get-request&quot;&gt;a. GET Request&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;원하는 데이터가 instance variable에 제대로 할당되어야 한다.&lt;/li&gt;
  &lt;li&gt;액션에 맞는 템플릿을 렌더링하여야 한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Method : #index, #new, #edit, #show&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;describe'#show'do
    it &quot;assigns the requested contact to @contact&quot; do
        contact = create(:contact)
        get :show, id: contact
        expect(assigns(:contact)).to eq contact
    end
    it &quot;renders the :show template&quot; do
        contact = create(:contact)
        get :show, id: contact 
        expect(response).to render_template :show
    end 
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;b-post-request&quot;&gt;b. POST request&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;valid parameter가 주어졌을 때
    &lt;ul&gt;
      &lt;li&gt;Database에 새로운 record 생성&lt;/li&gt;
      &lt;li&gt;원하는 path로 redirect&lt;/li&gt;
      &lt;li&gt;(옵션) Flash message 제대로 설정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;invalid parameter가 주어졌을 때
    &lt;ul&gt;
      &lt;li&gt;Database에 새로운 record를 생성하지 않음&lt;/li&gt;
      &lt;li&gt;원하는 contents rendering&lt;/li&gt;
      &lt;li&gt;(옵션) Flash message 제대로 설정&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;_&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;describe '#create.html' do
  context &quot;with valid attributes&quot; do
    it &quot;saves the new item into the database&quot; do
      expect {
        post :create, item: attributes_for(:item)
        }.to change(Item, :count).by(1)
    end
    it &quot;redirects to items#index&quot; do
      post :create, item: attributes_for(:item)
      expect(response).to redirect_to items_path
    end
    it &quot;sets flash message&quot; do
      post :create, item: attributes_for(:item)
      expect(flash[:success]).to match(&quot;create&quot;)
    end
  end
  context &quot;with invalid attributes&quot; do
    it &quot;does not save the new item into the database&quot; do
      expect {
        post :create, item: attributes_for(:invalid_item)
      }.not_to change(Item, :count)
    end
    it &quot;re-renders the :new template&quot; do
      sub_menu = create(:sub_menu)
      post :create, item: attributes_for(:invalid_item)
      
      expect(response).to render_template :new
    end
  end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ajax request&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xhr :post, :create, item: attributes_for(:item)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;status check&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;expect(response.status).to be(404)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;c-patch-request&quot;&gt;c. PATCH request&lt;/h4&gt;

&lt;p&gt;1) valid attributes&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;requested object&lt;/li&gt;
  &lt;li&gt;DB update&lt;/li&gt;
  &lt;li&gt;redirect&lt;/li&gt;
  &lt;li&gt;Flash message (success)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2) invalid attributes&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;DB update (not changed)&lt;/li&gt;
  &lt;li&gt;render&lt;/li&gt;
  &lt;li&gt;Flash message (error)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;업데이트된 record값을 다시 가져오기 : &lt;code class=&quot;highlighter-rouge&quot;&gt;reload&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;describe 'update' do
  context &quot;with valid attributes&quot; do
    it &quot;locates the requested @item&quot; do
      patch :update, id: @item, item: attributes_for(:item)
      expect(assigns(:item)).to eq(@item)
    end
    it &quot;changes @item's attributes&quot; do
      patch :update, id: @item, item: attributes_for(:item, name: &quot;!&quot;)
          
      @item.reload

      expect(@item.name).to eq &quot;!&quot;
    end
    it &quot;redirects to item#index&quot; do
      patch :update, id: @item, item: attributes_for(:item)
      expect(response).to redirect_to items_path
    end
  end
  context &quot;with invalid attributes&quot; do
    it &quot;does not change the @item's attributes&quot; do
      name = @item.name
      patch :update, id: @item, item: attributes_for(:invalid_item)
      expect(@item.reload.name).to eq(name)
    end
    it &quot;re-renders the :edit template&quot; do
      patch :update, id: @item, item: attributes_for(:invalid_item)
      expect(response).to render_template :edit
    end
    it 'sets flash message' do
      patch :update, id: @item, item: attributes_for(:invalid_item)
      expect(flash[:danger][:name]).not_to be_nil
    end
  end
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;d-delete-request&quot;&gt;d. DELETE request&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;잘 지워졌는&lt;/li&gt;
  &lt;li&gt;지우고나서 redirect&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;_&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;describe '#destroy' do
  it &quot;deletes the item&quot; do
    expect {
      delete :destroy, id: @item
    }.to change(Item, :count).by(-1)
  end
  it &quot;redirects to item#index&quot; do
    delete :destroy, id: @item
    expect(response).to redirect_to items_path
  end
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;###2. Non-CRUD method test
###3. Nested Attributes
###4. Nested Routes&lt;/p&gt;

&lt;hr /&gt;
</content>
 </entry>
 
 <entry>
   <title>마인드 스토밍(mind storming) - 창의력을 기르는 방법</title>
   <link href="http://localhost:4000/biz/idea/2016/12/04/mind-storming/"/>
   <updated>2016-12-04T00:00:00+09:00</updated>
   <id>http://localhost:4000/biz/idea/2016/12/04/mind-storming</id>
   <content type="html">&lt;p&gt;마인드 스토밍(mind storming) - 창의력을 기르는 방법&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;종이에 ‘질문 형식’으로 가장 큰 목표나 문제점을 적는다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;구체적일 수록 대답을 얻는게 쉽다
        &lt;ul&gt;
          &lt;li&gt;Bad : “어떻게 하면 내가 더 행복할 수 있을까?”&lt;/li&gt;
          &lt;li&gt;Good : “어떻게 하면 내년에 소득을 5만 달러에서 10만 달러로 올릴 수 있을까?”&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;20개의 대답을 적는다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;개인적이고, 긍정적이며 현재의 관점에서 서술한다.
        &lt;ul&gt;
          &lt;li&gt;Bad : 전화를 더 많이 건다.&lt;/li&gt;
          &lt;li&gt;Good : 매일 전화를 5통씩 더 걸겠다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;최소한 20개의 답을 써야 한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;처음부터 자세히 살펴보고 즉각 활용할 수 있는 ‘아이디어’를 골라, 당장 실행해보라&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;백만 달러를 버는 데 필요한 것은 단지 10퍼센트에 해당하는 새로운 아이디어 하나 - 마샬 맥루한(Marshall Mcluhan)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;현재의 상태에서 부분적으로 조금 개선하는 것만으로도 충분하다.
작은 경쟁력 하나가 자신을 다른 사람보다 앞서가게 하고 그래서 더 빨리 성공의 길로 접어들게 한다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;판매의 심리학 - 브라이언 트레이시&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>VCR - 빠른 3rd party API 테스트</title>
   <link href="http://localhost:4000/dev/rails/2016/12/02/vcr-webmocking/"/>
   <updated>2016-12-02T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2016/12/02/vcr-webmocking</id>
   <content type="html">&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;vcr-태그-사용&quot;&gt;:vcr 태그 사용&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/spec/support/vcr.rb&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;VCR.configure do |config|
  config.cassette_library_dir = &quot;spec/vcr&quot;
  config.hook_into :webmock
  config.ignore_localhost = true

  # :vcr tag 사용
  config.configure_rspec_metadata!
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;vcr-태그에-option-전달&quot;&gt;:vcr 태그에 option 전달&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;context 'with valid attributes', :vcr do

context 'with valid attributes', vcr: {record: :new_episodes} do
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;vcrerrorsunhandledhttprequesterror&quot;&gt;VCR::Errors::UnhandledHTTPRequestError&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;카세트에 저장된 URL과 test에서 요청하는 URL이 다를 때 발생&lt;/li&gt;
  &lt;li&gt;Factory_girl에서 sequence를 이용해 URL을 만들 경우, 이후에 테스트 수트가 추가되면서 URL이 변경되는 경우 발생&lt;/li&gt;
  &lt;li&gt;create() method에 URL관련된 attribute를 parameter로 넘겨줘서 고정시켜 해결 &lt;a href=&quot;https://github.com/vcr/vcr/issues/554&quot;&gt;vcr-issue&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://www.relishapp.com/vcr/vcr/v/2-2-5/docs/test-frameworks/usage-with-rspec-metadata&quot;&gt;vcr reference&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;https://semaphoreci.com/community/tutorials/stubbing-external-services-in-rails&lt;/p&gt;

&lt;p&gt;http://marnen.github.io/webmock-presentation/webmock.html&lt;/p&gt;

&lt;p&gt;http://railscasts.com/episodes/291-testing-with-vcr&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Rspec Style Guide</title>
   <link href="http://localhost:4000/2016/12/02/rspec-style-guide/"/>
   <updated>2016-12-02T00:00:00+09:00</updated>
   <id>http://localhost:4000/2016/12/02/rspec-style-guide</id>
   <content type="html">&lt;p&gt;http://betterspecs.org/ko/&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How To Test Crawling Codes</title>
   <link href="http://localhost:4000/2016/12/02/how-to-test-crawling-codes/"/>
   <updated>2016-12-02T00:00:00+09:00</updated>
   <id>http://localhost:4000/2016/12/02/how-to-test-crawling-codes</id>
   <content type="html">
&lt;p&gt;crawling할 페이지를 vcr로 mocking합니다.
해당 페이지에서 crawling 되는 결과값을 알아내서
expect()로 해당 결과가 crawling code로 부터 나오는지 확인합니다.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Google Sheet에서 Google Analytics add-on 사용하기</title>
   <link href="http://localhost:4000/growth/measure/2016/12/01/google-sheet-google-analytics-addon/"/>
   <updated>2016-12-01T00:00:00+09:00</updated>
   <id>http://localhost:4000/growth/measure/2016/12/01/google-sheet-google-analytics-addon</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;https://developers.google.com/analytics/solutions/google-analytics-spreadsheet-add-on&quot;&gt;Google analytic add-on&lt;/a&gt; 사용시 주의점 간략히 정리해 봅니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;1-빈줄금지&quot;&gt;1. 빈줄금지&lt;/h2&gt;

&lt;p&gt;모든 셀에 아래와 같이 빈줄이 있으면 안됩니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/google-analytics-add-on-no-blank.png&quot; alt=&quot;google-analytics-addon-no-blank&quot; style=&quot;width:auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-filter&quot;&gt;2. Filter&lt;/h2&gt;

&lt;p&gt;filter의 operator는 string형태로 바로 사용하면 됩니다. (==, &amp;gt;, &amp;lt;)
URL 버전(%3D%3D, %3E, %3C)으로 사용하면 동작하지 않습니다.&lt;/p&gt;

&lt;p&gt;Google sheet에서는 equal operator가 &lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;/code&gt; 이지만, google anlaytics addon에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt; 입니다.
&lt;a href=&quot;https://developers.google.com/analytics/devguides/reporting/core/v3/reference#filters&quot;&gt;filter operator list&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;아래와 같이 operator와 dimension사이에 빈칸있으면 안됩니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/google-analytics-add-on-no-space.png&quot; alt=&quot;google-analytics-addon-no-spac&quot; style=&quot;width:auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;filter를 AND조건으로 붙일 때는 filter 사이에 ‘;’(세미콜론)을 붙입니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ga:channelGrouping==Referral;ga:sessions&amp;gt;10&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;문자열을 따움표로 감싸지 않아야 합니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ga:keyword!=(not set)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-sort&quot;&gt;3. Sort&lt;/h2&gt;

&lt;p&gt;내림차순 정렬은 정렬기준 앞에 ‘-‘를 붙입니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-ga:sessions           //방문자수 내림차순 정렬&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;a href=&quot;https://ga-dev-tools.appspot.com/query-explorer/&quot;&gt;Query Test&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/analytics/devguides/reporting/core/dimsmets&quot;&gt;Dimension/metric explorer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/analytics/solutions/google-analytics-spreadsheet-add-on&quot;&gt;Google Analytics AddOn&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Google Sheet - 대시보드 만드는데 사용되는 function들</title>
   <link href="http://localhost:4000/growth/measure/2016/12/01/google-sheet-function-for-building-dashboard/"/>
   <updated>2016-12-01T00:00:00+09:00</updated>
   <id>http://localhost:4000/growth/measure/2016/12/01/google-sheet-function-for-building-dashboard</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/public/google-sheet.png&quot; alt=&quot;google-sheet-dashboard&quot; /&gt;&lt;/p&gt;

&lt;p&gt;전체 함수 리스트는 &lt;a href=&quot;https://support.google.com/docs/table/25273?hl=en&quot;&gt;google sheet function list&lt;/a&gt; 에서 확인하세요.&lt;/p&gt;

&lt;p&gt;Google Sheet를 이용해서 대시보드를 만들면서 사용한 함수들을 정리해봅니다.
Google Analytics Add-on을 사용해서 data를 가져왔습니다.(GA Add-on은 &lt;a href=&quot;/growth/measure/2016/12/01/google-sheet-google-analytics-addon/&quot;&gt;google analytics add-on&lt;/a&gt;을 참고하세요.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;공통---error-handling&quot;&gt;공통 - Error Handling&lt;/h2&gt;

&lt;p&gt;자동으로 데이터를 가져오는 대시보드를 만들 때, 데이터가 없는 경우도 생각해야 합니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;에러 방생시 0을 반환&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;= iferror(에러가발생하는_연산, 0)    // = 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;하나의-column이-일치하는-row의-데이터-가져오기&quot;&gt;하나의 column이 일치하는 row의 데이터 가져오기&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A column에서 &quot;naver&quot;를 찾아서, B column 값을 가져오기&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;= vlookup(&quot;naver&quot;, A:B, 2, false)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;마지막 인자(false)는 exact match를 뜻합니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;두개의-column이-일치하는-row의-데이터를-가져오기&quot;&gt;두개의 column이 일치하는 row의 데이터를 가져오기&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A column과 B column값이  &quot;naver&quot;, &quot;organic&quot; 인 row의 C column 값 가져오기&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;=index( 
    filter(                 // filter()는 조건이 맞는 raw를 반환합니다.
        A:C,                // 조건을 확인할 영역
        A:A = &quot;naver&quot;,      // 첫번째 조건
        B:B = &quot;organic&quot;     // 두번째 조건
    )
    , 3                     // 가져올 데이터의 column 순서 3 = c column
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;가져올 데이터가 D column 이라면, filter의 range를 A:D로 바꾸고, index에 마지막 이자를 3에서 4로 바꿉니다.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;filter&lt;/em&gt;는 여러개의 조건을 계속 설정할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;index&lt;/em&gt;는 특정 row, column의 값을 가져오는 함수입니다. 
row가 여러개인 경우엔 index(range, , 1) 와 같이 row값을 생략하면 1번 column만으로 만들어진 cell array를 반환합니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;가변적인-데이터를-모두-가져오기&quot;&gt;가변적인 데이터를 모두 가져오기&lt;/h2&gt;

&lt;p&gt;referral path처럼 데이터 숫자가 바뀔 수 있는 경우엔 비어있는 셀이 나올 때 까지 모든 데이터를 가져오는게 좋습니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A column의 비어있지 않은 모든 데이터 가져오기&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;= filter(
    A:A, 
    isblank(A:A) = FALSE
    )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://productforums.google.com/forum/#!topic/docs/6B-wbF1Om1g&quot;&gt;credit - goole docs forum&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;formatting&quot;&gt;Formatting&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;conditional-formatting---custom-fomula&quot;&gt;Conditional Formatting - custom fomula&lt;/h3&gt;

&lt;p&gt;custom fomula 사용시, 대상이 되는 셀의 값을 reference로 하려면, 선택한 영역의 제일 첫 cell을 넣어주면 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;B30:B33 을 선택한 경우&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;= B30 &amp;gt; 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;짝수 행 선택&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;= iseven(row())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;홀수 행 선택&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;= iseven(row())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;첫 문자가 '+' 인 경우&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;= left(B30, 1) = '+'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;끝 문자가 '.'인 경우&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;= right(B30, 1) = '.'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;주의&lt;/code&gt; 서로 다른 condition이 하나의 cell에서 충돌하면 conditional formatting이 제대로 동작하지 않습니다.&lt;/p&gt;

&lt;p&gt;만약 짝수행 배경색을 넣는 것과, 양수/음수에 따라 글자색을 바꾸는 conditional formatting을 적용하려면 총 4가지 경우에 대해서 conditional formatting을 설정해 줘야 합니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;= and ( iseven(row()),  B30&amp;gt; 0)  //양수 &amp;amp; 짝수행
= and ( iseven(row()),  B30&amp;lt; 0)  //음수 &amp;amp; 짝수행
= and ( isodd(row()),   B30&amp;gt; 0)  //양수 &amp;amp; 홀수행
= and ( isodd(row()),   B30&amp;lt; 0)  //음수 &amp;amp; 홀수행
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;text&quot;&gt;Text&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;text 끼리의 합치기&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;= &quot;a&quot; &amp;amp; &quot;b&quot;                 // &quot;ab&quot;
= concatenate(&quot;a&quot;, &quot;b&quot;)     // &quot;ab&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;text-1&quot;&gt;text()&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;text()&lt;/em&gt;는 주어진 formatting을 적용한 text로 반환합니다.
&lt;code class=&quot;highlighter-rouge&quot;&gt;#&lt;/code&gt; 은 자리수를 나타내며, 자리에 숫자가 없으면 빈칸이 됩니다.
반대로 &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;은 자리에 숫자가 없으면 0을 채워넣습니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;주로 사용하는 formatting list&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;₩#,##0&quot;
&quot;0.00%&quot;
&quot;#,##0&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;원화 (값이 0일 때 ₩0 표시)&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;= text(12312, &quot;₩#,##0&quot;)     // ₩12,312
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;퍼센트 (값이 0일 때 0% 표시)&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;= text(0.11, &quot;0.00%&quot;)      // 1.10%
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;숫자 (천단위 구분점, 값이 0일 때 0표시)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;= text(1123, &quot;#,###&quot;)       // 1,123
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;값이-양수일-때--기호-넣기&quot;&gt;값이 양수일 때 ‘+’ 기호 넣기&lt;/h4&gt;

&lt;p&gt;음수일 경우엔 기본적으로 ‘-‘ 기호가 표시되지만, 양수인 경우엔 ‘+’ 기호가 표시되지 않습니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A1이 B1보다 큰 경우에 '+' 기호 넣기&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;= if (
    A1 - B1 &amp;gt; 0, 
    concatenate(&quot;+&quot;, text(A1-B1, &quot;#,##0&quot;)), 
    text(A1-B1, &quot;#,##0&quot;)
    )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;indent&quot;&gt;Indent&lt;/h4&gt;

&lt;p&gt;Google sheet에는 Indent 기능이 없지만, 아래와 같이 빈칸을 집어넣어 indenting 효과를 줄 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;= REPT( CHAR( 160 ) , 15 ) &amp;amp; your_text  // 15를 바꾸면 원하는 indent depth를 조절할 수 있습니다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;기타&quot;&gt;기타&lt;/h2&gt;

&lt;h3 id=&quot;연산자&quot;&gt;연산자&lt;/h3&gt;
&lt;p&gt;”&amp;lt;&amp;gt;” : 같지 않음&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;특정-에러를-타겟하는-방법&quot;&gt;특정 에러를 타겟하는 방법&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://support.google.com/docs/answer/3238305?hl=en&quot;&gt;Error.type&lt;/a&gt; 은 에러 유형에 따라 숫자를 반환합니다.&lt;/p&gt;

&lt;p&gt;Error Type List
1 for #NULL!
2 for #DIV/0!
3 for #VALUE!
4 for #REF!
5 for #NAME?
6 for #NUM!
7 for #N/A
8 for all other errors&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;A1이 #NULL! 에러일 경우, 0으로 값을 바꾸기&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;= if(Error.type(A1) = 1, 0, A1)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://productforums.google.com/forum/#!topic/docs/q_As66-Q3P4&quot;&gt;credit - forum&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;reference
&lt;a href=&quot;http://www.benlcollins.com/spreadsheets/10-techniques-for-building-dashboards-in-google-sheets/&quot;&gt;10-techniques-for-building-dashboards-in-google-sheets&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Heroku에서 Timezone 설정하기</title>
   <link href="http://localhost:4000/dev/heroku/2016/11/30/set-timezone-on-heroku/"/>
   <updated>2016-11-30T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/heroku/2016/11/30/set-timezone-on-heroku</id>
   <content type="html">&lt;h3 id=&quot;0-codes&quot;&gt;0. Codes&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;heroku config:add TZ=&quot;Asia/Seoul&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&quot;&gt;tz database timezone&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;full credit - &lt;a href=&quot;http://blog.pardner.com/2012/08/setting-the-default-time-zone-for-a-heroku-app/&quot;&gt;http://blog.pardner.com/2012/08/setting-the-default-time-zone-for-a-heroku-app/&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Integration test or Unit test</title>
   <link href="http://localhost:4000/dev/rails/test/2016/11/30/railscast-how-to-test/"/>
   <updated>2016-11-30T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/test/2016/11/30/railscast-how-to-test</id>
   <content type="html">&lt;p&gt;Integration_test에서는 사용자가 신경 쓸만한 부분을 테스트한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;메일을 받는다&lt;/li&gt;
  &lt;li&gt;메일 주소를 넣는다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;사용자가 신경쓰지 않는 부분들은 Unit test 레벨에 넘긴다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;메일에 올바른 password_reset token을 받는다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;a href=&quot;http://railscasts.com/episodes/275-how-i-test&quot;&gt;railscast&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Rails Test 0 Table of Contents</title>
   <link href="http://localhost:4000/dev/rails/test/2016/11/30/rails-test-toc/"/>
   <updated>2016-11-30T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/test/2016/11/30/rails-test-toc</id>
   <content type="html">&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Test Philasophy&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;https://github.com/lelylan/betterspecs/issues/5&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Rspec style guide&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/2016/12/02/rspec-style-guide/&quot;&gt;Rspec Style Guide&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Test Environment&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;/dev/rails/2016/08/20/rails-guard/&quot;&gt;Guard 설정&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;/dev/rails/2016/08/13/fast-test-with-guard-and-zeus/&quot;&gt;빠른 테스트 설정 - Zeus &amp;amp; Guard &lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Model test&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;/dev/rails/test/2016/11/30/rails-test-model/&quot;&gt;Rails model test with Rspec&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;/dev/rails/test/2016/11/30/factory_girl/&quot;&gt;Factory_girl 사용법 정리&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;/dev/rails/2016/12/02/vcr-webmocking/&quot;&gt;VCR - 빠른 3rd party API 테스트&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Controller test&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/dev/rails/test/rspec/2016/12/06/rspec-controller/&quot;&gt;Rails controller test with Rspec&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;integration-test&quot;&gt;Integration-test&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/dev/rails/test/2016/11/30/railscast-how-to-test/&quot;&gt;Integration test에서는 어떤 것을 테스트해야 될까&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;etc&quot;&gt;etc&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/2016/12/02/how-to-test-crawling-codes/&quot;&gt;Crawling code를 테스트하는 방법&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Rails Test 1 Model</title>
   <link href="http://localhost:4000/dev/rails/test/2016/11/30/rails-test-model/"/>
   <updated>2016-11-30T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/test/2016/11/30/rails-test-model</id>
   <content type="html">&lt;p&gt;Model에서 테스트 해야 할 것.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;유효한 attritutes를 넘겼을 때 model의 create method가 유효해야한다.&lt;/li&gt;
  &lt;li&gt;유효하지 않은 데이터는 유효성 검사를 통과하지 않아야 한다.&lt;/li&gt;
  &lt;li&gt;클래스 매소드(+scope)와 인스턴스 매소드가 예상한것과 같이 동작한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;item.rb&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class Item &amp;lt; ActiveRecord::Base
    ...
    validate :name, presence: true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;1) 유효한 attritutes를 넘겼을 때 model의 create method가 유효해야한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;context 'with valid attritues' do
    it '#create' do

        expect {
            Item.create(name: &quot;A&quot;)
        }.to change(Item, :count).by(1)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;2) 유효하지 않은 데이터는 유효성 검사를 통과하지 않아야 한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;item = Item.new()
item.valid?
expect(item.errors[:name]).to include(&quot;can't be blank&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;3) 클래스 매소드, scope, 인스턴스 매소드가 예상한것과 같이 동작한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;it '#instance_method' do
end

it '::class_method' do
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;a href=&quot;https://leanpub.com/everydayrailsrspec&quot;&gt;Everyday Rails testing with Rspec&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Jekyll에서 다른 post 링크를 넣는 방법</title>
   <link href="http://localhost:4000/dev/jekyll/2016/11/30/jekyll-post-url/"/>
   <updated>2016-11-30T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/jekyll/2016/11/30/jekyll-post-url</id>
   <content type="html">&lt;p&gt;Post에서 다른 post(2016-11-30-filename.md)의 링크를 넣는 방법.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{% post_url 2016-11-30-filename %}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Jekyll documentation에서는 sub directory가 있는 경우 subDirectory를 명시하도록 되어있지만, 시도해보니, directory path를 넣으면 compile error가 발생하고 subdirectory없이 파일명으로만 하였더니, 링크가 제대로 생성되었다.&lt;/p&gt;

&lt;p&gt;post_url을 이용해서 링크를 만드는 방법&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[link_text]({% post_url 2016-11-30-filename %})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;a href=&quot;http://jekyllrb.com/docs/templates/#post_url&quot;&gt;jekyll doc&lt;/a&gt;
&lt;a href=&quot;http://stackoverflow.com/questions/4629675/jekyll-markdown-internal-links&quot;&gt;stackoverflow&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Jekyll에서 forloop index 알아내기</title>
   <link href="http://localhost:4000/dev/jekyll/2016/11/30/jekyll-forloop-index/"/>
   <updated>2016-11-30T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/jekyll/2016/11/30/jekyll-forloop-index</id>
   <content type="html">&lt;p&gt;jekyll은 liquid 문법을 사용합니다.&lt;/p&gt;

&lt;p&gt;for loop에서 몇번 째 iteration인지 아는 방법&lt;/p&gt;

&lt;p&gt;{% for category in page.categories %}
    {{ forloop.index }}
{% endfor %}&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;forloop.index&lt;/code&gt; 는 1 부터 시작합니다. (왜 0이 아닌거지?)&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;a href=&quot;https://help.shopify.com/themes/liquid/objects/for-loops&quot;&gt;liquid reference - forloop&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Gem - Factory_girl</title>
   <link href="http://localhost:4000/dev/rails/test/2016/11/30/factory_girl/"/>
   <updated>2016-11-30T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/test/2016/11/30/factory_girl</id>
   <content type="html">&lt;p&gt;&lt;small&gt;FactoryGirl Rails v4.4 기준입니다.&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;fixture-쓰지-말고-factorygirl-쓰자&quot;&gt;Fixture 쓰지 말고, FactoryGirl 쓰자.&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Fixture는 Active Record를 우회해서 validation이 안된다.&lt;/li&gt;
  &lt;li&gt;데이터가 쉽게 변경되어서 test code만큼 test db 관리에 신경써야 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;valid--invalid-factory&quot;&gt;Valid / invalid factory&lt;/h3&gt;

&lt;p&gt;한 모델에 대해 factory를 만들 때 기본적으로 valid / invalid factory를 생성해둔다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# app/models/item.rb
class Item &amp;lt; ActiveRecord::Base
  validates :name, presence: true
  ...
end


# spec/factories.rb
factory :item do
  sequence(:name) { |n| &quot;Item_#{n}&quot;}
  ...

  factory :invalid_item do
    name nil
  end
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;valid/invalid factory는 &lt;code class=&quot;highlighter-rouge&quot;&gt;attributes_for&lt;/code&gt; method를 이용해서 controller spec에서 사용한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# spec/controllers/item_controller_spec.rb
context &quot;with valid attributes&quot; do
  it &quot;saves the new item into the database&quot; do
    expect {
      post :create, item: attributes_for(:item)
      }.to change(Item, :count).by(1)
  end
end
context &quot;with invalid attributes&quot; do
  it &quot;does not save the new item into the database&quot; do
    expect {
      post :create, item: attributes_for(:invalid_item)
    }.not_to change(Item, :count)
  end
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;association&quot;&gt;Association&lt;/h3&gt;

&lt;p&gt;nested_attribute를 설정한 경우, factory에도 nested attribute를 받아서 assocation factory를 생성하게 할 수 있다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# app/models/item.rb
class Item &amp;lt; ActiveRecord::Base
  ...
  accepts_nested_attributes_for :keywords, allow_destroy: true
  ...

  #strong parameter
  
  def item_params
    params.require(:item).permit(:id, :name, keywords_attributes: [:id, :name, '_destroy')
  end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;associated factory에 넘길 parameter와 생성할 assocated factory 갯수를 &lt;code class=&quot;highlighter-rouge&quot;&gt;ignore&lt;/code&gt;로 설정해준다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# spec/factories.rb

factory :item do
  sequence(:name) { |n| &quot;Item_#{n}&quot;}

  factory :item_with_keywords do
    ignore do
      keywords_count 1
      nmc 0
    end
    after(:create) do |item, evaluator|
      create_list(:keyword, evaluator.keywords_count, {item: item, nmc: evaluator.nmc})
    end
  end
end

factory :keyword do
    sequence(:name) { |n| &quot;Keyword_#{n}&quot;}
  end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;factory 생성시에 strong parameter와 같이 nested attributes를 함께 &lt;code class=&quot;highlighter-rouge&quot;&gt;create&lt;/code&gt; method에 넘겨준다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;item = create(:item, keywords_attributes: [attributes_for(:keyword)] )

post :create, item: attributes_for(:item, keywords_attributes: [attributes_for(:keyword)]))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;faker-gem&quot;&gt;Faker Gem&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/stympy/faker&quot;&gt;faker&lt;/a&gt; 를 이용하면 이름/이메일/주소 등 실제 데이터같은 샘플 데이터를 얻을 수 있다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Gemfile
group :development, :test do
  gem 'faker', '~&amp;gt; 1.4.3'
end

# spec/factories.rb
factory :user do
  name Faker::Name.name
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;내가-겪은-trouble&quot;&gt;내가 겪은 Trouble&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;has_secure_password&lt;/code&gt; 를 사용했을 때, factory_girl로 만든 &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt;로 login하는데 문제가 있었다. 원인은 아직모르겠으나, factory를 사용하지 않고, ActiveRecord를 직접 생성하는 것으로 우회했다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Not working
factory :user do
  factory :admin do
  end
end

# Workaround
factory :user do
end

factory :admin, class: User do
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/thoughtbot/factory_girl/blob/master/GETTING_STARTED.md#defining-factories&quot;&gt;Model과 다른 이름의 factory 만드는 guide&lt;/a&gt;
&lt;a href=&quot;http://ricostacruz.com/cheatsheets/factory_girl.html&quot;&gt;FactoryGirl Cheat Sheet&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Gem Nokogiri - 웹페이지 크롤링</title>
   <link href="http://localhost:4000/dev/rails/2016/11/28/nokogiri/"/>
   <updated>2016-11-28T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2016/11/28/nokogiri</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/sparklemotion/nokogiri&quot;&gt;Nokogiri&lt;/a&gt;는 selector를 이용해 웹페이지의 정보를 가져올 수 있게 해줍니다.
링크를 타고 가면서 크롤링 하는 것을 원할 경우엔, &lt;a href=&quot;https://github.com/sparklemotion/mechanize&quot;&gt;Mechanize&lt;/a&gt;를 사용하세요.&lt;/p&gt;

&lt;h3 id=&quot;nokogiri-gem-설치&quot;&gt;Nokogiri gem 설치&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem install nokogiri
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;설치-오류시&quot;&gt;설치 오류시&lt;/h3&gt;

&lt;p&gt;limbiconv error는 &lt;a href=&quot;http://www.nokogiri.org/tutorials/installing_nokogiri.html#mac_os_x&quot;&gt;nokogiri tutorial&lt;/a&gt; 참고
libxml이 없는 경우엔 설치&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install libxml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;xz 오류시 workaround &lt;a href=&quot;https://github.com/sparklemotion/nokogiri/issues/1483&quot;&gt;nokogiri-issue-1483&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew uninstall xz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;요약&quot;&gt;요약&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;doc = Nokogiri::HTML(open(url))

#CSS selector로 찾기
doc.css('nav ul.menu li a', 'article h2').each do |link|
    # attributes
    puts link.attributes[&quot;id&quot;].value if link.attributes[&quot;id&quot;]
    
    puts link.content
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;한글-인코딩-문제&quot;&gt;한글 인코딩 문제&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://wolfapple.tumblr.com/post/30861736496/open-uri-%EC%82%AC%EC%9A%A9%EC%8B%9C-%ED%95%9C%EA%B8%80%EC%9D%B4-%EA%B9%A8%EC%A7%88%EB%95%8C&quot;&gt;wolfapple&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;doc = Nokogiri::HTML(open('http://blog.naver.com/xxxx', 'r:binary').read.encode('utf-8', 'euc-kr'))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;한글 인코딩 시 간혹 euc-kr encoding으로 처리할 수 없는 문자가 있는 경우가 있다. :invalid, :undef 옵션을 주면, error를 방지하고, encoding되지 않는 문자를 ‘?’로 바꾼다. &lt;a href=&quot;http://www.justinweiss.com/articles/3-steps-to-fix-encoding-problems-in-ruby/&quot;&gt;Justin Weiss&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;doc = Nokogiri::HTML(open('http://blog.naver.com/xxxxx', 'r:binary').read.encode('utf-8', 'euc-kr', invalid: :replace, undef: :replace))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;xml-파싱시&quot;&gt;XML 파싱시&lt;/h3&gt;

&lt;p&gt;XML 파싱 할 때는, HTML 함수를 쓰지마세요.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;doc = Nokogiri::XML(open(url))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

</content>
 </entry>
 
 <entry>
   <title>사업을 시작하기전 해야 할 질문</title>
   <link href="http://localhost:4000/biz/entrepreneurship/2016/11/18/first-question-to-start-business/"/>
   <updated>2016-11-18T00:00:00+09:00</updated>
   <id>http://localhost:4000/biz/entrepreneurship/2016/11/18/first-question-to-start-business</id>
   <content type="html">&lt;blockquote&gt;
  &lt;p&gt;어떤 이유로 기업가정신에 관심을 갖든 제일 먼저 해야 할 일은 다음의 질문에 자신만의 답을 찾는 것이다.
“오랜 기간 지치지 않고 즐기면서 잘할 수 있는 일은 무엇일까?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;이유를 찾았다면, 이제 고객 불편을 발견하는 단계로 나아갈 준비가 된 셈이다.
관심사, 나만의 전문성이라는 이정표가 있으므로 고객 불편을 정의하고 해결책을 찾는 여정도 매우 흥미로울 것이다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://www.amazon.com/gp/product/1118692284/ref=as_li_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=1118692284&amp;amp;linkCode=as2&amp;amp;tag=bebetem-20&amp;amp;linkId=3dc01d138ace7ecba664bcbea5db1af4&quot;&gt;Disciplined Entrepreneurship: 24 Steps to a Successful Startup&lt;/a&gt;&lt;img src=&quot;//ir-na.amazon-adsystem.com/e/ir?t=bebetem-20&amp;amp;l=am2&amp;amp;o=1&amp;amp;a=1118692284&quot; width=&quot;1&quot; height=&quot;1&quot; border=&quot;0&quot; alt=&quot;&quot; style=&quot;border:none !important; margin:0px !important;&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>첫 고객 만들기</title>
   <link href="http://localhost:4000/biz/%EC%84%B8%EC%9D%BC%EC%A6%88/2016/11/16/how-to-make-first-customer/"/>
   <updated>2016-11-16T00:00:00+09:00</updated>
   <id>http://localhost:4000/biz/%EC%84%B8%EC%9D%BC%EC%A6%88/2016/11/16/how-to-make-first-customer</id>
   <content type="html">&lt;h3 id=&quot;1-아는-사람-총-동원&quot;&gt;1. 아는 사람 총 동원&lt;/h3&gt;

&lt;p&gt;아는 사람에게 다섯사람 정도를 소개시켜달라고 요청
사람들은 기꺼이 도와주려 한다.&lt;/p&gt;

&lt;h3 id=&quot;2-스토킹-그리고-경외심awe&quot;&gt;2. 스토킹 그리고 경외심(awe?)&lt;/h3&gt;

&lt;p&gt;만나고 싶은 사람이 있다면,
그 사람을 알것 같은 사람에게 소개 email을 요청하거나, 전화로 미리 연락할 것을 알려줄것을 요청
다음 소개메일을 보내고, 이어 전화로 연결시킨다.
결혼식을 가거나, 헬스장에 찾아가는건 추천하지 않는다.&lt;/p&gt;

&lt;p&gt;미팅을 가질 수 있다면, 이제 경외감이 들게하라
현 사업의 잠재적 문제점을 조사
미팅의 절반은 이런 문제점을 겨냥한 질문들을 하고
네 사업과 무관한 도움을 주려 노력
경외심이 들 정도로 도움을 주면, 그제야 너와 네 사업에 관심을 가질 것임&lt;/p&gt;

&lt;h3 id=&quot;3-최대한-긍정적이게-대답하기&quot;&gt;3. 최대한 긍정적이게 대답하기&lt;/h3&gt;

&lt;p&gt;Q. 다른 고객이 얼마나 있어요?
A. 한 번 사용한 사람들 중 95%가 추천한다는 사실에 비하면 그 숫자는 중요하지 않죠.&lt;/p&gt;

&lt;p&gt;Q. 사업을 하신지는 몇년이나 되었나요?
A. 전 이 시장에 풍부한 경험이 있어요. 그러다 최근에 대기업에게 제공하던 것과 똑같은 품질의 서비스를 더 낮은 가격에 가지고 나왔습니다.&lt;/p&gt;

&lt;h3 id=&quot;4-신뢰도를-위한-파트너십-만들기&quot;&gt;4. 신뢰도를 위한 파트너십 만들기&lt;/h3&gt;

&lt;p&gt;생짜, 아무런 브랜드 신뢰도가 없다면, 이미 신뢰도가 높은 기업의 것을 가져다가 쓰는게 어떨까&lt;/p&gt;

&lt;h3 id=&quot;5-전문가가-되라&quot;&gt;5. 전문가가 되라.&lt;/h3&gt;

&lt;p&gt;전문적인 글등으로 신뢰를 얻으면 너에게 사려고 할 것이다.
사기치거나 속이지 말것. 정말 중요.
일단 전문성을 쌓았으면, 모든 미디어 채널을 통해 강조하기
Tweet, Facebook, Blog
guest blog
white paper를 쓰고 이메일을 보내고
세미나를 열어서 네 전문분야를 배우려는 ‘고객’들을 초대해.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;원문 : &lt;a href=&quot;https://www.entrepreneur.com/article/239158&quot;&gt;https://www.entrepreneur.com/article/239158&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>판매의 심리학 - 브라이언 트레이시</title>
   <link href="http://localhost:4000/book/2016/2016/11/14/the-psychology-of-selling/"/>
   <updated>2016-11-14T00:00:00+09:00</updated>
   <id>http://localhost:4000/book/2016/2016/11/14/the-psychology-of-selling</id>
   <content type="html">&lt;blockquote&gt;
  &lt;p&gt;고객은 특성을 사는게 아니라, 이득을 구매할 뿐이다.
그들은 결코 제품이나 서비스를 사는 게 아니다, 자신의 문제에 대한 해결법을 사는 것이다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;본능적으로 느끼는 회의적인 정서와 심리적 저항감을 무너뜨리려면 최소한 5회를 방문하는 정도의 노력이 필요하다는 것을 기억해야 한다. 거래를 성사시키고 싶다면, 적어도 5번이나 그 이상 방문하여 고객과 직접 이야기를 나눠라. 나와 내 회사가 고객에게 어떤 이익을 제공하는지 충분히 전달해야 한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;어떤 제품을 구매할 때, 기대되는 이득보다는 구매하지 않을 때 예상되는 손해가 사람들의 구매동기를 더 많이 자극한다는 얘기다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;iframe style=&quot;width:120px;height:240px;&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; src=&quot;//ws-na.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&amp;amp;OneJS=1&amp;amp;Operation=GetAdHtml&amp;amp;MarketPlace=US&amp;amp;source=ac&amp;amp;ref=qf_sp_asin_til&amp;amp;ad_type=product_link&amp;amp;tracking_id=bebetem-20&amp;amp;marketplace=amazon&amp;amp;region=US&amp;amp;placement=0785288066&amp;amp;asins=0785288066&amp;amp;linkId=cbdb9a32f47663ea36c882286b7bcc48&amp;amp;show_border=false&amp;amp;link_opens_in_new_window=true&amp;amp;price_color=333333&amp;amp;title_color=0066c0&amp;amp;bg_color=ffffff&quot;&gt;
    &lt;/iframe&gt;
</content>
 </entry>
 
 <entry>
   <title>Rails - text-area 줄바꿈 입력값 보여주기</title>
   <link href="http://localhost:4000/dev/rails/2016/11/13/rails-new-line-in-text-area-input/"/>
   <updated>2016-11-13T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2016/11/13/rails-new-line-in-text-area-input</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://api.rubyonrails.org/classes/ActionView/Helpers/TextHelper.html#method-i-simple_format&quot;&gt;simple_format&lt;/a&gt; 을 이용하면, text-area에서 받은 줄바꿈(‘\r’)을 쉽게 보여줄 수 있다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//form
form_for comment
    f.text_area :body
    ...

//show
&amp;lt;%= simple_format comment.body %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>Jekyll 이용한 Gibhub pag에서 sitemap 생성</title>
   <link href="http://localhost:4000/dev/jekyll/seo/2016/11/13/jekyll-sitemap/"/>
   <updated>2016-11-13T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/jekyll/seo/2016/11/13/jekyll-sitemap</id>
   <content type="html">&lt;p&gt;_config.yml 파일에 아래 &lt;em&gt;jekyll-sitemap&lt;/em&gt; gem을 추가해주면, github page에서 자동으로 sitemap.xml을 생성합니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//_config.yml
    gems:
        - jekyll-sitemap
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://help.github.com/articles/sitemaps-for-github-pages/&quot;&gt;https://help.github.com/articles/sitemaps-for-github-pages/&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Jekyll에 disqus 추가하기</title>
   <link href="http://localhost:4000/dev/jekyll/2016/11/13/jekyll-disqus/"/>
   <updated>2016-11-13T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/jekyll/2016/11/13/jekyll-disqus</id>
   <content type="html">&lt;p&gt;모든 글에 대해서 disqus를 적용하려면 &lt;code class=&quot;highlighter-rouge&quot;&gt;post.html&lt;/code&gt;에 다음을 추가하면 된다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;div id=&quot;disqus_thread&quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;script&amp;gt;
    /**
     *  RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
     *  LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables
     */
    /*
    var disqus_config = function () {
        this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable
        this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
    };
    */
    (function() {  // DON'T EDIT BELOW THIS LINE
        var d = document, s = d.createElement('script');
        
        s.src = '//growthhackingmeeting.disqus.com/embed.js';
        
        s.setAttribute('data-timestamp', +new Date());
        (d.head || d.body).appendChild(s);
    })();
&amp;lt;/script&amp;gt;
&amp;lt;noscript&amp;gt;Please enable JavaScript to view the &amp;lt;a href=&quot;https://disqus.com/?ref_noscript&quot; rel=&quot;nofollow&quot;&amp;gt;comments powered by Disqus.&amp;lt;/a&amp;gt;&amp;lt;/noscript&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;글마다 disqus적용옵션을 설정하려면 &lt;code class=&quot;highlighter-rouge&quot;&gt;comments: true&lt;/code&gt; 옵션을 글 머리에 넣고, &lt;code class=&quot;highlighter-rouge&quot;&gt;post.html&lt;/code&gt;에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;page.comments&lt;/code&gt;가 있을 때만 위 코드를 삽입하면 된다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//some post
---
title: ###
layout: post comments: true
comments: true
...
---

//post.html
...

    여기에 disqus script 삽입
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://help.disqus.com/customer/portal/articles/472138-jekyll-installation-instructions&quot;&gt;https://help.disqus.com/customer/portal/articles/472138-jekyll-installation-instructions&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Rails - 20자 이상 자르고 말줄임표 붙이기</title>
   <link href="http://localhost:4000/dev/rails/2016/11/12/rails-truncate/"/>
   <updated>2016-11-12T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2016/11/12/rails-truncate</id>
   <content type="html">&lt;p&gt;Rails의 &lt;a href=&quot;http://api.rubyonrails.org/classes/ActionView/Helpers/TextHelper.html#method-i-truncate&quot;&gt;truncate&lt;/a&gt;를 쓰면, 20자 이상인 경우 20자까지만 보여주고 말줄임표로 바꿔준다.
말줄임표를 어떤 문자로 할지도 설정할 수 있다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;truncate(&quot;Once upon a time in a world far far away&quot;, length: 17)
# =&amp;gt; &quot;Once upon a ti...&quot;

truncate(&quot;Once upon a time in a world far far away&quot;, length: 17, separator: ' ')
# =&amp;gt; &quot;Once upon a...&quot;

truncate(&quot;And they found that many people were sleeping better.&quot;, length: 25, omission: '... (continued)')
# =&amp;gt; &quot;And they f... (continued)&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

</content>
 </entry>
 
 <entry>
   <title>Rails - dev 모드에서 sass 컴파일 속도 높이기</title>
   <link href="http://localhost:4000/dev/rails/2016/11/12/rails-fast-asset-pipelie-with-sassc/"/>
   <updated>2016-11-12T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2016/11/12/rails-fast-asset-pipelie-with-sassc</id>
   <content type="html">&lt;p&gt;프론트 작업할 때, sass 파일을 수정하고 브라우저에서 확인하는 것을 반복할 경우가 많다.
‘sass-rails’ gem을 사용하고 있다면, ‘sassc-rails’ gem으로 바꾸는 것 만으로 이 작업의 속도가 훨신 좋아진다!&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//Gemfile
gem 'sassc-rails'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;Full credit : &lt;a href=&quot;http://marianposaceanu.com/articles/making-rails-asset-pipeline-faster&quot;&gt;http://marianposaceanu.com/articles/making-rails-asset-pipeline-faster&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>별점넣기 - Rails Gem Ratyrate</title>
   <link href="http://localhost:4000/dev/rails/2016/11/11/rails-gem-ratyrate/"/>
   <updated>2016-11-11T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2016/11/11/rails-gem-ratyrate</id>
   <content type="html">&lt;p&gt;리뷰에 별점을 넣기 위해서 Ratyrate gem을 사용했다. 사실, ruby-toolbox에서 찾아보면 제일 많은 다운로드 수를 기록한 rating gem은 Ajaxful-rating이지만, Rails4에서 제대로 동작하지 않더라.(&lt;a href=&quot;https://github.com/edgarjs/ajaxful-rating/issues/100&quot;&gt;gibhub issue&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Google 검색에서 ‘Rails gem rating’을 쳤을 때 상위에 나오는 &lt;a href=&quot;https://github.com/wazery/ratyrate&quot;&gt;Ratyrate&lt;/a&gt;라는 gem을 사용하기로 했다. 우선 Ratyrate는 &lt;a href=&quot;https://github.com/wbotelhos/raty&quot;&gt;jQuery Raty&lt;/a&gt;라는 플러그인을 wrapping한 gem이다.&lt;/p&gt;

&lt;h3 id=&quot;설치&quot;&gt;설치&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//Gemfile
gem 'ratyrate'

//Terminal
rails g ratyrate user
bin/rake db:migrate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;사용&quot;&gt;사용&lt;/h3&gt;

&lt;p&gt;‘dimension’을 설정하여 여러개의 별점을 줄 수 있습니다. &lt;a href=&quot;http://bebetem.com&quot;&gt;베베템&lt;/a&gt; 에는 하나의 별점만 필요해 “all” 이라는 dimension을 사용했습니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class Car &amp;lt; ActiveRecord::Base
    ratyrate_rateable &quot;speed&quot;, &quot;engine&quot;, &quot;price&quot;
end


class User &amp;lt; ActiveRecord::Base
    ratyrate_rater
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;view-helper&quot;&gt;View Helper&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//@car의 'spped' dimension 대한 별점
&amp;lt;%= rating_for @car, 'speed' %&amp;gt;

//@car의 'speed' dimension 에 대한 특정 유저의 별점
&amp;lt;%= rating_for_user @car, user, 'speed' %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;view-helper---option&quot;&gt;View Helper - Option&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//readOnly:
&amp;lt;%= rating_for @car, 'speed', readonly: true %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;model-method&quot;&gt;Model method&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// car의 &quot;speed&quot;에 rate object list
//dimesion이 없으면, dimension을 설정하지 않은 rate만 반환한다.
//전체 rate를 반환하는 기능은 이 gem엔 없다.
car.rates &quot;speed&quot;

car.raters &quot;speed&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;별모양-수정하기&quot;&gt;별모양 수정하기&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;rating_for&lt;/em&gt; 또는 &lt;em&gt;rating_for_user&lt;/em&gt;에 Option을 사용해서 수정할 수 있다.&lt;/p&gt;

&lt;p&gt;gem에서는 starType 옵션을 제공하지 않지만, jquery raty plugin에서는 starType옵션을 제공합니다. 기본 starType은 &lt;img /&gt;입니다.&lt;/p&gt;

&lt;p&gt;font-awesome을 이용하기 위해서 &lt;em&gt;jquery.raty.js&lt;/em&gt;에 starType을 &lt;i&gt;로 변경합니다.&lt;/i&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//jquery.raty.js
    _createStars: function() {
        ...
        // this.opt.path는 image의 path임.
        // attrs = { class: i, src: this.opt.path + this.opt[name] };
        attrs = { class: i, src: this.opt[name] };
        ...
        // $('&amp;lt;' + this.opt.starType + ' /&amp;gt;', attrs).appendTo(this);
        $('&amp;lt;i&amp;gt;&amp;lt;/i&amp;gt;', attrs).appendTo(this);


//_comment.html.erb

&amp;lt;%= rating_for_user @item, comment.user, 'overall', readonly: true, star_on: &quot;fa fa-star fa-1x&quot;, star_off: &quot;fa fa-star-o fa-1x&quot;, star_half: &quot;fa fa-star-half-o fa-1x&quot; %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;cache-업데이트&quot;&gt;Cache 업데이트&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;update_rate_average&lt;/em&gt; method를 통해서 cache model의 record가 생성/수정된다.
Gem에서는 rate가 destroy될 때 이 method가 불리지 않는다. 이미 누군가 해결책을 &lt;a href=&quot;https://gist.github.com/piyushbeli/8b92068ce72d28ed155a&quot;&gt;github issue로&lt;/a&gt; 올렸지만, 아직 반여되진 않았다. 전반적으로 잘 관리가 안되고 있는 느낌이다.&lt;/p&gt;

&lt;p&gt;cache인 &lt;em&gt;rating_caches&lt;/em&gt; 는 gem에서 아래와 같이 선언되어 있다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dimensions.each do |dimension|
    has_one &quot;#{dimension}_average&quot;.to_sym, -&amp;gt; { where dimension: dimension.to_s },
          as: :cacheable, 
          class_name: 'RatingCache',
          dependent: :destroy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;dependent: :destroy&lt;/em&gt; 옵션이 있으니, Rate의 대상이 되는 객체를 삭제하면 RatingCache는 사라진다.&lt;/p&gt;

&lt;p&gt;문제는 Rate가 삭제될 때, RatingCache가 업데이트가 되지 않는다.
아래와 같이 &lt;em&gt;update_rate_average&lt;/em&gt;를 patch해서 사용하고 Rate가 삭제될 때 이 method를 불러주기로 했다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//config/ratyrate.rb
module Ratyrate
 def update_rate_average(stars, dimension=nil)
    if average(dimension).nil?
      send(&quot;create_#{average_assoc_name(dimension)}!&quot;, { avg: stars, qty: 1, dimension: dimension })
    else
      a = average(dimension)
      a.qty = rates(dimension).count
      //start - 추가된 부분
      if a.qty == 0
        a.avg = 0
      else
        a.avg = rates(dimension).average(:stars)
      end
      //end
      a.save!(validate: false)
    end
  end
end


//Rate가 삭제되는 곳
rate = Rate.find_by(rateable_id: self.id, rater_id: self.user.id)
if rate
    rate.destroy
end
self.update_rate_average(0, &quot;overall&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;readonly-옵션이-제대로-안된다면&quot;&gt;Readonly 옵션이 제대로 안된다면…&lt;/h3&gt;

&lt;p&gt;아무리 readonly 옵션을 넣어도, 적용이 안되더라.
github에서 sourcecode를 봤는데, 전혀 이상할게 없었다.
실제 설치된 Gem 폴더를 열어 코드를 확인해보니, Github에서 보이는것과 달랐다.
버전을 확인해 보니 1.2.2alpha 버전이었다.&lt;/p&gt;

&lt;p&gt;Gem폴더 열기 (SublimeText가 subl로 symbolic link되어 있을 때)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//~/.bash_profile
export BUNDLER_EDITOR=subl

//Terminal
bundle open ratyrate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Github에 나온 최신버전은 1.0.9이다.
그런데 Gemfile에 1.0.9로 넣으니 등록되지 않은 버전이었다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//Gemfile
gem 'ratyrate', &quot;1.0.9&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://rubygems.org/gems/ratyrate/versions&quot;&gt;rubygem.org&lt;/a&gt;에 등록된 버전은 모두 1.2.0alpha 이후 버전이었다.
음.. 뭔가 이상하지만, github주소를 넣어서 1.0.9를 설치하기로 했다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//Gemfile
gem 'ratyrate', 'git: git://github.com/wazery/ratyrate.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;github주소로 설치된 버전은 1.2.0alpha지만, 이후에 readonly부분의 bug가 수정되어서, readonly가 제대로 동작한다.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;git@&lt;/em&gt;으로 시작하는 private link를 사용하면 Heroku에서 빌드가 안된다. 알아두자.&lt;/p&gt;

&lt;hr /&gt;

</content>
 </entry>
 
 <entry>
   <title>Seo Friendly Url</title>
   <link href="http://localhost:4000/2016/11/09/SEO-friendly-url/"/>
   <updated>2016-11-09T00:00:00+09:00</updated>
   <id>http://localhost:4000/2016/11/09/SEO-friendly-url</id>
   <content type="html">&lt;p&gt;http://railscasts.com/episodes/314-pretty-urls-with-friendlyid?view=asciicast&lt;/p&gt;

&lt;p&gt;https://github.com/norman/friendly_id/tree/master/lib&lt;/p&gt;

&lt;p&gt;https://github.com/norman/friendly_id/issues/304&lt;/p&gt;

&lt;p&gt;https://github.com/norman/babosa&lt;/p&gt;

&lt;p&gt;def normalize_friendly_id
end&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>네이버 블로그 - 구글 검색 등록</title>
   <link href="http://localhost:4000/growth/google/%EB%84%A4%EC%9D%B4%EB%B2%84%EB%B8%94%EB%A1%9C%EA%B7%B8/2016/11/08/naver-blog-post-submit-google/"/>
   <updated>2016-11-08T00:00:00+09:00</updated>
   <id>http://localhost:4000/growth/google/%EB%84%A4%EC%9D%B4%EB%B2%84%EB%B8%94%EB%A1%9C%EA%B7%B8/2016/11/08/naver-blog-post-submit-google</id>
   <content type="html">&lt;ul&gt;
  &lt;li&gt;네이버 블로그 포스트를 구글에서 검색될 수 있게, 수동으로 등록하는 방법&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://www.google.co.kr/intl/ko/add_url.html&quot;&gt;https://www.google.co.kr/intl/ko/add_url.html&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;
</content>
 </entry>
 
 <entry>
   <title>좋아요/싫어요 투표 기능 gem - acts_as_votable</title>
   <link href="http://localhost:4000/dev/rails/2016/11/08/gem-act-as-votable/"/>
   <updated>2016-11-08T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2016/11/08/gem-act-as-votable</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/public/voting.png&quot; alt=&quot;bebetem.com 리뷰 투표&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;[&lt;a href=&quot;http://bebetem.com&quot;&gt;bebetem.com&lt;/a&gt; 리뷰 투표]&lt;/p&gt;

&lt;h3 id=&quot;0-gem-소개&quot;&gt;0. Gem 소개&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ryanto/acts_as_votable&quot;&gt;acts_as_votble&lt;/a&gt;은 손쉽게 좋아요/싫어요 등의 투표 기능을 구현할 수 있게 해주는 Gem입니다.&lt;/p&gt;

&lt;h3 id=&quot;1-설치법&quot;&gt;1. 설치법&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ryanto/acts_as_votable&quot;&gt;Github&lt;/a&gt; readme.md 참고하세요.
여기에는 간단하게 코드만 옮겨왔습니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//Gemfile
    ...
    gem 'acts_as_votable'
    ...

//terminal

    bundle install
    rails generate acts_as_votable:migration
    rake db:migrate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;마이그레이션이 끝나면 &lt;em&gt;votes&lt;/em&gt; table이 생성됩니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//schema.rb

    create_table &quot;votes&quot;, force: :cascade do |t|
        t.integer  &quot;votable_id&quot;
        t.string   &quot;votable_type&quot;
        t.integer  &quot;voter_id&quot;
        t.string   &quot;voter_type&quot;
        t.boolean  &quot;vote_flag&quot;
        t.string   &quot;vote_scope&quot;
        t.integer  &quot;vote_weight&quot;
        t.datetime &quot;created_at&quot;
        t.datetime &quot;updated_at&quot;
    end

    add_index &quot;votes&quot;, [&quot;votable_id&quot;, &quot;votable_type&quot;, &quot;vote_scope&quot;], name: &quot;index_votes_on_votable_id_and_votable_type_and_vote_scope&quot;, using: :btree

    add_index &quot;votes&quot;, [&quot;voter_id&quot;, &quot;voter_type&quot;, &quot;vote_scope&quot;], name: &quot;index_votes_on_voter_id_and_voter_type_and_vote_scope&quot;, using: :btree
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;votable_id&lt;/strong&gt;    : 투표 대상이 되는 객체의 아이디 &lt;br /&gt;
&lt;strong&gt;votable_type&lt;/strong&gt;  : polymorphic association에 사용. 투표 대상이 되는 객체의 클래스명 &lt;br /&gt;
&lt;strong&gt;voter_id&lt;/strong&gt;      : 투표하는 주체가 되는 객체의 아이디 &lt;br /&gt;
&lt;strong&gt;voter_type&lt;/strong&gt;    : polymorphic association에 사용. 투표 주체가 되는 객체의 클래스명 &lt;br /&gt;
&lt;strong&gt;vote_flag&lt;/strong&gt;     : true이면 좋아요. false이면 싫어요입니다. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ryanto/acts_as_votable/blob/master/lib/acts_as_votable/vote.rb&quot;&gt;act_as_votable 소스코드&lt;/a&gt;를 살펴보면 아래처럼 &lt;em&gt;votable&lt;/em&gt;과 &lt;em&gt;voter&lt;/em&gt;에 대해서 polymorphic association으로 구현되어 있습니다. 어떤 클래스든 votable과 voter가 될 수 있는거죠.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//lib/acts_as_votable/vote.rb
    belongs_to :votable, :polymorphic =&amp;gt; true
    belongs_to :voter, :polymorphic =&amp;gt; true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;2-사용법&quot;&gt;2. 사용법&lt;/h3&gt;

&lt;p&gt;투표의 대상이 되는 model에 &lt;em&gt;acts_as_votable&lt;/em&gt;을 추가합니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class Post &amp;lt; ActiveRecord::Base
    acts_as_votable
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;투표 주체가 되는 model에 &lt;em&gt;acts_as_voter&lt;/em&gt;을 추가합니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class User &amp;lt; ActiveRecord::Base
  acts_as_voter
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;acts_as_votable&lt;/em&gt; 로 추가되는 method&lt;/p&gt;

&lt;p&gt;투표기능&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//좋아요
@post.liked_by @user1
@user1.likes @post

//좋아요 취소
@post.unliked_by @user1

//싫어요
@post.disliked_by @user1

//싫어요 취소
@post.undisliked_by @user1    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;투표결과&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// 총 투표 수
@post.votes_for.size

// 좋아요 수
@post.get_likes.size

// 싫어요 수
@post.get_dislikes.size
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;투표결과리스트&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// 유저가 좋아요한 Post 리스트
@user.get_up_voted Post

// 유저가 싫어요한 Post 리스트
@user.get_down_voted Post
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;추가 기능들 &lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/ryanto/acts_as_votable#adding-weights-to-your-votes&quot;&gt;투표에 가중치 설정&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;3-controller&quot;&gt;3. Controller&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//comments_controller.rb

class CommentController &amp;lt; ApplicationController  
    ...
    def like
        @comment = Comment.find_by(id: params[:comment_id])
        if current_user
          @comment.liked_by(current_user)
        end
    
        respond_to do |format|
          format.js {
            render &quot;comments/votes&quot;
          }
        end
      end
    
      def dislike
        @comment = Comment.find_by(id: params[:comment_id])
        if current_user
          @comment.disliked_by(current_user)
        end
    
        respond_to do |format|
          format.js {
            render &quot;comments/votes&quot;
          }
        end
      end
    ...
end


//routes.rb

resources :comments do
    get 'like' =&amp;gt; &quot;comments#like&quot;
    get 'dislike' =&amp;gt; &quot;comments#dislike&quot;
  end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;4-cached-attributes&quot;&gt;4. Cached-attributes&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class AddCachedVotesToPosts &amp;lt; ActiveRecord::Migration
  def self.up
    add_column :posts, :cached_votes_total, :integer, :default =&amp;gt; 0
    add_column :posts, :cached_votes_score, :integer, :default =&amp;gt; 0
    add_column :posts, :cached_votes_up, :integer, :default =&amp;gt; 0
    add_column :posts, :cached_votes_down, :integer, :default =&amp;gt; 0
    add_column :posts, :cached_weighted_score, :integer, :default =&amp;gt; 0
    add_column :posts, :cached_weighted_total, :integer, :default =&amp;gt; 0
    add_column :posts, :cached_weighted_average, :float, :default =&amp;gt; 0.0
    add_index  :posts, :cached_votes_total
    add_index  :posts, :cached_votes_score
    add_index  :posts, :cached_votes_up
    add_index  :posts, :cached_votes_down
    add_index  :posts, :cached_weighted_score
    add_index  :posts, :cached_weighted_total
    add_index  :posts, :cached_weighted_average

    # Uncomment this line to force caching of existing votes
    # Post.find_each(&amp;amp;:update_cached_votes)
  end

  def self.down
    remove_column :posts, :cached_votes_total
    remove_column :posts, :cached_votes_score
    remove_column :posts, :cached_votes_up
    remove_column :posts, :cached_votes_down
    remove_column :posts, :cached_weighted_score
    remove_column :posts, :cached_weighted_total
    remove_column :posts, :cached_weighted_average
  end
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;5-sorting-by-voting-score&quot;&gt;5. sorting by voting score&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;order(cached_votes_score: :desc)      // score: like(+1) 와 dislike(-1)를 합한 값
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ryanto/acts_as_votable&quot;&gt;act_as_votable github&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>대댓글 기능 gem - act_as_commentable_with_threading</title>
   <link href="http://localhost:4000/dev/rails/2016/11/07/gem-act-as-commentable-with-threading/"/>
   <updated>2016-11-07T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2016/11/07/gem-act-as-commentable-with-threading</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/public/comment.png&quot; alt=&quot;bebetem.com 대댓글&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;[&lt;a href=&quot;http://bebetem.com&quot;&gt;bebetem.com&lt;/a&gt; 대댓글]&lt;/p&gt;

&lt;h3 id=&quot;0-gem-소개&quot;&gt;0. Gem 소개&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/elight/acts_as_commentable_with_threading&quot;&gt;act_as_commentable_with_threading&lt;/a&gt;은 &lt;a href=&quot;https://github.com/jackdempsey/acts_as_commentable&quot;&gt;act_as_commentable&lt;/a&gt;에 댓글에 대한 댓글(대댓글) 기능을 추가시킨 gem 입니다.&lt;/p&gt;

&lt;h3 id=&quot;1-설치법&quot;&gt;1. 설치법&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/elight/acts_as_commentable_with_threading&quot;&gt;Github&lt;/a&gt; readme.md 참고하세요.
여기에는 간단하게 코드만 옮겨왔습니다.&lt;/p&gt;

&lt;p&gt;Install&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;Gemfile&amp;gt;
    gem 'acts_as_commentable_with_threading'

&amp;lt;terminal&amp;gt;
&amp;gt; bundle install
&amp;gt; rails generate acts_as_commentable_with_threading_migration
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;설치가 끝나면 &lt;code class=&quot;highlighter-rouge&quot;&gt;Comment&lt;/code&gt; 모델이 생성되고, &lt;code class=&quot;highlighter-rouge&quot;&gt;comments&lt;/code&gt; table이 생성됩니다.&lt;/p&gt;

&lt;p&gt;schema.rb&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;create_table &quot;comments&quot;, force: :cascade do |t|
    t.integer  &quot;commentable_id&quot;
    t.string   &quot;commentable_type&quot;
    t.string   &quot;title&quot;
    t.text     &quot;body&quot;
    t.string   &quot;subject&quot;
    t.integer  &quot;user_id&quot;,          null: false
    t.integer  &quot;parent_id&quot;
    t.integer  &quot;lft&quot;
    t.integer  &quot;rgt&quot;
    t.datetime &quot;created_at&quot;
    t.datetime &quot;updated_at&quot;
end

add_index &quot;comments&quot;, [&quot;commentable_id&quot;, &quot;commentable_type&quot;], name: &quot;index_comments_on_commentable_id_and_commentable_type&quot;, using: :btree

add_index &quot;comments&quot;, [&quot;user_id&quot;], name: &quot;index_comments_on_user_id&quot;, using: :btree
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;commentable_id&lt;/code&gt;    : 댓글에 대상이 되는 객체의 아이디&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;user_id&lt;/code&gt;           : 댓글 소유자 아이디&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;parent_id&lt;/code&gt;         : 대댓글의 시작이되는 첫 댓글 아이디 (gem에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;root_comment&lt;/code&gt;라 부릅니다.)&lt;/p&gt;

&lt;h3 id=&quot;2-사용법&quot;&gt;2. 사용법&lt;/h3&gt;

&lt;p&gt;댓글에 대상이되는 model에 &lt;code class=&quot;highlighter-rouge&quot;&gt;acts_ac_commentable&lt;/code&gt;을 추가합니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class Article &amp;lt; ActiveRecord::Base
    acts_as_commentable
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;댓글을 &lt;code class=&quot;highlighter-rouge&quot;&gt;build&lt;/code&gt; 할 때는 댓글의 대상이 되는 &lt;code class=&quot;highlighter-rouge&quot;&gt;@article&lt;/code&gt;과 댓글을 작성하는 유저의 아이디 &lt;code class=&quot;highlighter-rouge&quot;&gt;@user_who_commented.id&lt;/code&gt; 를 함께 넘겨줍니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@comment = Comment.build_from( @article, @user_who_commented.id, &quot;Hey guys this is my comment!&quot; )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;기본적으로 생성되는 &lt;code class=&quot;highlighter-rouge&quot;&gt;comement.rb&lt;/code&gt;는 다음과 같은 validation이 적용되어 있습니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;belongs_to :commentable, :polymorphic =&amp;gt; true

belongs_to :user
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;:polymorphic =&amp;gt; true&lt;/code&gt; 는 commentable이 하나의 model이 아닌 여러 model이 될 수 있게 해줍니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;schema.rb&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;commentable_id&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;commentable_type&lt;/code&gt; 컬럼이 있었죠. Commentable 이라는 모델은 없지만, polymorphic-association을 통해서 어떤 모델이라도 될 수 있게 됩니다.
Rails guide의 &lt;a href=&quot;http://guides.rubyonrails.org/association_basics.html#polymorphic-associations&quot;&gt;polymorphic-association&lt;/a&gt; 부분을 참고하세요.
이전 버전이긴 하지만 &lt;a href=&quot;http://railscasts.com/episodes/154-polymorphic-association?view=asciicast&quot;&gt;Ryan Bates의 RailsCast&lt;/a&gt;에서도 polymorphic-assocation을 다루고 있습니다.&lt;/p&gt;

&lt;h3 id=&quot;3-controller&quot;&gt;3. Controller&lt;/h3&gt;

&lt;p&gt;gem에서 controller를 생성해주지는 않습니다. Controller는 직접 구성해야 되는데, 이 gem을 만든 &lt;a href=&quot;http://dustinfisher.com/acts-as-commentable-with-threading-gem/&quot;&gt;Dustin Fisher의 블로그&lt;/a&gt;에 예제코드가 있습니다.&lt;/p&gt;

&lt;p&gt;아래 코드는 &lt;a href=&quot;http://bebetem.com&quot;&gt;베베템&lt;/a&gt; 의 리뷰 시스템을 만들면서 사용한 코드입니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class CommentsController &amp;lt; ApplicationController  
    #TODO: user authentication

    def index
        redirect_to root_path
    end
  
    def new
        @item = Item.find_by(id: params[:item_id])
        @comment = Comment.build_from(@item, current_user.id, &quot;&quot;)
    end

    def show
        @comment = Comment.find_by(id: params[:id])
        @item = Item.find_by(id: @comment.commentable_id)
        if current_user
            @new_comment    = Comment.build_from(@item, current_user.id, &quot;&quot;)  
        end
    end
    

    def create
        commentable = commentable_type.constantize.find(commentable_id)
        @comment = Comment.build_from(commentable, current_user.id, body)

        respond_to do |format|
          if @comment.save
            make_child_comment
            format.html  {
              if root_comment_id
                redirect_to comment_path(root_comment_id)
              else
                redirect_to item_path(commentable_id) 
              end
            }
            format.js
          else
            format.html  { render :action =&amp;gt; &quot;new&quot; }
            format.js
          end
        end
    end

    def destroy
        @comment = Comment.find_by(id: params[:id])
        @comment.destroy
        respond_to do |format|
          format.html { redirect_to(:back)}
          format.js
        end
    end

    private

    def comment_params
        params.require(:comment).permit(:body, :commentable_id, :commentable_type, :comment_id, :root_comment_id)
    end

    def root_comment_id
        comment_params[:root_comment_id]
    end

    def commentable_type
        comment_params[:commentable_type]
    end

    def commentable_id
        comment_params[:commentable_id]
    end

    def comment_id
        comment_params[:comment_id]
    end

    def body
        comment_params[:body]
    end

    def make_child_comment
        return &quot;&quot; if comment_id.blank?
        
        parent_comment = Comment.find comment_id
        @comment.move_to_child_of(parent_comment)
    end
end  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

</content>
 </entry>
 
 <entry>
   <title>Jekyll Seo Search Engine Optimization</title>
   <link href="http://localhost:4000/2016/11/07/Jekyll-SEO-search-engine-optimization/"/>
   <updated>2016-11-07T00:00:00+09:00</updated>
   <id>http://localhost:4000/2016/11/07/Jekyll-SEO-search-engine-optimization</id>
   <content type="html">&lt;p&gt;https://github.com/jekyll/jekyll-seo-tag
https://github.com/jekyll/jekyll-sitemap&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>webkit-pading-start 제거하기</title>
   <link href="http://localhost:4000/dev/css/2016/11/03/remove-webkit-padding-start/"/>
   <updated>2016-11-03T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/css/2016/11/03/remove-webkit-padding-start</id>
   <content type="html">&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* {
    margin: 0;
    padding: 0;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;all credit : &lt;a href=&quot;http://stackoverflow.com/questions/29307357/get-rid-of-webkit-padding-start-40px&quot;&gt;http://stackoverflow.com/questions/29307357/get-rid-of-webkit-padding-start-40px&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Godaddy에서 Heroku로 DNS 설정하기</title>
   <link href="http://localhost:4000/dev/heroku/2016/10/28/godaddy-heroku-dns-forwarding/"/>
   <updated>2016-10-28T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/heroku/2016/10/28/godaddy-heroku-dns-forwarding</id>
   <content type="html">&lt;ol&gt;
  &lt;li&gt;Godaddy DNS 관리페이지에서 모든 레코드를 삭제.&lt;/li&gt;
  &lt;li&gt;다음 레코드 추가
    &lt;ul&gt;
      &lt;li&gt;유형 : CNAME&lt;/li&gt;
      &lt;li&gt;이름 : www&lt;/li&gt;
      &lt;li&gt;값 : your-heroku-app-name.herokuapp.com&lt;/li&gt;
      &lt;li&gt;TTL : 1시간&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;포워딩 설정
    &lt;ul&gt;
      &lt;li&gt;여기로 전달 : http://www.your_new_domain&lt;/li&gt;
      &lt;li&gt;전달 유형 : 301 (영구)&lt;/li&gt;
      &lt;li&gt;설정 : 포워딩만 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Heroku dashboard &amp;gt; Settings&lt;/code&gt; 에 Custom Domains에 추가
    &lt;ul&gt;
      &lt;li&gt;Domain name : www.your_new_domain.com&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;ssl-설정시&quot;&gt;SSL 설정시&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;다음 레코드 추가
    &lt;ul&gt;
      &lt;li&gt;유형 : CNAME&lt;/li&gt;
      &lt;li&gt;이름 : www&lt;/li&gt;
      &lt;li&gt;값 : your-doamin.herokudns.com&lt;/li&gt;
      &lt;li&gt;TTL : 1시간&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;포워딩 설정
    &lt;ul&gt;
      &lt;li&gt;여기로 전달 : https://www.your_new_domain&lt;/li&gt;
      &lt;li&gt;전달 유형 : 301 (영구)&lt;/li&gt;
      &lt;li&gt;설정 : 포워딩만 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;p&gt;all credit : &lt;a href=&quot;http://stackoverflow.com/questions/11492563/heroku-godaddy-send-naked-domain-to-www&quot;&gt;http://stackoverflow.com/questions/11492563/heroku-godaddy-send-naked-domain-to-www&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>SublimeText3 - 여러 줄 한번에 수정하기</title>
   <link href="http://localhost:4000/dev/sublimetext/2016/10/25/sublimetext3-edit-multiple-lines/"/>
   <updated>2016-10-25T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/sublimetext/2016/10/25/sublimetext3-edit-multiple-lines</id>
   <content type="html">&lt;h3 id=&quot;command--shift--l--split-into-lines&quot;&gt;Command + shift + L : split into lines&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;수정하려는 lines을 선택&lt;/li&gt;
  &lt;li&gt;command + shift + L&lt;/li&gt;
  &lt;li&gt;line 마다 cursor가 생깁니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;https://ci3.googleusercontent.com/proxy/A8Sb4ajRl9iQ_ikUB1ityk1tCAoNI5i1ZnS2izN7l899NVZJtSIT5a2N-Qt93cz5dPKZ1qK35rvooslX5M_IYgLn56tdVPUlYYUkiJTE5Ry-CMrE=s0-d-e1-ft#http://f.cl.ly/items/3w1A323O451P391m223K/wrap-with-quotes.gif&quot; alt=&quot;sublimtext-split-into-lines&quot; /&gt;&lt;/p&gt;

&lt;p class=&quot;center&quot;&gt;[source: http://sublimetexttips.com/]&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sublimetext.com/docs/3/multiple_selection_with_the_keyboard.html&quot;&gt;https://www.sublimetext.com/docs/3/multiple_selection_with_the_keyboard.html&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Mac OS X 10.11(El capitan)에서 SourceTree CLT 설치 실패시</title>
   <link href="http://localhost:4000/dev/rails/2016/10/23/el-capitan-sourcetree-command-line-tool/"/>
   <updated>2016-10-23T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2016/10/23/el-capitan-sourcetree-command-line-tool</id>
   <content type="html">&lt;p&gt;workaround 방법입니다.&lt;/p&gt;

&lt;p&gt;~/.bash_profile&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;alias stree='/Applications/SourceTree.app/Contents/Resources/stree'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;all credit : &lt;a href=&quot;https://jira.atlassian.com/browse/SRCTREE-3172&quot;&gt;https://jira.atlassian.com/browse/SRCTREE-3172&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Rails4에서 PG String Array type 사용하기</title>
   <link href="http://localhost:4000/dev/rails/2016/10/21/rails4-pg-string-array-form/"/>
   <updated>2016-10-21T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2016/10/21/rails4-pg-string-array-form</id>
   <content type="html">&lt;h3 id=&quot;migration&quot;&gt;migration&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class AddInstagramCodesToItem &amp;lt; ActiveRecord::Migration
    def change
        add_column :items, :instagram_codes, :string, array: true
    end
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;form&quot;&gt;form&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;div class=&quot;form-group&quot;&amp;gt;
    &amp;lt;%= f.label :instagram_codes, &quot;Instagram&quot;, class: &quot;col-sm-2 control-label&quot; %&amp;gt;
    &amp;lt;div class=&quot;col-sm-10&quot; id=&quot;item-price-selection-list&quot;&amp;gt;
      &amp;lt;%= f.text_field :instagram_codes, class: &quot;form-control&quot;%&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;controller-1&quot;&gt;controller-1&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;private

def item_params
    params.require(:item).permit(:instagram_codes, ...)
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;#controller-2&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;def create
    if @item.save
        @item.update_attribute(:instagram_codes,item_params[:instagram_codes].split(&quot;, &quot;).map {|c| c.strip})
        ...
end

def update
    if @item.update_attributes(item_params)
        @item.update_attribute(:instagram_codes,item_params[:instagram_codes].split(&quot;, &quot;).map {|c| c.strip})
        ...
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Array로 타입으로 선언한 attribute 값을 쓸 때는 array로 넘겨야 값이 써진다.
string으로 넘겼더니 기존 값도 사라지고 blank array가 되더라.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Turbolink - 인스타그램 embed가 load되지 않을 때</title>
   <link href="http://localhost:4000/dev/rails/2016/10/21/rails-turbolink-instagram-embed/"/>
   <updated>2016-10-21T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2016/10/21/rails-turbolink-instagram-embed</id>
   <content type="html">&lt;p&gt;이것 때문에 시간을 많이 뺐겼는데, turbolink 세팅을 바꾸면 될 줄 알았다.&lt;/p&gt;

&lt;p&gt;instagram.js.coffee&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;document.addEventListener &quot;turbolinks:load&quot;, (event) -&amp;gt;
    $.getScript(&quot;//platform.instagram.com/en_US/embeds.js&quot;, () -&amp;gt;
        window.instgrm.Embeds.process()
    )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;all credit : &lt;a href=&quot;http://stackoverflow.com/questions/27408917/instagram-embeds-not-working-when-adding-embeds-dynamically&quot;&gt;http://stackoverflow.com/questions/27408917/instagram-embeds-not-working-when-adding-embeds-dynamically&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Sitemap</title>
   <link href="http://localhost:4000/dev/rails/2016/10/07/sitemap/"/>
   <updated>2016-10-07T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2016/10/07/sitemap</id>
   <content type="html">&lt;p&gt;Sitemap_generator gem을 이용합니다.&lt;/p&gt;

&lt;p&gt;[Rails를 위한 가이드]가 따로 있습니다. &lt;a href=&quot;https://github.com/kjvarga/sitemap_generator#rails&quot;&gt;Rails 사용자를 위한 sitemap_generator guide&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;아래 코드 내용은 Rails4 기준입니다.&lt;/p&gt;

&lt;h3 id=&quot;initialization&quot;&gt;Initialization&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem 'sitemap_generator'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bin/rake sitemap:install&lt;/code&gt;를 이용하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;config/sitemap.rb&lt;/code&gt;가 만들어집니다.&lt;/p&gt;

&lt;h3 id=&quot;configuration&quot;&gt;Configuration&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/kjvarga/sitemap_generator#sitemap-configuration&quot;&gt;sitemap configuration 가이드&lt;/a&gt;를 참고하세요.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;config/sitemap.rb&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SitemapGenerator::Sitemap.default_host = &quot;http://****.com&quot;
SitemapGenerator::Sitemap.create do
    YourModel.find_each do |yourmodel|
        add yourmodel_path(yourmodel), :changefreq =&amp;gt; 'weekly', :lastmod =&amp;gt; yourmodel.updated_at
    end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;refresh&quot;&gt;Refresh&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bin/rake sitemap:refresh&lt;/code&gt;를 이용하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;public&lt;/code&gt; 폴더에 &lt;code class=&quot;highlighter-rouge&quot;&gt;sitemap.xml.gz&lt;/code&gt; 파일이 생성됩니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/kjvarga/sitemap_generator#rails&quot;&gt;https://github.com/kjvarga/sitemap_generator#rails&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Pagination - 다른 페이지에 같은 record가 나오는 문제</title>
   <link href="http://localhost:4000/dev/rails/sql/2016/09/28/duplicated-records-of-sql-when-using-limit-and-offset/"/>
   <updated>2016-09-28T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/sql/2016/09/28/duplicated-records-of-sql-when-using-limit-and-offset</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/mislav/will_paginate&quot;&gt;will_paginate&lt;/a&gt; gem을 이용하는데, 다른 페이지에 같은 record가 올라오는 경우가 있었다.
문제는 infinite scrolling을 넣으며 ajax로 다음 페이지를 붙이다 보니, 중복되게 반복되는 경우가 발생했다.
gem의 문제인가 해서 psql로 직접 sql을 날려보니, sql 결과에서도 같은 record가 나타났다.&lt;/p&gt;

&lt;h3 id=&quot;before&quot;&gt;Before&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pnm_development=# SELECT  &quot;sub_menus&quot;.*, &quot;menus&quot;.name FROM &quot;sub_menus&quot; INNER JOIN &quot;menus&quot; ON &quot;menus&quot;.&quot;id&quot; = &quot;sub_menus&quot;.&quot;menu_id&quot; WHERE (menus.category_id = 1)  ORDER BY menus.name collate &quot;C&quot; asc LIMIT 10 OFFSET 10;

 id |    name    |         created_at         |         updated_at         | menu_id | description |        name         
----+------------+----------------------------+----------------------------+---------+-------------+---------------------
  6 | 물티슈     | 2016-08-10 14:12:25.575423 | 2016-08-10 14:12:25.575423 |       2 |             | 물티슈와 가제손수건
 49 | 바운서     | 2016-08-17 05:47:20.868362 | 2016-08-17 05:47:20.875056 |      16 |             | 바운서
 53 | 국산 분유  | 2016-08-29 06:54:39.305488 | 2016-08-29 06:54:39.315016 |      19 |             | 분유
 54 | 해외 분유  | 2016-08-29 06:54:54.123748 | 2016-08-29 06:54:54.130446 |      19 |             | 분유
 26 | 수유등     | 2016-08-10 14:12:25.698298 | 2016-08-10 14:12:25.698298 |       7 |             | 수유-모유
 23 | 수유패드   | 2016-08-10 14:12:25.681545 | 2016-08-10 14:12:25.681545 |       7 |             | 수유-모유
 22 | 수유브라   | 2016-08-10 14:12:25.677182 | 2016-08-10 14:12:25.677182 |       7 |             | 수유-모유
 21 | 수유복     | 2016-08-10 14:12:25.672055 | 2016-08-10 14:12:25.672055 |       7 |             | 수유-모유
 25 | 유두보호기 | 2016-08-10 14:12:25.694233 | 2016-08-10 14:12:25.694233 |       7 |             | 수유-모유
 20 | 수유쿠션   | 2016-08-10 14:12:25.668275 | 2016-08-10 14:12:25.668275 |       7 |             | 수유-모유
(10 rows)

pnm_development=# SELECT  &quot;sub_menus&quot;.*, &quot;menus&quot;.name FROM &quot;sub_menus&quot; INNER JOIN &quot;menus&quot; ON &quot;menus&quot;.&quot;id&quot; = &quot;sub_menus&quot;.&quot;menu_id&quot; WHERE (menus.category_id = 1)  ORDER BY menus.name collate &quot;C&quot; asc
 LIMIT 10 OFFSET 20;

 id |     name     |         created_at         |         updated_at         | menu_id | description |     name      
----+--------------+----------------------------+----------------------------+---------+-------------+---------------
 20 | 수유쿠션     | 2016-08-10 14:12:25.668275 | 2016-08-10 14:12:25.668275 |       7 |             | 수유-모유
 26 | 수유등       | 2016-08-10 14:12:25.698298 | 2016-08-10 14:12:25.698298 |       7 |             | 수유-모유
 19 | 유축기       | 2016-08-10 14:12:25.664174 | 2016-08-10 14:12:25.664174 |       7 |             | 수유-모유
 16 | 젖병소독기   | 2016-08-10 14:12:25.642145 | 2016-08-10 14:12:25.642145 |       6 |             | 수유-분유
 17 | 분유포트     | 2016-08-10 14:12:25.650437 | 2016-08-10 14:12:25.650437 |       6 |             | 수유-분유
 56 | 겉싸개       | 2016-08-29 13:41:40.355506 | 2016-08-29 13:41:40.363311 |      20 |             | 아기 의류
 55 | 속싸개       | 2016-08-29 13:41:29.740309 | 2016-08-29 13:41:29.748772 |      20 |             | 아기 의류
 33 | 기저귀정리함 | 2016-08-17 05:31:54.731063 | 2016-08-17 05:31:54.738381 |      12 |             | 아기가구
 34 | 아기수납장   | 2016-08-17 05:32:08.658293 | 2016-08-17 05:32:08.668742 |      12 |             | 아기가구
 39 | 힙시트       | 2016-08-17 05:33:23.976077 | 2016-08-17 05:33:23.983078 |      15 |             | 아기띠/힙시트
(10 rows)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;문제가 되는 id 20번 record.&lt;/p&gt;

&lt;p&gt;sql에서의 row 순서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;ORDER BY&lt;/code&gt;로 sort하지 않는 이상 정해져 있지 않다.&lt;a href=&quot;http://stackoverflow.com/questions/15162593/postgresql-strange-collision-of-order-by-and-limit-offset&quot;&gt;stackoverflow&lt;/a&gt;
뭐가 나올지 알 수 없다는 말이네.&lt;/p&gt;

&lt;p&gt;sub_menu에 대한 정렬을 추가해서 해결했다.&lt;/p&gt;

&lt;h3 id=&quot;after&quot;&gt;after&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pnm_development=# SELECT  &quot;sub_menus&quot;.*, &quot;menus&quot;.name FROM &quot;sub_menus&quot; INNER JOIN &quot;menus&quot; ON &quot;menus&quot;.&quot;id&quot; = &quot;sub_menus&quot;.&quot;menu_id&quot; WHERE (menus.category_id = 1)  ORDER BY menus.name collate &quot;C&quot; asc, `sub_menus.name collate &quot;C&quot; asc LIMIT 10 OFFSET 10;

 id |    name    |         created_at         |         updated_at         | menu_id | description |        name         
----+------------+----------------------------+----------------------------+---------+-------------+---------------------
  6 | 물티슈     | 2016-08-10 14:12:25.575423 | 2016-08-10 14:12:25.575423 |       2 |             | 물티슈와 가제손수건
 49 | 바운서     | 2016-08-17 05:47:20.868362 | 2016-08-17 05:47:20.875056 |      16 |             | 바운서
 53 | 국산 분유  | 2016-08-29 06:54:39.305488 | 2016-08-29 06:54:39.315016 |      19 |             | 분유
 54 | 해외 분유  | 2016-08-29 06:54:54.123748 | 2016-08-29 06:54:54.130446 |      19 |             | 분유
 24 | 모유저장팩 | 2016-08-10 14:12:25.689986 | 2016-08-10 14:12:25.689986 |       7 |             | 수유-모유
 26 | 수유등     | 2016-08-10 14:12:25.698298 | 2016-08-10 14:12:25.698298 |       7 |             | 수유-모유
 21 | 수유복     | 2016-08-10 14:12:25.672055 | 2016-08-10 14:12:25.672055 |       7 |             | 수유-모유
 22 | 수유브라   | 2016-08-10 14:12:25.677182 | 2016-08-10 14:12:25.677182 |       7 |             | 수유-모유
 27 | 수유의자   | 2016-08-10 14:12:25.70253  | 2016-08-10 14:12:25.70253  |       7 |             | 수유-모유
 20 | 수유쿠션   | 2016-08-10 14:12:25.668275 | 2016-08-10 14:12:25.668275 |       7 |             | 수유-모유
(10 rows)

pnm_development=# SELECT  &quot;sub_menus&quot;.*, &quot;menus&quot;.name FROM &quot;sub_menus&quot; INNER JOIN &quot;menus&quot; ON &quot;menus&quot;.&quot;id&quot; = &quot;sub_menus&quot;.&quot;menu_id&quot; WHERE (menus.category_id = 1)  ORDER BY menus.name collate &quot;C&quot; asc, sub_menus.name collate &quot;C&quot; asc LIMIT 10 OFFSET 20;
 
 id |     name     |         created_at         |         updated_at         | menu_id | description |     name      
----+--------------+----------------------------+----------------------------+---------+-------------+---------------
 23 | 수유패드     | 2016-08-10 14:12:25.681545 | 2016-08-10 14:12:25.681545 |       7 |             | 수유-모유
 25 | 유두보호기   | 2016-08-10 14:12:25.694233 | 2016-08-10 14:12:25.694233 |       7 |             | 수유-모유
 19 | 유축기       | 2016-08-10 14:12:25.664174 | 2016-08-10 14:12:25.664174 |       7 |             | 수유-모유
 17 | 분유포트     | 2016-08-10 14:12:25.650437 | 2016-08-10 14:12:25.650437 |       6 |             | 수유-분유
 16 | 젖병소독기   | 2016-08-10 14:12:25.642145 | 2016-08-10 14:12:25.642145 |       6 |             | 수유-분유
 56 | 겉싸개       | 2016-08-29 13:41:40.355506 | 2016-08-29 13:41:40.363311 |      20 |             | 아기 의류
 55 | 속싸개       | 2016-08-29 13:41:29.740309 | 2016-08-29 13:41:29.748772 |      20 |             | 아기 의류
 33 | 기저귀정리함 | 2016-08-17 05:31:54.731063 | 2016-08-17 05:31:54.738381 |      12 |             | 아기가구
 34 | 아기수납장   | 2016-08-17 05:32:08.658293 | 2016-08-17 05:32:08.668742 |      12 |             | 아기가구
 38 | 아기띠       | 2016-08-17 05:33:14.93707  | 2016-08-17 05:33:14.942893 |      15 |             | 아기띠/힙시트
(10 rows)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>Turbolinks - Kakao sdk</title>
   <link href="http://localhost:4000/dev/rails/2016/09/27/kakao-sdk-with-turbolink/"/>
   <updated>2016-09-27T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2016/09/27/kakao-sdk-with-turbolink</id>
   <content type="html">&lt;p&gt;Codes Only.&lt;/p&gt;

&lt;p&gt;kakao_story.js&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$(document).on(&quot;turbolinks:load&quot;, function (){
    if ( $('#kakaostory-share-button').length &amp;gt; 0 ) {
        Kakao.Story.createShareButton({
      container: '#kakaostory-share-button'
    });
  }
});
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;application.html.erb&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;head&amp;gt;
    &amp;lt;%= render 'layouts/kakao-sdk' %&amp;gt;
    ...
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;%= render 'layouts/kakao-sdk-init' %&amp;gt;
    ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;_kakao-sdk-init.html.erb&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;script type='text/javascript'&amp;gt;
  if ( typeof Kakao != &quot;object&quot;) {
    Kakao.init(ENV[&quot;KAKAO-JS-KEY&quot;]);
  }
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;_kakao-sdk.html.erb&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;script src=&quot;//developers.kakao.com/sdk/js/kakao.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>Omniauth</title>
   <link href="http://localhost:4000/dev/rails/2016/09/23/omniauth/"/>
   <updated>2016-09-23T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2016/09/23/omniauth</id>
   <content type="html">&lt;p&gt;####Gemfile
&lt;code class=&quot;highlighter-rouge&quot;&gt;Omniauth-identity&lt;/code&gt; 는 hash function으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;bcrypt&lt;/code&gt;를 이용합니다. Gemfile에 &lt;code class=&quot;highlighter-rouge&quot;&gt;bcrypt&lt;/code&gt;도 추가해줍니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem 'omniauth'
gem 'omniauth-identity'
gem 'omniauth-kakao'
gem 'bcrypt',         '3.1.11'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;omniauth-초기화&quot;&gt;Omniauth 초기화&lt;/h4&gt;
&lt;p&gt;config/initializers/omniauth.rb
TODO: Rack middleware가 뭐지?
Omniauth가 좋은점이 authentication 이후에 그 정보를 어떻게 저장하고 보여주는지는 온전히 사용하는 사람의 몫으로 남겨져 있음.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Rails.application.config.middleware.use OmniAuth::Builder do
  provider :kakao, ENV['KAKAO_CLIENT_ID']
  provider :identity, on_failed_registration: lambda { |env|    
    SessionsController.action(:new).call(env)
  }
  
  # Enable to redirect a failure page in development mode
  OmniAuth.config.on_failure = Proc.new { |env|
    OmniAuth::FailureEndpoint.new(env).redirect_to_failure
  }

  # 또는 Redirect Path를 설정하고 싶다면(or if you want to customize your Redirect Path)
  # provider :kakao, ENV['KAKAO_CLIENT_ID'], {:redirect_path =&amp;gt; ENV['REDIRECT_PATH']}
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;####[Before] users table schema
&lt;code class=&quot;highlighter-rouge&quot;&gt;has_secure_password&lt;/code&gt; 를 이용해서 직접 User 모델에 authentication을 구현했었습니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;create_table &quot;users&quot;, force: :cascade do |t|
  t.string   &quot;name&quot;
  t.boolean  &quot;admin&quot;,           default: false
  t.datetime &quot;created_at&quot;,                      null: false
  t.datetime &quot;updated_at&quot;,                      null: false
  t.string   &quot;email&quot;
  t.string   &quot;password_digest&quot;
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;####Create Identity Model &amp;amp; Migration
User 모델에서 authentication을 제거하고, 이메일을 이용한 Authentication을 위해 Identity 모델을 만듭니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class RemoveEmailAndPasswordDigestFromUsers &amp;lt; ActiveRecord::Migration
  def change
    remove_column :users, :email
    remove_column :users, :password_digest
  end
end

class AddProviderAndUidToUsers &amp;lt; ActiveRecord::Migration
  def change
    add_column :users, :provider, :string
    add_index :users, :provider
    add_column :users, :uid, :integer
    add_index :users, :uid
  end
end

$ rails g model identity name:string email:string password_digest:string
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;app/controllers/sessions_controller.rb&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;def create
  auth = env[&quot;omniauth.auth&quot;]
  user = User.find_or_create_from_omniauth(auth)
  log_in(user)
  
  if admin_user?
    redirect_to admin_path
  else
    redirect_to root_path
  end
end

def destroy
  log_out
  redirect_to root_url
end

def failure
  flash[:danger] = &quot;로그인에 실패했습니다. 다시 시도해 주세요.&quot;
  redirect_to login_url
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;sessions_helper.rb&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;def log_in(user)
  session[:user_id] = user.id
end
def log_out
  session.delete(:user_id)
  @current_user = nil
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;app/models/user.rb
기존에 User 모델이 가진 validation을 지워줍니다. validation은 Identity 모델에 적용시킵니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class User &amp;lt; ActiveRecord::Base
  def self.find_or_create_from_omniauth(auth)
    find_by_provider_and_uid(auth[&quot;provider&quot;], auth[&quot;uid&quot;]) ||  create_with_omniauth(auth)
  end

  def self.create_with_omniauth(auth)
    create! do |user|
      user.provider = auth[&quot;provider&quot;]
      user.uid = auth[&quot;uid&quot;]
      user.name = auth[&quot;info&quot;][&quot;name&quot;]
    end
  end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;app/models/identities.rb&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class Identity &amp;lt; OmniAuth::Identity::Models::ActiveRecord
  before_save { self.email = email.downcase }
  validates :name, presence: true
  validates :email, presence: true, uniqueness: {case_sensitive: false}
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;route.rb&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;get 'login' =&amp;gt; 'sessions#new'
post 'login' =&amp;gt; 'sessions#create'
post &quot;/auth/:provider/callback&quot; =&amp;gt; &quot;sessions#create&quot;  
get &quot;/auth/:provider/callback&quot; =&amp;gt; &quot;sessions#create&quot;
get &quot;/auth/failure&quot; =&amp;gt; &quot;sessions#failure&quot;
delete 'logout' =&amp;gt; 'sessions#destroy'
resources :identities
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;app/views/sessions/new.html.erb&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;%= form_tag &quot;/auth/identity/callback&quot; do %&amp;gt;
  &amp;lt;div class=&quot;form-group&quot;&amp;gt;
    &amp;lt;%= label_tag :auth_key, &quot;이메일&quot; %&amp;gt;
    &amp;lt;%= email_field_tag :auth_key, nil, class: 'form-control' %&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;div class=&quot;form-group&quot;&amp;gt;
    &amp;lt;%= label_tag :password, &quot;비밀번호&quot; %&amp;gt;
    &amp;lt;%= password_field_tag :password, nil, class: 'form-control' %&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;%= submit_tag &quot;로그인&quot;, class: &quot;btn btn-default&quot; %&amp;gt;
  &amp;lt;div class=&quot;pull-right&quot;&amp;gt;
    &amp;lt;%= link_to &quot;이메일로 가입하기&quot;, new_identity_path() %&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;% end %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;app/views/identities/new.html.erb&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;%= form_tag &quot;/auth/identity/register&quot; do %&amp;gt;
  &amp;lt;% if @identity &amp;amp;&amp;amp; @identity.errors.any? %&amp;gt;
    &amp;lt;%= render partial: 'shared/error_messages', locals: {object: @identity} %&amp;gt;
  &amp;lt;% end %&amp;gt;
  &amp;lt;div class=&quot;form-group&quot;&amp;gt;
    &amp;lt;%= label_tag :email, &quot;이메일&quot; %&amp;gt;
    &amp;lt;%= email_field_tag :email, @identity.try(:email), class: 'form-control' %&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;div class=&quot;form-group&quot;&amp;gt;
    &amp;lt;%= label_tag :name, &quot;이름&quot; %&amp;gt;
    &amp;lt;%= text_field_tag :name, @identity.try(:name), class: 'form-control' %&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;div class=&quot;form-group&quot;&amp;gt;
    &amp;lt;%= label_tag :password, &quot;비밀번호&quot; %&amp;gt;
    &amp;lt;%= password_field_tag :password, nil, class: 'form-control' %&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;div class=&quot;form-group&quot;&amp;gt;
    &amp;lt;%= label_tag :password_confirmation, &quot;비밀번호 재입력&quot; %&amp;gt;
    &amp;lt;%= password_field_tag :password_confirmation, nil, class: 'form-control' %&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;%= submit_tag &quot;가입하기&quot;, class: &quot;btn btn-default&quot; %&amp;gt;
&amp;lt;% end %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;app/controllers/identities_controller.rb&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class IdentitiesController &amp;lt; ApplicationController
  def new
    @identity = env['omniauth.identity']
  end
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;https://github.com/omniauth/omniauth/wiki/FAQ#omniauthfailureendpoint-does-not-redirect-in-development-mode&lt;/p&gt;

&lt;p&gt;http://railscasts.com/episodes/304-omniauth-identity?view=asciicast&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>tip - nil이 아닌경우에 method를 실행</title>
   <link href="http://localhost:4000/dev/ruby/rails/2016/09/22/call-methods-only-if-exists/"/>
   <updated>2016-09-22T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/ruby/rails/2016/09/22/call-methods-only-if-exists</id>
   <content type="html">&lt;p&gt;object가 nil이 아닌 경우에만 method를 실행하고 싶을 때가 있다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;self.send(:method) if self.respond_to?(:method)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Rails에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;.try()&lt;/code&gt;가 있다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/15787610/call-method-only-if-it-exists&quot;&gt;http://stackoverflow.com/questions/15787610/call-method-only-if-it-exists&lt;/a&gt;
&lt;a href=&quot;http://everydayrails.com/2011/04/28/rails-try-method.html&quot;&gt;http://everydayrails.com/2011/04/28/rails-try-method.html&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Heroku database로 local database 세팅하기</title>
   <link href="http://localhost:4000/dev/rails/heroku/2016/09/21/Heroku-database-dump-out/"/>
   <updated>2016-09-21T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/heroku/2016/09/21/Heroku-database-dump-out</id>
   <content type="html">&lt;h2 id=&quot;0codes-first&quot;&gt;0.Codes first&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;heroku pg:backups capture
curl -o latest.dump `heroku pg:backups public-url`
bin/rake db:reset
pg_restore --verbose --clean --no-acl --no-owner -h localhost -U myuser -d mydb latest.dump
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;1-heroku-version-확인&quot;&gt;1. Heroku version 확인&lt;/h2&gt;
&lt;p&gt;legacy heroku gem을 사용하고 있다면, gem을 제거하고 Heroku CLI를 다시 설치해야 합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;legacy heroku gem 제거 : &lt;code class=&quot;highlighter-rouge&quot;&gt;gem uninstall heroku --all&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Heroku toolbelk 설치 &lt;a href=&quot;https://devcenter.heroku.com/articles/heroku-command-line&quot;&gt;https://devcenter.heroku.com/articles/heroku-command-line&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2-heroku-db-dump-out&quot;&gt;2. Heroku db dump-out&lt;/h2&gt;

&lt;p&gt;CLI를 이용한 방법 (heroku version: 3.43.12)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;heroku pg:backups capture

curl -o latest.dump `heroku pg:backups public-url`
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;heroku.com을 이용한 방법&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;visit &lt;a href=&quot;https://postgres.heroku.com/databases&quot;&gt;https://postgres.heroku.com/databases&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;app의 database 선택&lt;/li&gt;
  &lt;li&gt;PG Backups &amp;gt; Capture &amp;gt; Download&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;3-local-database-생성재생성&quot;&gt;3. local database 생성/재생성&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bin/rake db:create

또는

bin/rake db:reset (기존 development db의 데이터는 삭제됩니다.)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;4-heroku-backup-db를-local-db에-복구시키기&quot;&gt;4. Heroku backup db를 local db에 복구시키기&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pg_restore --verbose --clean --no-acl --no-owner -h localhost -U myuser -d mydb latest.dump
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Capybara Summary</title>
   <link href="http://localhost:4000/2016/09/20/capybara-summary/"/>
   <updated>2016-09-20T00:00:00+09:00</updated>
   <id>http://localhost:4000/2016/09/20/capybara-summary</id>
   <content type="html">&lt;p&gt;regex 사용&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;expect(page.text).to match(/regex/)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;select tag에서 option 선택&lt;/p&gt;

&lt;p&gt;http://stackoverflow.com/questions/20134085/how-to-select-option-in-drop-down-using-capybara&lt;/p&gt;

&lt;h1 id=&quot;race-problem&quot;&gt;Race problem&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;AJAX로 database에 record를 생성하는 경우 하는 경우 race problem이 발생한다.&lt;/li&gt;
  &lt;li&gt;ajax가 완료될 때까지 기다리는 helper를 만들어서 사용한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# spec/support/wait_for_ajax.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;WaitForAjax&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;wait_for_ajax&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;Timeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Capybara&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;default_max_wait_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;kp&quot;&gt;loop&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;until&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;finished_all_ajax_requests?&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;finished_all_ajax_requests?&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;evaluate_script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'jQuery.active'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;zero?&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;RSpec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;WaitForAjax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;type: :feature&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;사용법&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#create_button'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;click&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;wait_for_ajax&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;change&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;by&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;param을-제외한-url만-테스트&quot;&gt;Param을 제외한 url만 테스트&lt;/h1&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;expect(page).to have_current_path(people_path, only_path: true)&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&quot;fill_in&quot;&gt;Fill_in&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;HTML
&lt;input id=&quot;name_input&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;spec
fill_in “name_input”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;http://stackoverflow.com/questions/5228371/how-to-get-current-path-with-query-string-using-capybara&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://robots.thoughtbot.com/automatically-wait-for-ajax-with-capybara&quot;&gt;credit : thoughbot&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Development DB를 Postresql로 세팅</title>
   <link href="http://localhost:4000/dev/rails/2016/09/17/rails-set-development-database-as-postgresql/"/>
   <updated>2016-09-17T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2016/09/17/rails-set-development-database-as-postgresql</id>
   <content type="html">&lt;p&gt;pg install&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;http://postgresapp.com/&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;pg user 확인
psql
\du : 유저 리스트
\l : database 리스트
\connect [database_name]
\dt : 연결된 database의 table 리스트&lt;/p&gt;

&lt;p&gt;Gemfile&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;gme ‘pg’&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;datbase.yml&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;ss&quot;&gt;development:
  adapter: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;postgresql&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;encoding: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unicode&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;database: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pnm_development&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;pool: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;timeout: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5000&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Console&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;bin/rake db:create
or&lt;/li&gt;
  &lt;li&gt;bin/rake db:reset&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Heroku dump db를 local에 import
pg_restore –verbose –clean –no-acl –no-owner -h localhost -U myuser -d pnm_development latest.dump&lt;/p&gt;

&lt;p&gt;https://devcenter.heroku.com/articles/heroku-postgres-import-export#restore-to-local-database&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Rails4 - nested form</title>
   <link href="http://localhost:4000/dev/rails/2016/09/13/Rails4-nested-form/"/>
   <updated>2016-09-13T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2016/09/13/Rails4-nested-form</id>
   <content type="html">&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;육아는 아이템전&lt;/code&gt;을 만들면서 사용한 nested form에 대해 정리해 둔다.&lt;/li&gt;
  &lt;li&gt;Parenting_neees_money에서 각 Item은 여러개의 keyword를 가지고 있고, keyword는 여러개의 data 로그를 가지고 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;has_many&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:keywords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;dependent: :destroy&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Keyword&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;belongs_to&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:item&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;has_many&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:logs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;dependent: :destroy&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Logs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;belongs_to&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:keyword&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Item을 추가하는 form에서 keyword도 추가하고 싶고, keyword에 대한 log도 3rd party api를 통해 가져와서 생성해야 했다.&lt;/li&gt;
  &lt;li&gt;Rails에서는 form에 association을 위한 field를 만들 수 있다.&lt;/li&gt;
  &lt;li&gt;우선 &lt;code class=&quot;highlighter-rouge&quot;&gt;Item&lt;/code&gt; model에 &lt;code class=&quot;highlighter-rouge&quot;&gt;accepts_nested_attributes_for :keywords, allow_destroy: true&lt;/code&gt; 를 추가한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;has_many&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:keywords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;dependent: :destroy&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;accepts_nested_attributes_for&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:keywords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;allow_destroy: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;accepts_nested_attributes_for :keywords&lt;/code&gt; 는 &lt;code class=&quot;highlighter-rouge&quot;&gt;keywords_attributes=&lt;/code&gt; method를 추가시켜준다.&lt;/li&gt;
  &lt;li&gt;기본적으로 create/update가 가능하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;allow_destroy: true&lt;/code&gt; option을 통해서 destroy도 가능하게 할 수 있다.&lt;/li&gt;
  &lt;li&gt;이제 strong parameter에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;keywords_attributes&lt;/code&gt;를 허용시켜주면 item.create 또는 item.udpate_attributes method를 통해 Keyword 를 create/update 할 수 있게 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ItemsController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationController&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;item_params&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;permit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;keywords_attributes: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'_destroy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;    
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;allow_destroy: true&lt;/code&gt; 옵션을 사용하려면 strong parameter에 &lt;code class=&quot;highlighter-rouge&quot;&gt;id, _destroy&lt;/code&gt; 를 허용시켜 줘야 한다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_destroy&lt;/code&gt;의 값은 &lt;code class=&quot;highlighter-rouge&quot;&gt;marked_for_destruction?&lt;/code&gt; 값에 대입되고, 해당 값이 &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;이면, item object가 &lt;code class=&quot;highlighter-rouge&quot;&gt;save&lt;/code&gt; 될 때, Keyword record가 삭제된다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;accepts_nested_attributes_for&lt;/code&gt; 는 원하는 만큼 depth를 만들 수 있다.&lt;/li&gt;
  &lt;li&gt;Item form을 통해서 Keywrod, Log record를 만들어야 되기에 Keyword model에도 accepts_nested_attributes_for를 추가해준다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Keyword&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;has_many&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:logs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;dependent: :destroy&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;accepts_nested_attributes_for&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:logs&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;이제 Keyword model에 &lt;code class=&quot;highlighter-rouge&quot;&gt;logs_attributes=&lt;/code&gt; method가 추가되었다.&lt;/li&gt;
  &lt;li&gt;Item controller의 strong parameter에 logs_attributes를 추가로 허용해 준다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ItemsController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationController&lt;/span&gt;
      &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;

      &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;item_params&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;permit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;keywords_attributes: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'_destroy'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;logs_attributes: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:log_date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]))&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;        
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;app/views/items/edit.html.erb&lt;/code&gt; 에 keyword field를 추가한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= form_for @item do |f| %&amp;gt;
    ...
    &amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fields_for&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:keywords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:wrapper&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%&amp;gt;
      &amp;lt;%= render 'keyword_fields', f: builder %&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% end &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&amp;gt;&lt;/span&gt;
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;:wrapper =&amp;gt; false &lt;/code&gt;는 기본적으로 생성되는 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;div class=&quot;fields&quot;&amp;gt;&lt;/code&gt; 를 없애준다.
    &lt;ul&gt;
      &lt;li&gt;table 내부에 추가할 때는 이 옵션을 사용한다.&lt;a href=&quot;https://github.com/ryanb/nested_form/wiki/How-To:-Render-nested-fields-inside-a-table&quot;&gt;참고&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;app/views/items/_keyword_fields.html.erb&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= f.text_field :name %&amp;gt;
    &amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;link_to_add_log&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object_id&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%&amp;gt;
    &amp;lt;%= f.hidden_field :_destroy %&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= link_to &quot;remove&quot;, &quot;#&quot;, class: &quot;remove_keyword&quot; %&amp;gt;
    &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;remove link를 클릭하면 javascript로 hidden_field인 &lt;code class=&quot;highlighter-rouge&quot;&gt;_destroy&lt;/code&gt;의 값을 &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;로 세팅하고 해당 form을 보이지 않게한다. &lt;code class=&quot;highlighter-rouge&quot;&gt;app/assets/javascripts/items.js&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;turbolinks:load&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;form&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;click&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;.remove_keyword&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'input[type=hidden]'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;closest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tr'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;app/helpers/items_helper.rb&lt;/code&gt;에 &lt;code class=&quot;highlighter-rouge&quot;&gt;link_to_add_log&lt;/code&gt; 메소드를 추가했다. Log는 해당 keyword에 대해 3rd party API를 통해 얻은 data를 기록한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;    &lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;ItemsHelper&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;link_to_add_log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;new_object&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;object_id&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;fields&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fields_for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:logs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;child_index: &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;log_field&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;f: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;link_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Add Log&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'#'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;class: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;update_nsa_data&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;data: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;fields: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fields&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;gsub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)})&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;미리 &lt;em&gt;Log&lt;/em&gt; form을 &lt;code class=&quot;highlighter-rouge&quot;&gt;Add Log&lt;/code&gt; 링크의 data attribute에 추가시켜둔다. javscript로 해당 링크를 클릭했을 때, data attribute에 있는 form을 dom에 붙여준다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;child_index: id&lt;/code&gt;로 keyword의 id가 아닌 &lt;em&gt;Log&lt;/em&gt; instance의 id를 사용하게 한다. id는 임의로 object_id를 사용하고, 실제 &lt;code class=&quot;highlighter-rouge&quot;&gt;Add Log&lt;/code&gt; 링크를 눌러 &lt;em&gt;Log&lt;/em&gt; form이 추가될 때, javascript 를 이용, 시간에 의해 생성된 unique id로 바꿔준다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;app/views/items/_log_field.html.erb&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= f.text_field :nmc %&amp;gt;
    &amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;text_field&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:npc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= f.text_field :log_date %&amp;gt;
    &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;app/assests/javascripts/items.js&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'form'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'click'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.update_nsa_data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;update_btn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// add new nsa_dat form&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;regexp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;RegExp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'g'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;after&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fields'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;regexp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// get 3rd party data and fill in input fields&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rails/rails/blob/master/activerecord/lib/active_record/nested_attributes.rb&quot;&gt;Rails github - nested_attributes.rb&lt;/a&gt;
&lt;a href=&quot;http://railscasts.com/episodes/196-nested-model-form-revised?view=asciicast&quot;&gt;RailsCast 196-nested-model-form&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Rails4 User Login - 처음부터</title>
   <link href="http://localhost:4000/dev/rails/2016/09/10/user-login/"/>
   <updated>2016-09-10T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2016/09/10/user-login</id>
   <content type="html">&lt;ul&gt;
  &lt;li&gt;[Michael Hartl의 Rails tutorial][railstutorial] 에 나온 user login 기능 부분을 정리해 본다.&lt;/li&gt;
  &lt;li&gt;User model 생성
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rails generate model User name:string email:string&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Validation 추가&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;		&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationRecord&lt;/span&gt;
		  &lt;span class=&quot;n&quot;&gt;before_save&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;downcase!&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		  &lt;span class=&quot;n&quot;&gt;validates&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;presence: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;length: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;maximum: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		  &lt;span class=&quot;no&quot;&gt;VALID_EMAIL_REGEX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i&lt;/span&gt;
		  &lt;span class=&quot;n&quot;&gt;validates&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;presence: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;length: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;maximum: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
		                    &lt;span class=&quot;ss&quot;&gt;format: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;with: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;VALID_EMAIL_REGEX&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
		                    &lt;span class=&quot;ss&quot;&gt;uniqueness: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;case_sensitive: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
	&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Email에 대해 index 추가
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rails generate migration add_index_to_users_email&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;		&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AddIndexToUsersEmail&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Migration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;5.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
		  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;change&lt;/span&gt;
		    &lt;span class=&quot;n&quot;&gt;add_index&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;unique: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
		  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
	&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Password 추가(1)
    &lt;ul&gt;
      &lt;li&gt;User 모델에 &lt;code class=&quot;highlighter-rouge&quot;&gt;has_secure_password&lt;/code&gt; 추가
        &lt;ul&gt;
          &lt;li&gt;method는 hashed password를 password_digest라는 attribute에 저장하도록 해준다.&lt;/li&gt;
          &lt;li&gt;password 와 password_confirmation 두 virtual attributes를 사용하게 한다.&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;authenticate&lt;/code&gt; method로  password가 맞는지 틀린지 알 수 있다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;        &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationRecord&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
          &lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
          &lt;span class=&quot;nf&quot;&gt;has_secure_password&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Password 추가(2)
    &lt;ul&gt;
      &lt;li&gt;password_digest attribute 추가
        &lt;ul&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ rails generate migration add_password_digest_to_users password_digest:string&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt; 에 bcrypt 추가
        &lt;ul&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;has_secure_password&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;bcrypt&lt;/code&gt; hash function을 이용한다.&lt;/li&gt;
          &lt;li&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;			&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bcrypt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;         &lt;span class=&quot;s1&quot;&gt;'3.1.11'&lt;/span&gt;
		&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Password validation 추가
    &lt;ul&gt;
      &lt;li&gt;최소 길이 6자
        &lt;ul&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;validates :password, presence: true, length: { minimum: 6 }&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Route.rb에 routing 추가
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;resources :users&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;User Controller(1)
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rails generate controller Users&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;new&lt;/code&gt; method
        &lt;ul&gt;
          &lt;li&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;            &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
                &lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;User Controller(2)
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;new.html.erb&lt;/code&gt; 에 form 추가
        &lt;ul&gt;
          &lt;li&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= form_for(@user) do |f| %&amp;gt;
          &amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;label&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= f.text_field :name %&amp;gt;

          &amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;label&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= f.email_field :email %&amp;gt;

          &amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;label&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= f.password_field :password %&amp;gt;

          &amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;label&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:password_confirmation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Confirmation&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= f.password_field :password_confirmation %&amp;gt;

          &amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;submit&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Create my account&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;class: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;btn btn-primary&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% end &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&amp;gt;&lt;/span&gt;
        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;User Controller(3)
  +&lt;code class=&quot;highlighter-rouge&quot;&gt;strong parameter&lt;/code&gt; 추가&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;         &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;user_params&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;permit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                           &lt;span class=&quot;ss&quot;&gt;:password_confirmation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;User Controller(4)
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;create&lt;/code&gt; method&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;          &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;
            &lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;save&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;flash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Welcome to the Sample App!&quot;&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;redirect_to&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'new'&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;User Controller(5)
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;new.html.erb&lt;/code&gt; 에 error message 추가&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= form_for(@user) do |f| %&amp;gt;
            &amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'shared/error_messages'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;&lt;/span&gt;
        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;        &lt;span class=&quot;c1&quot;&gt;#_error_messages.html.erb&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% if &lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;errors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;any?&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%&amp;gt;
          &amp;lt;div id=&quot;error_explanation&quot;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;alert alert-danger&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
              &lt;span class=&quot;no&quot;&gt;The&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contains&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= pluralize(@user.errors.count, &quot;error&quot;) %&amp;gt;.
            &amp;lt;/div&amp;gt;
            &amp;lt;ul&amp;gt;
            &amp;lt;% @user.errors.full_messages.each do |msg| %&amp;gt;
              &amp;lt;li&amp;gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% end &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/ul&amp;gt;
          &amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% end &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&amp;gt;&lt;/span&gt;
        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;proudction 환경에서 SSL 추가
    &lt;ul&gt;
      &lt;li&gt;Heroku domain(appname.herokuapp.com)에서는 별도의 SSL setting이 필요없음.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;        &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;# Force all access to the app over SSL, use Strict-Transport-Security,&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;# and use secure cookies.&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;force_ssl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Session Controller(1)
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt; rails generate controller Sessions new&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Session Controller(2)
    &lt;ul&gt;
      &lt;li&gt;Router에 log-in 관련 routing 추가&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;            &lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;    &lt;span class=&quot;s1&quot;&gt;'/login'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;   &lt;span class=&quot;ss&quot;&gt;to: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'sessions#new'&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;   &lt;span class=&quot;s1&quot;&gt;'/login'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;   &lt;span class=&quot;ss&quot;&gt;to: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'sessions#create'&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/logout'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;ss&quot;&gt;to: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'sessions#destroy'&lt;/span&gt;
        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Session Controller(3)
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/sessions/new.html.erb&lt;/code&gt; 에 log-in form 추가&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= form_for(:session, url: login_path) do |f| %&amp;gt;

          &amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;label&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= f.email_field :email, class: 'form-control' %&amp;gt;

          &amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;label&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= f.password_field :password, class: 'form-control' %&amp;gt;

          &amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;submit&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Log in&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;class: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;btn btn-primary&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% end &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&amp;gt;&lt;/span&gt;
        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Session Controller(4)
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;create&lt;/code&gt; method
        &lt;ul&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;flash.now&lt;/code&gt; 는 &lt;code class=&quot;highlighter-rouge&quot;&gt;flash&lt;/code&gt;와 다르게 추가적인 reqeust가 있을 시 사라짐.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;        &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_by&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;email: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;downcase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;authenticate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
              &lt;span class=&quot;c1&quot;&gt;# Log the user in and redirect to the user's show page.&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;flash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:danger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Invalid email/password combination'&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Not quite right!&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'new'&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;ApplicationController에 SessionHelper 추가&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ApplicationController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActionController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;protect_from_forgery&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;with: :exception&lt;/span&gt;
      &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SessionsHelper&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;app/helpers/sessions_helper.rb&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;    &lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;SessionsHelper&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# Logs in the given user.&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;log_in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:user_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# Returns the current logged-in user (if any).&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;current_user&lt;/span&gt;
            &lt;span class=&quot;vi&quot;&gt;@current_user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_by&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:user_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;logged_in?&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;nil?&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;# Logs out the current user.&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;log_out&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:user_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;vi&quot;&gt;@current_user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Session Controller(5)
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;create&lt;/code&gt; method에 login 추가&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find_by&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;email: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;downcase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;authenticate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;log_in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;redirect_to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;flash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:danger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Invalid email/password combination'&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'new'&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Session Controller(6)
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;destroy&lt;/code&gt; method에 logout 추가&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;destroy&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;log_out&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;redirect_to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root_url&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;+  [railstutorial]: https://www.railstutorial.org/book/_single-page
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Sublime Package</title>
   <link href="http://localhost:4000/dev/sublimetext/2016/09/10/my-sublime-package-usges/"/>
   <updated>2016-09-10T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/sublimetext/2016/09/10/my-sublime-package-usges</id>
   <content type="html">&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Jekyll&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;단순히 highlight snippet 때문에 사용. (ST2는 지원하지 않는다.)&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;MarkdownEditing&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;markdown tag (`, ** 등등) 둘러 쌓인 부분이 highlight된다.&lt;/li&gt;
  &lt;li&gt;link같은 경우엔 link name이 강조되고, 실제 url 부분이 dim처리 된다.&lt;/li&gt;
  &lt;li&gt;markdown으로 editing 할 때 훨씬 가독성이 좋아진다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SublimeERB&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ruby or rails 개발 시 필수&lt;/li&gt;
  &lt;li&gt;&amp;lt;% %&amp;gt; erb tag를 단축키(command + shift + .)를 이용해서 만들 수 있게 해준다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;keybinding&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[
    { &quot;keys&quot;: [&quot;command+shift+.&quot;], &quot;command&quot;: &quot;erb&quot; }
]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rails partial&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;View 파일의 특정부분을 선택하고 alt + p 를 누르면 partial file을 만들 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SideBarEnhancements&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;필수 package&lt;/li&gt;
  &lt;li&gt;sublime sidebar에서 파일 이동이 가능해집니다! (ST2는 지원하지 않음)&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Liquid syntax error - 'highlight' tag was never closed</title>
   <link href="http://localhost:4000/dev/jekyll/2016/09/10/Jekyll-tag-never-closed/"/>
   <updated>2016-09-10T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/jekyll/2016/09/10/Jekyll-tag-never-closed</id>
   <content type="html">&lt;p&gt;config.yml&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;na&quot;&gt;excerpt_separator&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;p&gt;all credit: &lt;a href=&quot;http://blog.slaks.net/2013-08-09/jekyll-tag-was-never-closed/&quot;&gt;Slaks&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Turbolinks & Google analytics</title>
   <link href="http://localhost:4000/dev/rails/google%20analytics/2016/09/09/turbolinks-google-analytics/"/>
   <updated>2016-09-09T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/google%20analytics/2016/09/09/turbolinks-google-analytics</id>
   <content type="html">&lt;p&gt;Turbolink는 AJAX로 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tag내 컨텐츠만 바꿔서 page loading time을 줄여준다.
GA는 page load시 마다 서버로 pageview 데이터를 전달하기 때문에 Turbolink를 사용하면 ajax로 이동한 page에 대해서는 GA로 분석 할 수 없다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;turbolinks:load&lt;/code&gt; 이벤트가 발생될 때 마다 GA로 pageview를 보내는 javascript code를 추가해서 해결할 수 있다.&lt;/p&gt;

&lt;p&gt;application.html.erb&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;head&amp;gt;
  &amp;lt;%= render 'layouts/google_analytics' %&amp;gt;
&amp;lt;/head&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;laytouts/_google_analytics.html.erb&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;production&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'GoogleAnalyticsObject'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)},&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parentNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;insertBefore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'script'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'https://www.google-analytics.com/analytics.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ga'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'create'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'XX-XXXXXXXX-X'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'auto'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'send'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'pageview'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;%&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;GoogleAnalytics: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;%&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;app/assets/javascripts/google_analytics.js.coffee&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;turbolinks:load&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;function&quot;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;set&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;location&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;send&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;pageview&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;a href=&quot;https://sheharyar.me/blog/using-google-analytics-in-rails-4-with-turbolinks/&quot;&gt;credit: sheharyar&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/18945464/rails-4-turbolinks-with-google-analytics/25050377#25050377&quot;&gt;credit: scottwb&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>document ready & Turbolinks</title>
   <link href="http://localhost:4000/dev/rails/2016/08/28/turbolinks-load-event/"/>
   <updated>2016-08-28T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2016/08/28/turbolinks-load-event</id>
   <content type="html">&lt;ul&gt;
  &lt;li&gt;turbolink 5 기준이다.
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$(document).ready&lt;/code&gt; 를 &lt;code class=&quot;highlighter-rouge&quot;&gt;$(document).on(&quot;turbolinks:load&quot;,&lt;/code&gt; 로 바꿔주면 된다.&lt;/li&gt;
      &lt;li&gt;turbolink github에 관련 내용 &lt;a href=&quot;https://github.com/turbolinks/turbolinks#running-javascript-when-a-page-loads&quot;&gt;링크&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://railscasts.com/episodes/390-turbolinks&quot;&gt;railscast&lt;/a&gt;를 보니 이전 버전에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;$(document).on(&quot;page:load&quot;,&lt;/code&gt; 를 추가해야 되었나보다.&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>Tips - Rails(레일즈) active model serializer</title>
   <link href="http://localhost:4000/dev/rails/2016/08/25/rails-active-model-serializer/"/>
   <updated>2016-08-25T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2016/08/25/rails-active-model-serializer</id>
   <content type="html">&lt;ul&gt;
  &lt;li&gt;Active record를 사용한다면, &lt;code class=&quot;highlighter-rouge&quot;&gt;.as_json only:&lt;/code&gt; 로 원하는 attribute만 json으로 만들 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;  &lt;span class=&quot;no&quot;&gt;Item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;as_json&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;only: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;id&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;abcde&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Attribute를 조합해서 새로운 data를 만들어야 된다면, &lt;code class=&quot;highlighter-rouge&quot;&gt;active_model_serializer&lt;/code&gt;를 사용하자.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;초기 세팅은 &lt;a href=&quot;https://github.com/rails-api/active_model_serializers&quot;&gt;active model serializer github&lt;/a&gt; 참고&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TaskSerializer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Serializer&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Date&lt;/span&gt; 
            &lt;span class=&quot;n&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;completed_at&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%Y-%m-%d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:Date&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;serializer class에 원하는 data를 return하는 method를 만들고, &lt;code class=&quot;highlighter-rouge&quot;&gt;attributes&lt;/code&gt;로 선언해주면, 해당 data를 가진 json을 serializer로 만들 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;    &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;json: &lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@task&lt;/span&gt;
  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;render&lt;/code&gt; 이외에서 json data를 만들 수도 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;        &lt;span class=&quot;vi&quot;&gt;@data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ArraySerializer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;completed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;each_serializer: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;TaskSerializer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_json&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;or&lt;/span&gt;
        &lt;span class=&quot;vi&quot;&gt;@datum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;TaskSerializer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_json&lt;/span&gt;
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;root: false&lt;/code&gt; option을 사용하면 model_name으로 된 key를 없앨 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;      &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@item&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;==&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;item: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~~~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;root: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;==&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~~~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]}&lt;/span&gt;
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;천자리구분점을 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;number_with_delimeter&lt;/code&gt;를 사용할 필요가 있다면, helper module을 include해준다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;    &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActionView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Helpers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;NumberHelper&lt;/span&gt;
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;active model serializer&lt;/code&gt;는 0.9버전과 0.10버전이 호환되지 않는다. 사용하는 버전에 맞는 api 문서를 참고하자.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;p&gt;Reference&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/rails-api/active_model_serializers/tree/0-9-stable&quot;&gt;active model serializer 0.9 api&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/5176718/how-to-use-the-number-to-currency-helper-method-in-the-model-rather-than-view&quot;&gt;stack overflow - How to use the “number_to_currency” helper method in the model rather than view?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>가치 기반 가격 (Value-based pricing)</title>
   <link href="http://localhost:4000/biz/pricing/2016/08/25/value-based-pricing/"/>
   <updated>2016-08-25T00:00:00+09:00</updated>
   <id>http://localhost:4000/biz/pricing/2016/08/25/value-based-pricing</id>
   <content type="html">&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;제조업인 경우엔 원가에 저절한 마진을 더해서 판매가가 결정된다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Software는 제조업의 가격결정구조가 잘 맞지 않는데,
    &lt;ul&gt;
      &lt;li&gt;우선 원가 책정이 어려운데, 어느정도 개발을 하고 나면 한계비용이 0에 수렵하기 때문이다.&lt;/li&gt;
      &lt;li&gt;또 기존에 없는 제품을 만드는 경우가 많기에, 벤치마크할 경쟁제품이 없는 경우가 많다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;제품의 가격을 설정하는 것은 매우 중요한 결정이다.
    &lt;ul&gt;
      &lt;li&gt;Startup은 고객의 관심을 끌거나 초기 사용에 대한 허들을 낮추기 위해 가격을 낮추는 경우가 많다
        &lt;ul&gt;
          &lt;li&gt;대부분은 한 번 결정하고 다시는 바꾸지 않는다. &lt;code class=&quot;highlighter-rouge&quot;&gt;(BAD)&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;또는 충분한 구매의사가 있는 고객에게 해당 기능을 무료로 제공한다.&lt;/p&gt;

        &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;가격을 한 번 결정하고 바꾸지 않으면, 뭔가가 잘못 된 것.&quot; Evernote CEO, Phiil Libin&lt;/code&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;가격을 결정하는 것은 한 번으로 끝나는 것이 아니라, 환경에 맞게 지속적으로 적절한 가격선(price point)를 찾아가는 과정이다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;대부분 원가(cost)와 판매가(price)의 Gap에 집중을 한다.
    &lt;ul&gt;
      &lt;li&gt;이 gap은 판매자 입장의 판매동기이다.&lt;/li&gt;
      &lt;li&gt;하지만 고객의 구매동기는 원가와 판매가의 Gap에서 만들어지지 않는다.
        &lt;ul&gt;
          &lt;li&gt;판매가(price)와 고객이 받는 가치(percived value) 사이의 Gap이 고객이 구매하는 동기가 된다.  &lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;아무도 구매하지 않는다면, price와 percieved value 사이의 Gap이 작거나 아예 없는 것이다.&quot; - Michael Dearing&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;center&gt;
&lt;img src=&quot;https://embedwistia-a.akamaihd.net/deliveries/30f7495b541e5e179aa4f387a38b5ffa547fd0ee.jpg?image_crop_resized=640x360&quot; alt=&quot;cost-price-percieved-value&quot; /&gt;
from. &lt;a href=&quot;https://www.sequoiacap.com/article/pricing-your-product&quot;&gt;Sequoia&lt;/a&gt;
&lt;/center&gt;
    &lt;p&gt;&lt;br /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Percieved value는 나라별로 다를 수 있다. 따라서 같은 price일 때, 각 나라의 유저별로 느끼는 구매동기가 다르다.&lt;/li&gt;
      &lt;li&gt;판매가 줄어들면 판매가를 낮춰서 price와 percieved value 사이의 Gap을 늘리려는 노력을 한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Perceived value를 수치로 표현한다.
    &lt;ul&gt;
      &lt;li&gt;고객이 받는 가치는 세 가지 중 하나이다.
        &lt;ul&gt;
          &lt;li&gt;더 우수하다.&lt;/li&gt;
          &lt;li&gt;더 빠르다.&lt;/li&gt;
          &lt;li&gt;더 저렴하다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;고객의 현재 상태와 제품을 사용하는 미래를 비교해서 나타나는 숫자의 차이가 Perceived Value이다.
        &lt;ul&gt;
          &lt;li&gt;개발기간을 X시간 만큼 단축&lt;/li&gt;
          &lt;li&gt;판매수익 X달러 증가&lt;/li&gt;
          &lt;li&gt;이익률 X퍼센트 감축&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Perceived value의 일정 비율을 price로 정해라.
    &lt;ul&gt;
      &lt;li&gt;비율은 산업/경쟁수준에 따라 다르지만 대략 20% 정도가 적절&lt;/li&gt;
      &lt;li&gt;80%는 낯선 제품을 구매해서 기존 업무 프로세스에 넣는 위험을 감수하는 고객의 몫으로 둬라.&lt;/li&gt;
      &lt;li&gt;비율은 고객이 가져가는 risk에 따라서 달라진다.
        &lt;ul&gt;
          &lt;li&gt;월 구독료 방식은 고객이 언제든 원할 때 취소가 가능하기에 선지급 모델보다 가격을 높게 책정할 수 있다.&lt;/li&gt;
        &lt;/ul&gt;

        &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;내 사업은 아주 간단하다. 고객은 2달러만 내면 10달러의 가치를 얻을 수 있다. 성공 비결은 따로 없다.” - Steve Walske, Parametric Technologies CEO&lt;/code&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;제품을 똑같은 가치로 인식하는 고객은 없다.
    &lt;ul&gt;
      &lt;li&gt;누구는 지금 가격이 적당하다고 느끼고 있지만, 누군가는 지금보다 10배는 더 지불해도 된다고 생각한다.&lt;/li&gt;
      &lt;li&gt;고객이 어떻게 제품을 이용하는지부터 시작해, percieved value에 따라 고객 segemnt를 나눈다.&lt;/li&gt;
      &lt;li&gt;LinkedIn case
        &lt;ul&gt;
          &lt;li&gt;LinkedIn은 90% 유저가 자주 사용하지 않는 기능을 확인했다.&lt;/li&gt;
          &lt;li&gt;이 기능을 이용하는 10%의 heavy 유저가 느끼는 가치는 90% 유저가 느끼는 가치보다 더 크다고 결론을 내리고, 2005년 이 기능을 premium 계정으로 분리해서 유료화했다.&lt;/li&gt;
          &lt;li&gt;Heavy 유저의 구매의사는 충분했고, 지난 4분기동안 $280M의 수익을 만들어냈다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;가격결정을 위한 가설 설정이 필요하다.
    &lt;ul&gt;
      &lt;li&gt;A/B Test를 통한 데이터도 중요하지만,&lt;/li&gt;
      &lt;li&gt;데이터에만 의존해서 결정하지 않도록 한다.
        &lt;ul&gt;
          &lt;li&gt;고객과 직원의 feedback&lt;/li&gt;
          &lt;li&gt;경쟁사의 동향&lt;/li&gt;
          &lt;li&gt;너의 직감, 모두를 활용하자.&lt;/li&gt;
        &lt;/ul&gt;

        &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;가격을 정하는 것은 수학문제(math problem)가 아니다. 의사결정 문제(judgement problem)다. - Michael Dearing&lt;/code&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Concorde case
    &lt;ul&gt;
      &lt;li&gt;첫 6년간 적자&lt;/li&gt;
      &lt;li&gt;마켓리서치에서 실제 탑승고객에게 질문을 했는데,
        &lt;ul&gt;
          &lt;li&gt;대부분 비서들이 예약을 담당해서, 정확한 가격을 모르고 있었지만,&lt;/li&gt;
          &lt;li&gt;탑승고객이 생각하기에 티켓 가격이 높을 것이라고 추측함.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;이 후 실제 고객이 지불할것이라고 생각하는 수준으로 티켓 가격을 조정 (이전 가격의 2배)
        &lt;ul&gt;
          &lt;li&gt;높은 가격과 함께, 초 엘리트를 위한 서비스로 포지셔닝&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;높은 가격에도 순이익 500M 파운드를 벌어들임&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;한국의 환경&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;한국에서 '가치'를 기준으로 가격을 정하는 것은 미국에 비해 상대적으로 어렵다. 특히 소프트웨어처럼 눈에 보이지 않는 제품에 대한 가치를 잘 인정하지 않고, 심하다 싶을 정도로 고객의 예산과 투자 의지에 모든 것을 맞추려는 경향이 있다. - MIT Startup Bible&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;Reference&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://theadaptivemarketer.com/2012/01/14/a-pricing-lesson-from-the-concorde/&quot;&gt;Concorde case&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.sequoiacap.com/article/pricing-your-product&quot;&gt;Sequoia&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://disciplinedentrepreneurship.com/&quot;&gt;MIT Startup Bible - (원제: Diciplined Entrepreeurship)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.onthe.co/blog/how-to-price-a-saas-solution&quot;&gt;How to price a SaaS solution&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Rails(레일즈) bootstrap 세팅.</title>
   <link href="http://localhost:4000/dev/rails/bootstrap/2016/08/21/initial-settings-rails-bootstrap/"/>
   <updated>2016-08-21T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/bootstrap/2016/08/21/initial-settings-rails-bootstrap</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/twbs/bootstrap-sass&quot;&gt;bootstrap-sass&lt;/a&gt; gem 초기 세팅 과정이다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Stylesheets&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;application.css를 application.scss로 바꾼다.&lt;/li&gt;
  &lt;li&gt;application.scss에 추가.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;    &lt;span class=&quot;vi&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;bootstrap-sprockets&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;bootstrap&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;application.css에 있었던 require문 제거&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;    &lt;span class=&quot;o&quot;&gt;*=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;require_self&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;*=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;require_tree&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Javascripts&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;application.js에 추가.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;    &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jquery&lt;/span&gt;
    &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bootstrap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sprockets&lt;/span&gt;
  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
</content>
 </entry>
 
 <entry>
   <title>Rails(레일즈) scope</title>
   <link href="http://localhost:4000/dev/rails/2016/08/20/rails-scope/"/>
   <updated>2016-08-20T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2016/08/20/rails-scope</id>
   <content type="html">&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;scope&lt;/code&gt;은 자주 사용하는 query를 method형태로 사용 할 수 있게 해준다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;scope&lt;/code&gt;은 &lt;code class=&quot;highlighter-rouge&quot;&gt;def self.&lt;/code&gt; class method와 같다.&lt;/li&gt;
  &lt;li&gt;argument를 넘겨 줄 수도 있다.
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;scope :created_before, -&amp;gt;(time) { where(&quot;created_at &amp;lt; ?&quot;, time) }&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;AND&lt;/code&gt; 컨디션으로 여러 개의 scope을 합칠 수도 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationRecord&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scope&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:active&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;state: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'active'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scope&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:inactive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;state: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'inactive'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;active&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;inactive&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# SELECT &quot;users&quot;.* FROM &quot;users&quot; WHERE &quot;users&quot;.&quot;state&quot; = 'active' AND &quot;users&quot;.&quot;state&quot; = 'inactive'&lt;/span&gt;
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;OR&lt;/code&gt; 컨디션은 Rails4 기준으로 없다.
    &lt;ul&gt;
      &lt;li&gt;Rails5에 &lt;code class=&quot;highlighter-rouge&quot;&gt;.or&lt;/code&gt;이 추가된다.&lt;/li&gt;
      &lt;li&gt;Rails4에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;.arel_table&lt;/code&gt;을 사용한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;            &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;arel_table&lt;/span&gt;
            &lt;span class=&quot;no&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:complete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;or&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:complete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</content>
 </entry>
 
 <entry>
   <title>테스트 자동화 - guard</title>
   <link href="http://localhost:4000/dev/rails/2016/08/20/rails-guard/"/>
   <updated>2016-08-20T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2016/08/20/rails-guard</id>
   <content type="html">&lt;h3 id=&quot;guard&quot;&gt;Guard&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  group :test do
    gem 'guard-rspec'
  end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bundle exec guard init rspec&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Guardfile&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Note: The cmd option is now required due to the increasing number of ways
#       rspec may be run, below are examples of the most common uses.
#  * bundler: 'bundle exec rspec'
#  * bundler binstubs: 'bin/rspec'
#  * spring: 'bin/rspec' (This will use spring if running and you have
#                          installed the spring binstubs per the docs)
#  * zeus: 'zeus rspec' (requires the server to be started separately)
#  * 'just' rspec: 'rspec'    

guard :rspec, cmd: &quot;zeus rspec&quot; do
  require &quot;guard/rspec/dsl&quot;
  dsl = Guard::RSpec::Dsl.new(self)

  # RSpec files
  rspec = dsl.rspec
  watch(rspec.spec_helper) { rspec.spec_dir }
  watch(rspec.spec_support) { rspec.spec_dir }
  watch(rspec.spec_files)

  # Ruby files
  ruby = dsl.ruby
  dsl.watch_spec_files_for(ruby.lib_files)

  # Rails files
  rails = dsl.rails(view_extensions: %w(erb haml slim))
  dsl.watch_spec_files_for(rails.app_files)
  dsl.watch_spec_files_for(rails.views)

  watch(rails.controllers) do |m|
    [
      rspec.spec.call(&quot;routing/#{m[1]}_routing&quot;),
      rspec.spec.call(&quot;controllers/#{m[1]}_controller&quot;),
      rspec.spec.call(&quot;acceptance/#{m[1]}&quot;)
    ]
  end

  # Rails config changes
  watch(rails.spec_helper)     { rspec.spec_dir }
  watch(rails.routes)          { &quot;#{rspec.spec_dir}/routing&quot; }
  watch(rails.app_controller)  { &quot;#{rspec.spec_dir}/controllers&quot; }

  # Capybara features specs
  watch(rails.view_dirs)     { |m| rspec.spec.call(&quot;features/#{m[1]}&quot;) }
  watch(rails.layouts)       { |m| rspec.spec.call(&quot;features/#{m[1]}&quot;) }

  # Turnip features and steps
  watch(%r{^spec/acceptance/(.+)\.feature$})
  watch(%r{^spec/acceptance/steps/(.+)_steps\.rb$}) do |m|
    Dir[File.join(&quot;**/#{m[1]}.feature&quot;)][0] || &quot;spec/acceptance&quot;
  end
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.gitignore&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/Spring
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

</content>
 </entry>
 
 <entry>
   <title>nil?, empty?, blank? 그리고 present?</title>
   <link href="http://localhost:4000/dev/rails/2016/08/19/nil-empty-blank-present/"/>
   <updated>2016-08-19T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2016/08/19/nil-empty-blank-present</id>
   <content type="html">&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;item.comment&lt;/code&gt;가 존재하는지를 &lt;code class=&quot;highlighter-rouge&quot;&gt;.empty?&lt;/code&gt;를 통해 확인했다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;item.comment&lt;/code&gt;가 &lt;code class=&quot;highlighter-rouge&quot;&gt;nil&lt;/code&gt;인 경우에 exception이 발생한다.&lt;/li&gt;
  &lt;li&gt;nil?, empty?는 ruby에서 제공한다.&lt;/li&gt;
  &lt;li&gt;blank?, present?는 rails에서 제공한다.&lt;/li&gt;
  &lt;li&gt;자세한 내용은 &lt;a href=&quot;http://stackoverflow.com/questions/885414/a-concise-explanation-of-nil-v-empty-v-blank-in-ruby-on-rails&quot;&gt;stackoverflow&lt;/a&gt;를 참고.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Sass 파일에서 css 파일 import</title>
   <link href="http://localhost:4000/dev/rails/2016/08/19/import-css-in-scss/"/>
   <updated>2016-08-19T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2016/08/19/import-css-in-scss</id>
   <content type="html">&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@import 'style.css'&lt;/code&gt; 라고 어딘가에서 찾았고, development 환경에서는 문제없이 import된다.&lt;/li&gt;
  &lt;li&gt;style.css는 lib/assets/stylesheets 에 위치해 있다.&lt;/li&gt;
  &lt;li&gt;production 환경에서는 style.css에서 RoutingError가 발생했다.&lt;/li&gt;
  &lt;li&gt;이유는 잘모르겠지만, &lt;code class=&quot;highlighter-rouge&quot;&gt;@import 'style'&lt;/code&gt;로 바꾸니, development/production 환경에서 문제없이 import된다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@import&lt;/code&gt;는 sass 문법이다.
    &lt;ul&gt;
      &lt;li&gt;sass guide를 찾아보니, @import 뒤에 파일명만 쓰면된다. 확장자는 필요없다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@import 'style'&lt;/code&gt;은 app/assets/stylesheets/, lib/assets/stylesheets/, vendor/assets/stylesheets/ 폴더에서 style.scss, style.sass, style.css 파일을 찾는다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://sass-lang.com/guide&quot;&gt;Sass guide&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>git local strorage에 staging 파일을 제거.</title>
   <link href="http://localhost:4000/dev/git/2016/08/19/git-remove-staging-files/"/>
   <updated>2016-08-19T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/git/2016/08/19/git-remove-staging-files</id>
   <content type="html">&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git rm --cached &amp;lt;file_name&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;directory인경우 &lt;code class=&quot;highlighter-rouge&quot;&gt;-r&lt;/code&gt; 옵션을 사용
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git rm -r --cached &amp;lt;directory_name&amp;gt;&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;http://clubmate.fi/git-removing-files-from-the-staging-area-and-the-tree/&quot;&gt;Clubmate.fi&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>SQL for Cohort analysis</title>
   <link href="http://localhost:4000/growth/cohort/2016/08/16/sql-for-cohort-analysis/"/>
   <updated>2016-08-16T00:00:00+09:00</updated>
   <id>http://localhost:4000/growth/cohort/2016/08/16/sql-for-cohort-analysis</id>
   <content type="html">&lt;ul&gt;
  &lt;li&gt;가입일로 보는 cohort는 크게 의미가 없기에, 특정 이벤트 액션별로 비교한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;  &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;distinct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;active_users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;distinct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;future_activity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;retained_users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;distinct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;future_activity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;distinct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;retention&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;left&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;join&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;future_activity&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;future_activity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_id&lt;/span&gt;
           &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;future_activity&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interval&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'1 day'&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;https://www.periscopedata.com/blog/how-to-calculate-cohort-retention-in-sql.html&quot;&gt;Periscope blog&lt;/a&gt;
&lt;a href=&quot;http://www.sangkon.com/2015/11/21/using_sql_for_cohort/&quot;&gt;sangkon blog&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Jekyll - category array를 sub-category처럼 사용하기</title>
   <link href="http://localhost:4000/dev/jekyll/2016/08/14/jekyll-sub-category/"/>
   <updated>2016-08-14T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/jekyll/2016/08/14/jekyll-sub-category</id>
   <content type="html">&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt; category의 sub category를 만들려고 했다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;dev&lt;/code&gt; category 페이지에서 sub category별로 post title을 모아서 보여주려고 했다.&lt;/li&gt;
  &lt;li&gt;Jekyll의 category관련 variable
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;site.categories&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;site.categories[CATEGORY_NAME] or site.categories.CATEGORY_NAME&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;page.categories&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;각 post의 front matter에서 category를 지정할 수 있다.
    &lt;ul&gt;
      &lt;li&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;      ---
      layout: post
comments: true
      title: Rails Integration Test
      category: [dev, jekyll]
      ---
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Jekyll은 template language로 &lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid&lt;/a&gt;를 쓴다.&lt;/li&gt;
  &lt;li&gt;폴더를 보기 좋게 만든다. (front matter에 category가 정의되어 있지 않으면, _posts 폴더 내의 폴더 구조를 category로 본다.
    &lt;ul&gt;
      &lt;li&gt;_posts
        &lt;ul&gt;
          &lt;li&gt;biz&lt;/li&gt;
          &lt;li&gt;book&lt;/li&gt;
          &lt;li&gt;dev&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;dev category 페이지는 &lt;code class=&quot;highlighter-rouge&quot;&gt;categories/dev&lt;/code&gt;로 접근하게 한다.
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/categories/dev/index.html&lt;/code&gt; 을 만든다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;/categories/dev/index.html
    &lt;ul&gt;
      &lt;li&gt;front matter에 category를 dev로 정의&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;      ---
      layout: default
      Title : Dev. Category
      category: dev
      ---
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;빈 array 만들기&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-liquid&quot; data-lang=&quot;liquid&quot;&gt;        
          &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;sub_categories&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
        
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;front matter에 정의된 category 내의 모든 post에 대해 iteration&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-liquid&quot; data-lang=&quot;liquid&quot;&gt;        
          &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;post&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;in&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;site.categories[page.category]&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
        
      &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;dev category가 아닌 경우 sub_categories array에 추가&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-liquid&quot; data-lang=&quot;liquid&quot;&gt;        
          &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;category&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dev&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;sub_categories&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;sub_categories&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;category&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;endif&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
        
      &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;마지막으로 중복된 sub_category를 없애준다.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-liquid&quot; data-lang=&quot;liquid&quot;&gt;      
        &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;sub_categories&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;sub_categories&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;uniq&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
      
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;다른 category에서도 sub_category 배열을 만드는 코드를 쓸 거라서 &lt;code class=&quot;highlighter-rouge&quot;&gt;/inclues/get_sub_category.html&lt;/code&gt;로 따로 만든다.
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/categories/dev/index.html&lt;/code&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-liquid&quot; data-lang=&quot;liquid&quot;&gt;      
        &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get_sub_category&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
      
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/includes/get_sub_category.html&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-liquid&quot; data-lang=&quot;liquid&quot;&gt;      
        &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;sub_categories&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;post&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;in&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;site.categories[page.category]&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;category&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;in&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;post.categories&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;category&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dev&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
              &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;sub_categories&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;sub_categories&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;category&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;endif&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;endfor&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;endfor&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;sub_categories&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;sub_categories&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;uniq&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
      
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;
&lt;ul&gt;
  &lt;li&gt;Jekyll에 대해서 알게된 것 정리&lt;/li&gt;
  &lt;li&gt;liquid tag를 escaping 하는 법
    &lt;ul&gt;
      &lt;li&gt;raw tag 사용 {% raw %}  {% endraw %}
        &lt;ul&gt;
          &lt;li&gt;이 방법으론 endraw 를 escaping 하지 못함&lt;/li&gt;
          &lt;li&gt;endraw는 {{ “{% endraw “ }}%} 이 방법으로 escaping.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Array empty check
    &lt;ul&gt;
      &lt;li&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-liquid&quot; data-lang=&quot;liquid&quot;&gt;      
        &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;sub_categories&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
      
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;
&lt;p&gt;참고링크&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/user/acinteractivedesign/search?query=jekyll&quot;&gt;Thomas Bradley - jekyll cast&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jekyllrb.com/docs/variables/&quot;&gt;jekyll variable&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/smutnyleszek/9803727&quot;&gt;jekyll &amp;amp; liquid cheat sheet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://taylor.fausak.me/2013/02/03/escaping-liquid-tags/&quot;&gt;Escaping liquid tags&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jekyll/jekyll/issues/2538&quot;&gt;Checking for empty&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Rails Integration Test</title>
   <link href="http://localhost:4000/dev/rails/2016/08/13/integration-test/"/>
   <updated>2016-08-13T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2016/08/13/integration-test</id>
   <content type="html">&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rails g integration_test &amp;lt;NAME&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;`get &lt;path&gt;, &lt;params_hash&gt;
&lt;/params_hash&gt;&lt;/path&gt;    &lt;ul&gt;
      &lt;li&gt;get search_path, search: “keyword1”&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Testing XHR (AJAX) requests&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;    &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ajax request&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;articles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;xhr: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;assert_equal&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'hello world'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;body&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;assert_equal&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;content_type&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h2 id=&quot;model-생성--삭제--변경없음-확인&quot;&gt;Model 생성 / 삭제 / 변경없음 확인&lt;/h2&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;  &lt;span class=&quot;n&quot;&gt;assert_difference&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Model.count'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;---&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.reload&lt;/code&gt; DB의 값을 다시 읽어옴&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;p&gt;참고링크&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://robots.thoughtbot.com/how-we-test-rails-applications&quot;&gt;How We test Rails Application&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://edgeguides.rubyonrails.org/testing.html#testing-xhr-ajax-requests&quot;&gt;Rails guide &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>빠른 테스트 - Guard & Zeus</title>
   <link href="http://localhost:4000/dev/rails/2016/08/13/fast-test-with-guard-and-zeus/"/>
   <updated>2016-08-13T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2016/08/13/fast-test-with-guard-and-zeus</id>
   <content type="html">&lt;h3 id=&quot;zeus--guard&quot;&gt;&lt;a href=&quot;https://github.com/burke/zeus&quot;&gt;Zeus&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/guard/guard&quot;&gt;Guard&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;zeus는 rails app을 미리 로딩해 두어서, test 실행 마다 로딩에 걸리는 시간을 줄일 수 있습니다.&lt;/p&gt;

&lt;p&gt;guard는 파일이 변경되는 것을 인지해서, 변경된 spec 파일의 test suits만 실행시켜줍니다.&lt;/p&gt;

&lt;p&gt;guard 설정은 &lt;a href=&quot;/dev/rails/2016/08/20/rails-guard/&quot;&gt;테스트 자동화 - guard&lt;/a&gt;를 참고하세요.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;group :development, :test do
  gem 'zeus'
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Zeus 설치 &amp;amp; 시작&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zeus start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;GuardFile 수정&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;guard :rspec, cmd: &quot;zeus rspec&quot; do
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Guard 시작&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;guard
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;http://railscasts.com/episodes/413-fast-tests&quot;&gt;RailsCasts&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Ruby - Naver 검색광고 API</title>
   <link href="http://localhost:4000/dev/rails/2016/08/11/naver-searchad-api-ruby/"/>
   <updated>2016-08-11T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2016/08/11/naver-searchad-api-ruby</id>
   <content type="html">&lt;ul&gt;
  &lt;li&gt;API Access License 와 Secret Key를 발급받자. (&lt;a href=&quot;https://manage.searchad.naver.com/&quot;&gt;네이버 검색광고&lt;/a&gt; 에 들어가 도구 &amp;gt; API 사용관리)&lt;/li&gt;
  &lt;li&gt;Header에 다음을 추가해야 한다.
    &lt;ul&gt;
      &lt;li&gt;X-Timestamp&lt;/li&gt;
      &lt;li&gt;X-API-KEY&lt;/li&gt;
      &lt;li&gt;X-Customer&lt;/li&gt;
      &lt;li&gt;X-Signature&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;  &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'net/http'&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;service_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://api.naver.com&quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;URI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;service_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Net&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;HTTP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Net&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;HTTP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;use_ssl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;scheme&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'https'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;body&lt;/span&gt;
  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;X-Signature은 Secret Key를 이용 아래 data를 sha256-hmac 으로 인코딩해야 한다.
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;data&lt;/code&gt; = &lt;code class=&quot;highlighter-rouge&quot;&gt;Milliseconds since Unix Epoch&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;'.'&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;http method&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;'.'&lt;/code&gt; + &lt;code class=&quot;highlighter-rouge&quot;&gt;request_uri&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;  &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Base64'&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'openssl'&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;ms_since_epoch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;floor&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ms_since_epoch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;http_method&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;api_path&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;digest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;OpenSSL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Digest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Digest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'sha256'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;signature&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Base64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;encode64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;OpenSSL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;HMAC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;digest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;digest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secret_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;strip&lt;/span&gt;
  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;parameter를 추가해서 원하는 API 결과를 얻자.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;  &lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;URI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://api.naver.com/keywordstool&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;showDetail: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;hintKeywords: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Keywords&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;,&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;URI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;encode_www_form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Net&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;HTTP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;X-Timestamp의 값은 Signature 생성시 ms_since_epoch과 같은 값이어야 된다.&lt;/li&gt;
  &lt;li&gt;(update)
    &lt;ul&gt;
      &lt;li&gt;다른 mac에서 아래 에러가 난다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;    .../ruby/2.3.0/net/http.rb:933:in `connect_nonblock': SSL_connect returned=1 errno=0 state=error: certificate verify failed (OpenSSL::SSL::SSLError)
    &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;왜 이런지 모르겠다. &lt;a href=&quot;http://mislav.net/2013/07/ruby-openssl/&quot;&gt;Googling 결과&lt;/a&gt;는 state=SSLv3 인 에러에 대한 얘기다.&lt;/li&gt;
  &lt;li&gt;우선은 아래와 같이 땜질을 해서 넘어가자.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;      &lt;span class=&quot;n&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;verify_mode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;OpenSSL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SSL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;VERIFY_NONE&lt;/span&gt;
     &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;
&lt;p&gt;참고링크&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.shopify.com/api/tutorials/webhooks#verify-webhook&quot;&gt;Spotify verify webhook tutorial&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/naver/searchad-apidoc&quot;&gt;Naver 검색광고 document&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Chrome에서 video tag 사용</title>
   <link href="http://localhost:4000/dev/web/2016/07/29/chrome-video-tag/"/>
   <updated>2016-07-29T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/web/2016/07/29/chrome-video-tag</id>
   <content type="html">&lt;p&gt;Chrome limits the number of videos/audio files to 4 or 6 (I can’t remember which) so, as brianchirls mentions, you need to set the preload attribute, although you need to set it to none.&lt;/p&gt;

&lt;p&gt;My recommendation is to provide a poster image (via the poster attribute) for all your videos and to set preload=”none” to all of them. That way the browser only actually tries to load them if the user actively clicks the play button.&lt;/p&gt;

&lt;p&gt;Alternatively you could set the first 4/6 videos with preload=”metadata” and the rest to preload=”none”.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Carrierwave video thumbnailer</title>
   <link href="http://localhost:4000/dev/rails/2016/07/29/carrierwave-video-thumbnailer/"/>
   <updated>2016-07-29T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2016/07/29/carrierwave-video-thumbnailer</id>
   <content type="html">&lt;p&gt;video tag의 poster attribute에 동영상이 재생되기 전에 보이는 이미지를 정해 줄 수 있다.
w3school에서 poster attribute를 설정하지 않으면 동영상의 첫 frame이 사용된다고 했는데, Chrome에서는 이미지가 뜨지않았다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/evrone/carrierwave-video-thumbnailer&quot;&gt;carrierwave-video-thumbnailer gem&lt;/a&gt;을 이용해서 간단히 poster attribute 용 이미지를 만들었다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MediaUploader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CarrierWave&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Uploader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CarrierWave&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Video&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Thumbnailer&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:thumb&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;process_extensions&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;VIDEO_EXTENSIONS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                        &lt;span class=&quot;ss&quot;&gt;thumbnail: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;format: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'png'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                    &lt;span class=&quot;ss&quot;&gt;quality: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                    &lt;span class=&quot;ss&quot;&gt;size: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                    &lt;span class=&quot;ss&quot;&gt;strip: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                    &lt;span class=&quot;ss&quot;&gt;logger: &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;full_filename&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;for_file&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;png_name&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;for_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;version_name&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;thumb&lt;/code&gt;이라는 버전으로 만들어 두었다. 쓸 때는 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;Model&amp;gt;.media.thumb.url&lt;/code&gt; 으로 사용하면 된다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;heroku에 ffmpegthumbnailer 설치 *
&lt;code class=&quot;highlighter-rouge&quot;&gt;carrierwave-video-thumbnailer gem&lt;/code&gt;은 &lt;code class=&quot;highlighter-rouge&quot;&gt;ffmpegthumbnailer&lt;/code&gt;을 이용한다.
Heroku로 배포시 buildpack 형태로 설치해줘야 한다.
buildpack은 &lt;a href=&quot;https://elements.heroku.com/buildpacks/akomic/heroku-buildpack-ffmpegthumbnailer&quot;&gt;Heroku Element&lt;/a&gt;에서 검색해서 사용하면 편리하다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;small&gt;참고링크&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;&lt;a href=&quot;/dev/heroku/2016/07/25/Heroku-multi-build-packs/&quot;&gt;Heroku multi-buildpack 사용하기&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Single Uploader Multiple Content Type</title>
   <link href="http://localhost:4000/2016/07/26/single-uploader-multiple-content-type/"/>
   <updated>2016-07-26T00:00:00+09:00</updated>
   <id>http://localhost:4000/2016/07/26/single-uploader-multiple-content-type</id>
   <content type="html">
</content>
 </entry>
 
 <entry>
   <title>Heroku에 ffmpeg 설치하기 (Multi buildpack 사용하기)</title>
   <link href="http://localhost:4000/dev/heroku/2016/07/25/Heroku-multi-build-packs/"/>
   <updated>2016-07-25T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/heroku/2016/07/25/Heroku-multi-build-packs</id>
   <content type="html">&lt;p&gt;Video 파일 변환을 위해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;carrierwave-video&lt;/code&gt; gem을 사용했다. 이 gem은 ffmpeg를 사용하기 때문에, Heroku에도 ffmpeg를 설치해 주어야 한다.&lt;/p&gt;

&lt;p&gt;carrierwave-video는 audio codec으로 fdk-aac를 사용한다. License 문제로 fdk-aac를 포함한 binary file을 공식적으로 배포하지는 않고, 직접 compile해서 사용해야 한다.&lt;/p&gt;

&lt;p&gt;ffmpeg 3.0 부터는 audio codec이 안정화 되었다고 하니, 기본 audio codec인 &lt;code class=&quot;highlighter-rouge&quot;&gt;aac&lt;/code&gt;를 사용하기로 했다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;  &lt;span class=&quot;n&quot;&gt;process_extensions&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;VIDEO_EXTENSIONS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;encode_video: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:mp4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;audio_codec: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;aac&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Heroku에 ffmpeg를 설치하기 위해서는 buildpack을 이용해야 한다.
여러개의 buildpack을 이젠 deprecated되었지만, 아직 잘 동작하는 ddollar의 &lt;a href=&quot;https://github.com/ddollar/heroku-buildpack-multi&quot;&gt;heroku-buildpack-multi&lt;/a&gt;를 사용했다.&lt;/p&gt;

&lt;p&gt;.buildpacks에 buildpack 정보를 넣는다. buildpack은 직접 생성할 수도 있고, &lt;a href=&quot;https://elements.heroku.com/buildpacks&quot;&gt;Heroku element&lt;/a&gt;에서 다른 사람이 만든 buildpack을 검색할 수도 있다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;  &amp;lt;.buildpacks&amp;gt;
    https://github.com/jonathanong/heroku-buildpack-ffmpeg-latest.git&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;heroku에 ddollar의 buildpack을 추가한다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;  &amp;gt; heroku buildpacks:add https://github.com/ddollar/heroku-buildpack-multi&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;  &amp;gt; git push heroku master&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</content>
 </entry>
 
 <entry>
   <title>Bootstrap collapse의 event handler 사용하기</title>
   <link href="http://localhost:4000/dev/bootstrap/2016/07/24/bootrap-collapse/"/>
   <updated>2016-07-24T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/bootstrap/2016/07/24/bootrap-collapse</id>
   <content type="html">&lt;p&gt;우선 만든것을 먼저 보여드린다.&lt;/p&gt;

&lt;p&gt;감춰진 상태
&lt;img src=&quot;/assets/collapse1.png&quot; alt=&quot;collapsed&quot; /&gt;&lt;/p&gt;

&lt;p&gt;펼쳐진 상태
&lt;img src=&quot;/assets/collapse2.png&quot; alt=&quot;expanded&quot; /&gt;&lt;/p&gt;

&lt;p&gt;bootstrap collapse에서 저 화살표를 만들어주지 않는다.
대신에 감춰지거나, 펼쳐질 때 event handler를 제공한다.&lt;/p&gt;

&lt;p&gt;bootstrap 2와 bootstrap 3의 event 이름이 달라졌다.
저 처럼 bootstrap3 이용하면서 bootstrap 2 manual 보는 사람이 없기를…&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.collapse'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'show.bs.collapse'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;siblings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;h4 &amp;gt; i&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;removeClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;fa-angle-right&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;fa-angle-down&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.collapse'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hidden.bs.collapse'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;siblings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;h4 &amp;gt; i&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;removeClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;fa-angle-down&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;fa-angle-right&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;siglings(&quot;a&quot;)&lt;/code&gt;로 collapse되지 않는 부분을 찾고, &lt;code class=&quot;highlighter-rouge&quot;&gt;find(&quot;h4 &amp;gt; i&quot;)&lt;/code&gt;로 fond awsome의 i tag를 선택한다.
i tag의 class를 바꿔주면 화살표가 바뀌게 된다.&lt;/p&gt;

&lt;p&gt;보여줄 때는 화살표가 먼저 바뀌고 보여지는게 왠지 익숙하고, 감춰질 때는 감춰지고 난 뒤에 화살표가 바뀌는게 익숙하다.
(왜 그런지는.. 잘 모르겠지만)&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;show&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;hide&lt;/code&gt; 는 animation을 기다리지 않고 바로 전달되는 event이고, &lt;code class=&quot;highlighter-rouge&quot;&gt;shown&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;hidden&lt;/code&gt;은 animation이 다 완료된 이후에 전달되는 event이다.&lt;/p&gt;

&lt;p&gt;적절하게 &lt;code class=&quot;highlighter-rouge&quot;&gt;show&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;hidden&lt;/code&gt; event를 사용했다.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;small&gt;Google it!&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;bootstrap 3 collapse&lt;/small&gt;&lt;br /&gt;
&lt;small&gt;jquery addClass&lt;/small&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>model이 없는 form의 입력을 validation 이후에도 유지하기.</title>
   <link href="http://localhost:4000/dev/rails/2016/07/21/repopulate-non-model-form-field/"/>
   <updated>2016-07-21T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2016/07/21/repopulate-non-model-form-field</id>
   <content type="html">&lt;p&gt;Rails는 많은 일을 해줘서, 가끔은 이게 Rails에서 해주는것인지 브라우저에서 해주는 것인지 헷갈릴 때가 있다.&lt;/p&gt;

&lt;p&gt;비밀번호가 틀렸을 때, id값을 유지하는 것도 model을 사용한다면 form에 인스턴스를 사용하는 것 만으로 해결된다.&lt;/p&gt;

&lt;p&gt;&amp;lt; in Session Controller file &amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'new'&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&amp;lt; in new.html.erb &amp;gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;	&lt;span class=&quot;n&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ara house의 로그인은 별도의 model없이 session을 이용하는데,
그래서 params에 email이 있는지 확인하고, 있으면 다시 input field에 넣어주는 작업이 필요하다.
이건 Rails가 해주지 않는 것 같다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= f.email_field :email, value: if parmams.key?(&quot;email&quot;) then params[:email] else &quot;&quot; end %&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;login 실패 시, email이 input에 그대로 남아있는지 확인하는 test를 login integration test에 추가한다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;users_login_test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rb&lt;/span&gt;

	&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;assert_select&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'form input[type=email][value=&quot;123&quot;]'&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;small&gt;참고링크&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;&lt;a href=&quot;http://stackoverflow.com/questions/4129229/rails-restoring-contents-of-non-model-form-that-uses-form-tag&quot;&gt;Stackoverflow&lt;/a&gt;&lt;/small&gt;
&lt;small&gt;&lt;a href=&quot;http://stackoverflow.com/questions/17710948/how-to-assert-the-value-of-an-input-element-with-assert-select&quot;&gt;Stackoverflow - test input value&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>모바일 Layout - View port</title>
   <link href="http://localhost:4000/dev/html/2016/07/19/set-viewport/"/>
   <updated>2016-07-19T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/html/2016/07/19/set-viewport</id>
   <content type="html">&lt;p&gt;Viewport는 웹페이지에서 눈에 보이는 영역을 말한다.&lt;/p&gt;

&lt;p&gt;Desktop기준으로 만들어 둔 web page는 모바일의 viewport보다 훨씬 큰데,
모바일 브라우저는 이걸 화면크기에 맞게 축소시켜서 보여준다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=device-width, initial-scale=1.0, maximum-scale=1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;HTML5부터 viewport를 개발자가 제어 할 수 있게 되었다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;width=device-width&lt;/code&gt;는 모바일 기기의 화면 크기를 web page의 width로 맞추고,&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;initial-scale=1.0&lt;/code&gt;은 모바일 브라우저에서 처음 로딩 될 때, 축소하거나 확대하지 않게한다.&lt;/p&gt;

&lt;p&gt;Viewport 적용 전
&lt;img src=&quot;http://www.w3schools.com/css/img_viewport1.png&quot; alt=&quot;before-viewport&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Viewport 적용 후
&lt;img src=&quot;http://www.w3schools.com/css/img_viewport2.png&quot; alt=&quot;after-viewport&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;small&gt;참고링크&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;&lt;a href=&quot;http://www.w3schools.com/css/css_rwd_viewport.asp&quot;&gt;w3schools viewport&lt;/a&gt;&lt;/small&gt;
&lt;small&gt;&lt;a href=&quot;http://www.telerik.com/blogs/responsive-design-with-twitter-bootstrap&quot;&gt;Responsive design with twitter bootstrap&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>EXIF 옵션에 따라 이미지 회전시키기</title>
   <link href="http://localhost:4000/dev/rails/2016/07/18/rotate-image/"/>
   <updated>2016-07-18T00:00:00+09:00</updated>
   <id>http://localhost:4000/dev/rails/2016/07/18/rotate-image</id>
   <content type="html">&lt;p&gt;모바일에서 세로로 찍은 사진을 &lt;a href=&quot;https://ara-house.herokuapp.com&quot;&gt;ara house&lt;/a&gt;에 올리니, 데스크탑에서 제대로 보이지 않았다.
모바일에서는 브라우저가 자동으로 이미지를 회전시켜주지만, 데스크탑에서는 그렇지 않은가보다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.railstutorial.org/&quot;&gt;rails tutorial&lt;/a&gt;를 충실히 따라한 ara house는 이미지 작업을 &lt;code class=&quot;highlighter-rouge&quot;&gt;Carrierwave gem&lt;/code&gt;을 이용해서 구현했다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PictureUploader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CarrierWave&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Uploader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CarrierWave&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;MiniMagick&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;process&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:auto_orient&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;auto_orient&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;manipulate!&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;tap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:auto_orient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;process&lt;/code&gt;를 이용해서 이미지가 업로드 될 때 callback method를 걸어둘 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;manipulate!&lt;/code&gt;는 이미지 프로세싱에 사용하는 MiniMagick command를 사용할 수 있게 해준다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;image.tap(&amp;amp;:auto_orient)&lt;/code&gt;는 MiniMagick의 &lt;code class=&quot;highlighter-rouge&quot;&gt;-auto_orient&lt;/code&gt; command을 실행시킨다. 이 command가 EXIF에 따라서 적절히 이미지를 회전시켜주는 고마운 아이이다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.tap&lt;/code&gt;은 object를 단순히 block으로 넘기고, 결과값을 다시 return해주는 method이다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;def auto_orient&lt;/code&gt;를 아래와 같이 module에 method를 추가하는 형태로 하고 싶었는데, 파일을 어디에 둬야될지 몰라서 &lt;code class=&quot;highlighter-rouge&quot;&gt;PictureUploader&lt;/code&gt;에 넣어뒀다.&lt;/p&gt;

&lt;p&gt;아는 분 계시면 좀 알려주세요.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;CarrierWave&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;MiniMagick&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;auto_orient&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;manipulate!&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;tap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:auto_orient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;small&gt;참고링크&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;&lt;a href=&quot;http://www.imagemagick.org/script/command-line-options.php#auto-orient&quot;&gt;MiniMagick auto_orient method&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;&lt;a href=&quot;https://gist.github.com/tanraya/7438337&quot;&gt;Carrierwave auto_orient&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;

</content>
 </entry>
 

</feed>
